// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vg/src/vg.proto

package vg;

public final class Vg {
  private Vg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Enumeration of the classifications of snarls
   * </pre>
   *
   * Protobuf enum {@code vg.SnarlType}
   */
  public enum SnarlType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNCLASSIFIED = 0;</code>
     */
    UNCLASSIFIED(0),
    /**
     * <code>ULTRABUBBLE = 1;</code>
     */
    ULTRABUBBLE(1),
    /**
     * <code>UNARY = 2;</code>
     */
    UNARY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNCLASSIFIED = 0;</code>
     */
    public static final int UNCLASSIFIED_VALUE = 0;
    /**
     * <code>ULTRABUBBLE = 1;</code>
     */
    public static final int ULTRABUBBLE_VALUE = 1;
    /**
     * <code>UNARY = 2;</code>
     */
    public static final int UNARY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SnarlType valueOf(int value) {
      return forNumber(value);
    }

    public static SnarlType forNumber(int value) {
      switch (value) {
        case 0: return UNCLASSIFIED;
        case 1: return ULTRABUBBLE;
        case 2: return UNARY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SnarlType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SnarlType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SnarlType>() {
            public SnarlType findValueByNumber(int number) {
              return SnarlType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return vg.Vg.getDescriptor().getEnumTypes().get(0);
    }

    private static final SnarlType[] VALUES = values();

    public static SnarlType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SnarlType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:vg.SnarlType)
  }

  public interface GraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Graph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    java.util.List<vg.Vg.Node> 
        getNodeList();
    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    vg.Vg.Node getNode(int index);
    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    int getNodeCount();
    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    java.util.List<? extends vg.Vg.NodeOrBuilder> 
        getNodeOrBuilderList();
    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    vg.Vg.NodeOrBuilder getNodeOrBuilder(
        int index);

    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    java.util.List<vg.Vg.Edge> 
        getEdgeList();
    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    vg.Vg.Edge getEdge(int index);
    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    int getEdgeCount();
    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    java.util.List<? extends vg.Vg.EdgeOrBuilder> 
        getEdgeOrBuilderList();
    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    vg.Vg.EdgeOrBuilder getEdgeOrBuilder(
        int index);

    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    java.util.List<vg.Vg.Path> 
        getPathList();
    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    vg.Vg.Path getPath(int index);
    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    int getPathCount();
    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    java.util.List<? extends vg.Vg.PathOrBuilder> 
        getPathOrBuilderList();
    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    vg.Vg.PathOrBuilder getPathOrBuilder(
        int index);
  }
  /**
   * <pre>
   * *Graphs* are collections of nodes and edges.
   * They can represent subgraphs of larger graphs
   * or be wholly-self-sufficient.
   * Protobuf memory limits of 67108864 bytes mean we typically keep the size
   * of them small generating graphs as collections of smaller subgraphs.
   * </pre>
   *
   * Protobuf type {@code vg.Graph}
   */
  public  static final class Graph extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Graph)
      GraphOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Graph.newBuilder() to construct.
    private Graph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Graph() {
      node_ = java.util.Collections.emptyList();
      edge_ = java.util.Collections.emptyList();
      path_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Graph(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                node_ = new java.util.ArrayList<vg.Vg.Node>();
                mutable_bitField0_ |= 0x00000001;
              }
              node_.add(
                  input.readMessage(vg.Vg.Node.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                edge_ = new java.util.ArrayList<vg.Vg.Edge>();
                mutable_bitField0_ |= 0x00000002;
              }
              edge_.add(
                  input.readMessage(vg.Vg.Edge.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                path_ = new java.util.ArrayList<vg.Vg.Path>();
                mutable_bitField0_ |= 0x00000004;
              }
              path_.add(
                  input.readMessage(vg.Vg.Path.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          node_ = java.util.Collections.unmodifiableList(node_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          edge_ = java.util.Collections.unmodifiableList(edge_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          path_ = java.util.Collections.unmodifiableList(path_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Graph_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Graph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Graph.class, vg.Vg.Graph.Builder.class);
    }

    public static final int NODE_FIELD_NUMBER = 1;
    private java.util.List<vg.Vg.Node> node_;
    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    public java.util.List<vg.Vg.Node> getNodeList() {
      return node_;
    }
    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    public java.util.List<? extends vg.Vg.NodeOrBuilder> 
        getNodeOrBuilderList() {
      return node_;
    }
    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    public int getNodeCount() {
      return node_.size();
    }
    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    public vg.Vg.Node getNode(int index) {
      return node_.get(index);
    }
    /**
     * <pre>
     * The `Node`s that make up the graph.
     * </pre>
     *
     * <code>repeated .vg.Node node = 1;</code>
     */
    public vg.Vg.NodeOrBuilder getNodeOrBuilder(
        int index) {
      return node_.get(index);
    }

    public static final int EDGE_FIELD_NUMBER = 2;
    private java.util.List<vg.Vg.Edge> edge_;
    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    public java.util.List<vg.Vg.Edge> getEdgeList() {
      return edge_;
    }
    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    public java.util.List<? extends vg.Vg.EdgeOrBuilder> 
        getEdgeOrBuilderList() {
      return edge_;
    }
    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    public int getEdgeCount() {
      return edge_.size();
    }
    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    public vg.Vg.Edge getEdge(int index) {
      return edge_.get(index);
    }
    /**
     * <pre>
     * The `Edge`s that connect the `Node`s in the graph.
     * </pre>
     *
     * <code>repeated .vg.Edge edge = 2;</code>
     */
    public vg.Vg.EdgeOrBuilder getEdgeOrBuilder(
        int index) {
      return edge_.get(index);
    }

    public static final int PATH_FIELD_NUMBER = 3;
    private java.util.List<vg.Vg.Path> path_;
    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    public java.util.List<vg.Vg.Path> getPathList() {
      return path_;
    }
    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    public java.util.List<? extends vg.Vg.PathOrBuilder> 
        getPathOrBuilderList() {
      return path_;
    }
    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    public int getPathCount() {
      return path_.size();
    }
    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    public vg.Vg.Path getPath(int index) {
      return path_.get(index);
    }
    /**
     * <pre>
     * A set of named `Path`s that visit sequences of oriented `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Path path = 3;</code>
     */
    public vg.Vg.PathOrBuilder getPathOrBuilder(
        int index) {
      return path_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < node_.size(); i++) {
        output.writeMessage(1, node_.get(i));
      }
      for (int i = 0; i < edge_.size(); i++) {
        output.writeMessage(2, edge_.get(i));
      }
      for (int i = 0; i < path_.size(); i++) {
        output.writeMessage(3, path_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < node_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, node_.get(i));
      }
      for (int i = 0; i < edge_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, edge_.get(i));
      }
      for (int i = 0; i < path_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, path_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Graph)) {
        return super.equals(obj);
      }
      vg.Vg.Graph other = (vg.Vg.Graph) obj;

      boolean result = true;
      result = result && getNodeList()
          .equals(other.getNodeList());
      result = result && getEdgeList()
          .equals(other.getEdgeList());
      result = result && getPathList()
          .equals(other.getPathList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodeCount() > 0) {
        hash = (37 * hash) + NODE_FIELD_NUMBER;
        hash = (53 * hash) + getNodeList().hashCode();
      }
      if (getEdgeCount() > 0) {
        hash = (37 * hash) + EDGE_FIELD_NUMBER;
        hash = (53 * hash) + getEdgeList().hashCode();
      }
      if (getPathCount() > 0) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPathList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Graph parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Graph parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Graph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Graph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Graph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Graph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Graph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Graph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Graph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Graph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Graph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Graph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Graph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *Graphs* are collections of nodes and edges.
     * They can represent subgraphs of larger graphs
     * or be wholly-self-sufficient.
     * Protobuf memory limits of 67108864 bytes mean we typically keep the size
     * of them small generating graphs as collections of smaller subgraphs.
     * </pre>
     *
     * Protobuf type {@code vg.Graph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Graph)
        vg.Vg.GraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Graph_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Graph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Graph.class, vg.Vg.Graph.Builder.class);
      }

      // Construct using vg.Vg.Graph.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodeFieldBuilder();
          getEdgeFieldBuilder();
          getPathFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeBuilder_ == null) {
          node_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodeBuilder_.clear();
        }
        if (edgeBuilder_ == null) {
          edge_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          edgeBuilder_.clear();
        }
        if (pathBuilder_ == null) {
          path_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          pathBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Graph_descriptor;
      }

      public vg.Vg.Graph getDefaultInstanceForType() {
        return vg.Vg.Graph.getDefaultInstance();
      }

      public vg.Vg.Graph build() {
        vg.Vg.Graph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Graph buildPartial() {
        vg.Vg.Graph result = new vg.Vg.Graph(this);
        int from_bitField0_ = bitField0_;
        if (nodeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            node_ = java.util.Collections.unmodifiableList(node_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.node_ = node_;
        } else {
          result.node_ = nodeBuilder_.build();
        }
        if (edgeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            edge_ = java.util.Collections.unmodifiableList(edge_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.edge_ = edge_;
        } else {
          result.edge_ = edgeBuilder_.build();
        }
        if (pathBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            path_ = java.util.Collections.unmodifiableList(path_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.path_ = path_;
        } else {
          result.path_ = pathBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Graph) {
          return mergeFrom((vg.Vg.Graph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Graph other) {
        if (other == vg.Vg.Graph.getDefaultInstance()) return this;
        if (nodeBuilder_ == null) {
          if (!other.node_.isEmpty()) {
            if (node_.isEmpty()) {
              node_ = other.node_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodeIsMutable();
              node_.addAll(other.node_);
            }
            onChanged();
          }
        } else {
          if (!other.node_.isEmpty()) {
            if (nodeBuilder_.isEmpty()) {
              nodeBuilder_.dispose();
              nodeBuilder_ = null;
              node_ = other.node_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodeFieldBuilder() : null;
            } else {
              nodeBuilder_.addAllMessages(other.node_);
            }
          }
        }
        if (edgeBuilder_ == null) {
          if (!other.edge_.isEmpty()) {
            if (edge_.isEmpty()) {
              edge_ = other.edge_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEdgeIsMutable();
              edge_.addAll(other.edge_);
            }
            onChanged();
          }
        } else {
          if (!other.edge_.isEmpty()) {
            if (edgeBuilder_.isEmpty()) {
              edgeBuilder_.dispose();
              edgeBuilder_ = null;
              edge_ = other.edge_;
              bitField0_ = (bitField0_ & ~0x00000002);
              edgeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEdgeFieldBuilder() : null;
            } else {
              edgeBuilder_.addAllMessages(other.edge_);
            }
          }
        }
        if (pathBuilder_ == null) {
          if (!other.path_.isEmpty()) {
            if (path_.isEmpty()) {
              path_ = other.path_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePathIsMutable();
              path_.addAll(other.path_);
            }
            onChanged();
          }
        } else {
          if (!other.path_.isEmpty()) {
            if (pathBuilder_.isEmpty()) {
              pathBuilder_.dispose();
              pathBuilder_ = null;
              path_ = other.path_;
              bitField0_ = (bitField0_ & ~0x00000004);
              pathBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPathFieldBuilder() : null;
            } else {
              pathBuilder_.addAllMessages(other.path_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Graph parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Graph) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<vg.Vg.Node> node_ =
        java.util.Collections.emptyList();
      private void ensureNodeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          node_ = new java.util.ArrayList<vg.Vg.Node>(node_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Node, vg.Vg.Node.Builder, vg.Vg.NodeOrBuilder> nodeBuilder_;

      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public java.util.List<vg.Vg.Node> getNodeList() {
        if (nodeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(node_);
        } else {
          return nodeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public int getNodeCount() {
        if (nodeBuilder_ == null) {
          return node_.size();
        } else {
          return nodeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public vg.Vg.Node getNode(int index) {
        if (nodeBuilder_ == null) {
          return node_.get(index);
        } else {
          return nodeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public Builder setNode(
          int index, vg.Vg.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.set(index, value);
          onChanged();
        } else {
          nodeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public Builder setNode(
          int index, vg.Vg.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public Builder addNode(vg.Vg.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.add(value);
          onChanged();
        } else {
          nodeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public Builder addNode(
          int index, vg.Vg.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.add(index, value);
          onChanged();
        } else {
          nodeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public Builder addNode(
          vg.Vg.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.add(builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public Builder addNode(
          int index, vg.Vg.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public Builder addAllNode(
          java.lang.Iterable<? extends vg.Vg.Node> values) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, node_);
          onChanged();
        } else {
          nodeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public Builder clearNode() {
        if (nodeBuilder_ == null) {
          node_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public Builder removeNode(int index) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.remove(index);
          onChanged();
        } else {
          nodeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public vg.Vg.Node.Builder getNodeBuilder(
          int index) {
        return getNodeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public vg.Vg.NodeOrBuilder getNodeOrBuilder(
          int index) {
        if (nodeBuilder_ == null) {
          return node_.get(index);  } else {
          return nodeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public java.util.List<? extends vg.Vg.NodeOrBuilder> 
           getNodeOrBuilderList() {
        if (nodeBuilder_ != null) {
          return nodeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(node_);
        }
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public vg.Vg.Node.Builder addNodeBuilder() {
        return getNodeFieldBuilder().addBuilder(
            vg.Vg.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public vg.Vg.Node.Builder addNodeBuilder(
          int index) {
        return getNodeFieldBuilder().addBuilder(
            index, vg.Vg.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * The `Node`s that make up the graph.
       * </pre>
       *
       * <code>repeated .vg.Node node = 1;</code>
       */
      public java.util.List<vg.Vg.Node.Builder> 
           getNodeBuilderList() {
        return getNodeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Node, vg.Vg.Node.Builder, vg.Vg.NodeOrBuilder> 
          getNodeFieldBuilder() {
        if (nodeBuilder_ == null) {
          nodeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Node, vg.Vg.Node.Builder, vg.Vg.NodeOrBuilder>(
                  node_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        return nodeBuilder_;
      }

      private java.util.List<vg.Vg.Edge> edge_ =
        java.util.Collections.emptyList();
      private void ensureEdgeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          edge_ = new java.util.ArrayList<vg.Vg.Edge>(edge_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Edge, vg.Vg.Edge.Builder, vg.Vg.EdgeOrBuilder> edgeBuilder_;

      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public java.util.List<vg.Vg.Edge> getEdgeList() {
        if (edgeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(edge_);
        } else {
          return edgeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public int getEdgeCount() {
        if (edgeBuilder_ == null) {
          return edge_.size();
        } else {
          return edgeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public vg.Vg.Edge getEdge(int index) {
        if (edgeBuilder_ == null) {
          return edge_.get(index);
        } else {
          return edgeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public Builder setEdge(
          int index, vg.Vg.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgeIsMutable();
          edge_.set(index, value);
          onChanged();
        } else {
          edgeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public Builder setEdge(
          int index, vg.Vg.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.set(index, builderForValue.build());
          onChanged();
        } else {
          edgeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public Builder addEdge(vg.Vg.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgeIsMutable();
          edge_.add(value);
          onChanged();
        } else {
          edgeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public Builder addEdge(
          int index, vg.Vg.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgeIsMutable();
          edge_.add(index, value);
          onChanged();
        } else {
          edgeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public Builder addEdge(
          vg.Vg.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.add(builderForValue.build());
          onChanged();
        } else {
          edgeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public Builder addEdge(
          int index, vg.Vg.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.add(index, builderForValue.build());
          onChanged();
        } else {
          edgeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public Builder addAllEdge(
          java.lang.Iterable<? extends vg.Vg.Edge> values) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, edge_);
          onChanged();
        } else {
          edgeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public Builder clearEdge() {
        if (edgeBuilder_ == null) {
          edge_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          edgeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public Builder removeEdge(int index) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.remove(index);
          onChanged();
        } else {
          edgeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public vg.Vg.Edge.Builder getEdgeBuilder(
          int index) {
        return getEdgeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public vg.Vg.EdgeOrBuilder getEdgeOrBuilder(
          int index) {
        if (edgeBuilder_ == null) {
          return edge_.get(index);  } else {
          return edgeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public java.util.List<? extends vg.Vg.EdgeOrBuilder> 
           getEdgeOrBuilderList() {
        if (edgeBuilder_ != null) {
          return edgeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(edge_);
        }
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public vg.Vg.Edge.Builder addEdgeBuilder() {
        return getEdgeFieldBuilder().addBuilder(
            vg.Vg.Edge.getDefaultInstance());
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public vg.Vg.Edge.Builder addEdgeBuilder(
          int index) {
        return getEdgeFieldBuilder().addBuilder(
            index, vg.Vg.Edge.getDefaultInstance());
      }
      /**
       * <pre>
       * The `Edge`s that connect the `Node`s in the graph.
       * </pre>
       *
       * <code>repeated .vg.Edge edge = 2;</code>
       */
      public java.util.List<vg.Vg.Edge.Builder> 
           getEdgeBuilderList() {
        return getEdgeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Edge, vg.Vg.Edge.Builder, vg.Vg.EdgeOrBuilder> 
          getEdgeFieldBuilder() {
        if (edgeBuilder_ == null) {
          edgeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Edge, vg.Vg.Edge.Builder, vg.Vg.EdgeOrBuilder>(
                  edge_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          edge_ = null;
        }
        return edgeBuilder_;
      }

      private java.util.List<vg.Vg.Path> path_ =
        java.util.Collections.emptyList();
      private void ensurePathIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          path_ = new java.util.ArrayList<vg.Vg.Path>(path_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> pathBuilder_;

      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public java.util.List<vg.Vg.Path> getPathList() {
        if (pathBuilder_ == null) {
          return java.util.Collections.unmodifiableList(path_);
        } else {
          return pathBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public int getPathCount() {
        if (pathBuilder_ == null) {
          return path_.size();
        } else {
          return pathBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public vg.Vg.Path getPath(int index) {
        if (pathBuilder_ == null) {
          return path_.get(index);
        } else {
          return pathBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public Builder setPath(
          int index, vg.Vg.Path value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathIsMutable();
          path_.set(index, value);
          onChanged();
        } else {
          pathBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public Builder setPath(
          int index, vg.Vg.Path.Builder builderForValue) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.set(index, builderForValue.build());
          onChanged();
        } else {
          pathBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public Builder addPath(vg.Vg.Path value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathIsMutable();
          path_.add(value);
          onChanged();
        } else {
          pathBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public Builder addPath(
          int index, vg.Vg.Path value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathIsMutable();
          path_.add(index, value);
          onChanged();
        } else {
          pathBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public Builder addPath(
          vg.Vg.Path.Builder builderForValue) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.add(builderForValue.build());
          onChanged();
        } else {
          pathBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public Builder addPath(
          int index, vg.Vg.Path.Builder builderForValue) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.add(index, builderForValue.build());
          onChanged();
        } else {
          pathBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public Builder addAllPath(
          java.lang.Iterable<? extends vg.Vg.Path> values) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, path_);
          onChanged();
        } else {
          pathBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public Builder clearPath() {
        if (pathBuilder_ == null) {
          path_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          pathBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public Builder removePath(int index) {
        if (pathBuilder_ == null) {
          ensurePathIsMutable();
          path_.remove(index);
          onChanged();
        } else {
          pathBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public vg.Vg.Path.Builder getPathBuilder(
          int index) {
        return getPathFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public vg.Vg.PathOrBuilder getPathOrBuilder(
          int index) {
        if (pathBuilder_ == null) {
          return path_.get(index);  } else {
          return pathBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public java.util.List<? extends vg.Vg.PathOrBuilder> 
           getPathOrBuilderList() {
        if (pathBuilder_ != null) {
          return pathBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(path_);
        }
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public vg.Vg.Path.Builder addPathBuilder() {
        return getPathFieldBuilder().addBuilder(
            vg.Vg.Path.getDefaultInstance());
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public vg.Vg.Path.Builder addPathBuilder(
          int index) {
        return getPathFieldBuilder().addBuilder(
            index, vg.Vg.Path.getDefaultInstance());
      }
      /**
       * <pre>
       * A set of named `Path`s that visit sequences of oriented `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Path path = 3;</code>
       */
      public java.util.List<vg.Vg.Path.Builder> 
           getPathBuilderList() {
        return getPathFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> 
          getPathFieldBuilder() {
        if (pathBuilder_ == null) {
          pathBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder>(
                  path_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          path_ = null;
        }
        return pathBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Graph)
    }

    // @@protoc_insertion_point(class_scope:vg.Graph)
    private static final vg.Vg.Graph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Graph();
    }

    public static vg.Vg.Graph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Graph>
        PARSER = new com.google.protobuf.AbstractParser<Graph>() {
      public Graph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Graph(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Graph> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Graph> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Graph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Node)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Sequence of DNA bases represented by the Node.
     * </pre>
     *
     * <code>string sequence = 1;</code>
     */
    java.lang.String getSequence();
    /**
     * <pre>
     * Sequence of DNA bases represented by the Node.
     * </pre>
     *
     * <code>string sequence = 1;</code>
     */
    com.google.protobuf.ByteString
        getSequenceBytes();

    /**
     * <pre>
     * A name provides an identifier.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * A name provides an identifier.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Each Node has a unique positive nonzero ID within its Graph.
     * </pre>
     *
     * <code>int64 id = 3;</code>
     */
    long getId();
  }
  /**
   * <pre>
   * *Nodes* store sequence data.
   * </pre>
   *
   * Protobuf type {@code vg.Node}
   */
  public  static final class Node extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Node)
      NodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Node.newBuilder() to construct.
    private Node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Node() {
      sequence_ = "";
      name_ = "";
      id_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              sequence_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {

              id_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Node_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Node.class, vg.Vg.Node.Builder.class);
    }

    public static final int SEQUENCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object sequence_;
    /**
     * <pre>
     * Sequence of DNA bases represented by the Node.
     * </pre>
     *
     * <code>string sequence = 1;</code>
     */
    public java.lang.String getSequence() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sequence_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Sequence of DNA bases represented by the Node.
     * </pre>
     *
     * <code>string sequence = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSequenceBytes() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequence_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * A name provides an identifier.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A name provides an identifier.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 3;
    private long id_;
    /**
     * <pre>
     * Each Node has a unique positive nonzero ID within its Graph.
     * </pre>
     *
     * <code>int64 id = 3;</code>
     */
    public long getId() {
      return id_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSequenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sequence_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (id_ != 0L) {
        output.writeInt64(3, id_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSequenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sequence_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, id_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Node)) {
        return super.equals(obj);
      }
      vg.Vg.Node other = (vg.Vg.Node) obj;

      boolean result = true;
      result = result && getSequence()
          .equals(other.getSequence());
      result = result && getName()
          .equals(other.getName());
      result = result && (getId()
          == other.getId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSequence().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Node parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Node parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Node prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *Nodes* store sequence data.
     * </pre>
     *
     * Protobuf type {@code vg.Node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Node)
        vg.Vg.NodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Node_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Node.class, vg.Vg.Node.Builder.class);
      }

      // Construct using vg.Vg.Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sequence_ = "";

        name_ = "";

        id_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Node_descriptor;
      }

      public vg.Vg.Node getDefaultInstanceForType() {
        return vg.Vg.Node.getDefaultInstance();
      }

      public vg.Vg.Node build() {
        vg.Vg.Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Node buildPartial() {
        vg.Vg.Node result = new vg.Vg.Node(this);
        result.sequence_ = sequence_;
        result.name_ = name_;
        result.id_ = id_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Node) {
          return mergeFrom((vg.Vg.Node)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Node other) {
        if (other == vg.Vg.Node.getDefaultInstance()) return this;
        if (!other.getSequence().isEmpty()) {
          sequence_ = other.sequence_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Node parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Node) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object sequence_ = "";
      /**
       * <pre>
       * Sequence of DNA bases represented by the Node.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public java.lang.String getSequence() {
        java.lang.Object ref = sequence_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sequence_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Sequence of DNA bases represented by the Node.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSequenceBytes() {
        java.lang.Object ref = sequence_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequence_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Sequence of DNA bases represented by the Node.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public Builder setSequence(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sequence of DNA bases represented by the Node.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = getDefaultInstance().getSequence();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sequence of DNA bases represented by the Node.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public Builder setSequenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sequence_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A name provides an identifier.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A name provides an identifier.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A name provides an identifier.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A name provides an identifier.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A name provides an identifier.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       * Each Node has a unique positive nonzero ID within its Graph.
       * </pre>
       *
       * <code>int64 id = 3;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * Each Node has a unique positive nonzero ID within its Graph.
       * </pre>
       *
       * <code>int64 id = 3;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each Node has a unique positive nonzero ID within its Graph.
       * </pre>
       *
       * <code>int64 id = 3;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Node)
    }

    // @@protoc_insertion_point(class_scope:vg.Node)
    private static final vg.Vg.Node DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Node();
    }

    public static vg.Vg.Node getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Node>
        PARSER = new com.google.protobuf.AbstractParser<Node>() {
      public Node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Node(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Node> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Node> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Node getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EdgeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Edge)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID of upstream node.
     * </pre>
     *
     * <code>int64 from = 1;</code>
     */
    long getFrom();

    /**
     * <pre>
     * ID of downstream node.
     * </pre>
     *
     * <code>int64 to = 2;</code>
     */
    long getTo();

    /**
     * <pre>
     * If the edge leaves from the 5' (start) of a node.
     * </pre>
     *
     * <code>bool from_start = 3;</code>
     */
    boolean getFromStart();

    /**
     * <pre>
     * If the edge goes to the 3' (end) of a node.
     * </pre>
     *
     * <code>bool to_end = 4;</code>
     */
    boolean getToEnd();

    /**
     * <pre>
     * Length of overlap between the connected `Node`s.
     * </pre>
     *
     * <code>int32 overlap = 5;</code>
     */
    int getOverlap();
  }
  /**
   * <pre>
   * *Edges* describe linkages between nodes. They are bidirected, connecting the
   * end (default) or start of the "from" node to the start (default) or end of
   * the "to" node.
   * </pre>
   *
   * Protobuf type {@code vg.Edge}
   */
  public  static final class Edge extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Edge)
      EdgeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Edge.newBuilder() to construct.
    private Edge(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Edge() {
      from_ = 0L;
      to_ = 0L;
      fromStart_ = false;
      toEnd_ = false;
      overlap_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Edge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              from_ = input.readInt64();
              break;
            }
            case 16: {

              to_ = input.readInt64();
              break;
            }
            case 24: {

              fromStart_ = input.readBool();
              break;
            }
            case 32: {

              toEnd_ = input.readBool();
              break;
            }
            case 40: {

              overlap_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Edge_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Edge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Edge.class, vg.Vg.Edge.Builder.class);
    }

    public static final int FROM_FIELD_NUMBER = 1;
    private long from_;
    /**
     * <pre>
     * ID of upstream node.
     * </pre>
     *
     * <code>int64 from = 1;</code>
     */
    public long getFrom() {
      return from_;
    }

    public static final int TO_FIELD_NUMBER = 2;
    private long to_;
    /**
     * <pre>
     * ID of downstream node.
     * </pre>
     *
     * <code>int64 to = 2;</code>
     */
    public long getTo() {
      return to_;
    }

    public static final int FROM_START_FIELD_NUMBER = 3;
    private boolean fromStart_;
    /**
     * <pre>
     * If the edge leaves from the 5' (start) of a node.
     * </pre>
     *
     * <code>bool from_start = 3;</code>
     */
    public boolean getFromStart() {
      return fromStart_;
    }

    public static final int TO_END_FIELD_NUMBER = 4;
    private boolean toEnd_;
    /**
     * <pre>
     * If the edge goes to the 3' (end) of a node.
     * </pre>
     *
     * <code>bool to_end = 4;</code>
     */
    public boolean getToEnd() {
      return toEnd_;
    }

    public static final int OVERLAP_FIELD_NUMBER = 5;
    private int overlap_;
    /**
     * <pre>
     * Length of overlap between the connected `Node`s.
     * </pre>
     *
     * <code>int32 overlap = 5;</code>
     */
    public int getOverlap() {
      return overlap_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (from_ != 0L) {
        output.writeInt64(1, from_);
      }
      if (to_ != 0L) {
        output.writeInt64(2, to_);
      }
      if (fromStart_ != false) {
        output.writeBool(3, fromStart_);
      }
      if (toEnd_ != false) {
        output.writeBool(4, toEnd_);
      }
      if (overlap_ != 0) {
        output.writeInt32(5, overlap_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (from_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, from_);
      }
      if (to_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, to_);
      }
      if (fromStart_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, fromStart_);
      }
      if (toEnd_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, toEnd_);
      }
      if (overlap_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, overlap_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Edge)) {
        return super.equals(obj);
      }
      vg.Vg.Edge other = (vg.Vg.Edge) obj;

      boolean result = true;
      result = result && (getFrom()
          == other.getFrom());
      result = result && (getTo()
          == other.getTo());
      result = result && (getFromStart()
          == other.getFromStart());
      result = result && (getToEnd()
          == other.getToEnd());
      result = result && (getOverlap()
          == other.getOverlap());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFrom());
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTo());
      hash = (37 * hash) + FROM_START_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFromStart());
      hash = (37 * hash) + TO_END_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getToEnd());
      hash = (37 * hash) + OVERLAP_FIELD_NUMBER;
      hash = (53 * hash) + getOverlap();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Edge parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Edge parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Edge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Edge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Edge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Edge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Edge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Edge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Edge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Edge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Edge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Edge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Edge prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *Edges* describe linkages between nodes. They are bidirected, connecting the
     * end (default) or start of the "from" node to the start (default) or end of
     * the "to" node.
     * </pre>
     *
     * Protobuf type {@code vg.Edge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Edge)
        vg.Vg.EdgeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Edge_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Edge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Edge.class, vg.Vg.Edge.Builder.class);
      }

      // Construct using vg.Vg.Edge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        from_ = 0L;

        to_ = 0L;

        fromStart_ = false;

        toEnd_ = false;

        overlap_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Edge_descriptor;
      }

      public vg.Vg.Edge getDefaultInstanceForType() {
        return vg.Vg.Edge.getDefaultInstance();
      }

      public vg.Vg.Edge build() {
        vg.Vg.Edge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Edge buildPartial() {
        vg.Vg.Edge result = new vg.Vg.Edge(this);
        result.from_ = from_;
        result.to_ = to_;
        result.fromStart_ = fromStart_;
        result.toEnd_ = toEnd_;
        result.overlap_ = overlap_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Edge) {
          return mergeFrom((vg.Vg.Edge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Edge other) {
        if (other == vg.Vg.Edge.getDefaultInstance()) return this;
        if (other.getFrom() != 0L) {
          setFrom(other.getFrom());
        }
        if (other.getTo() != 0L) {
          setTo(other.getTo());
        }
        if (other.getFromStart() != false) {
          setFromStart(other.getFromStart());
        }
        if (other.getToEnd() != false) {
          setToEnd(other.getToEnd());
        }
        if (other.getOverlap() != 0) {
          setOverlap(other.getOverlap());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Edge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Edge) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long from_ ;
      /**
       * <pre>
       * ID of upstream node.
       * </pre>
       *
       * <code>int64 from = 1;</code>
       */
      public long getFrom() {
        return from_;
      }
      /**
       * <pre>
       * ID of upstream node.
       * </pre>
       *
       * <code>int64 from = 1;</code>
       */
      public Builder setFrom(long value) {
        
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of upstream node.
       * </pre>
       *
       * <code>int64 from = 1;</code>
       */
      public Builder clearFrom() {
        
        from_ = 0L;
        onChanged();
        return this;
      }

      private long to_ ;
      /**
       * <pre>
       * ID of downstream node.
       * </pre>
       *
       * <code>int64 to = 2;</code>
       */
      public long getTo() {
        return to_;
      }
      /**
       * <pre>
       * ID of downstream node.
       * </pre>
       *
       * <code>int64 to = 2;</code>
       */
      public Builder setTo(long value) {
        
        to_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of downstream node.
       * </pre>
       *
       * <code>int64 to = 2;</code>
       */
      public Builder clearTo() {
        
        to_ = 0L;
        onChanged();
        return this;
      }

      private boolean fromStart_ ;
      /**
       * <pre>
       * If the edge leaves from the 5' (start) of a node.
       * </pre>
       *
       * <code>bool from_start = 3;</code>
       */
      public boolean getFromStart() {
        return fromStart_;
      }
      /**
       * <pre>
       * If the edge leaves from the 5' (start) of a node.
       * </pre>
       *
       * <code>bool from_start = 3;</code>
       */
      public Builder setFromStart(boolean value) {
        
        fromStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the edge leaves from the 5' (start) of a node.
       * </pre>
       *
       * <code>bool from_start = 3;</code>
       */
      public Builder clearFromStart() {
        
        fromStart_ = false;
        onChanged();
        return this;
      }

      private boolean toEnd_ ;
      /**
       * <pre>
       * If the edge goes to the 3' (end) of a node.
       * </pre>
       *
       * <code>bool to_end = 4;</code>
       */
      public boolean getToEnd() {
        return toEnd_;
      }
      /**
       * <pre>
       * If the edge goes to the 3' (end) of a node.
       * </pre>
       *
       * <code>bool to_end = 4;</code>
       */
      public Builder setToEnd(boolean value) {
        
        toEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the edge goes to the 3' (end) of a node.
       * </pre>
       *
       * <code>bool to_end = 4;</code>
       */
      public Builder clearToEnd() {
        
        toEnd_ = false;
        onChanged();
        return this;
      }

      private int overlap_ ;
      /**
       * <pre>
       * Length of overlap between the connected `Node`s.
       * </pre>
       *
       * <code>int32 overlap = 5;</code>
       */
      public int getOverlap() {
        return overlap_;
      }
      /**
       * <pre>
       * Length of overlap between the connected `Node`s.
       * </pre>
       *
       * <code>int32 overlap = 5;</code>
       */
      public Builder setOverlap(int value) {
        
        overlap_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Length of overlap between the connected `Node`s.
       * </pre>
       *
       * <code>int32 overlap = 5;</code>
       */
      public Builder clearOverlap() {
        
        overlap_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Edge)
    }

    // @@protoc_insertion_point(class_scope:vg.Edge)
    private static final vg.Vg.Edge DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Edge();
    }

    public static vg.Vg.Edge getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Edge>
        PARSER = new com.google.protobuf.AbstractParser<Edge>() {
      public Edge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Edge(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Edge> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Edge> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Edge getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EditOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Edit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Length in the target/ref sequence that is removed.
     * </pre>
     *
     * <code>int32 from_length = 1;</code>
     */
    int getFromLength();

    /**
     * <pre>
     * Length in read/alt of the sequence it is replaced with.
     * </pre>
     *
     * <code>int32 to_length = 2;</code>
     */
    int getToLength();

    /**
     * <pre>
     * The replacement sequence, if different from the original sequence.
     * </pre>
     *
     * <code>string sequence = 3;</code>
     */
    java.lang.String getSequence();
    /**
     * <pre>
     * The replacement sequence, if different from the original sequence.
     * </pre>
     *
     * <code>string sequence = 3;</code>
     */
    com.google.protobuf.ByteString
        getSequenceBytes();
  }
  /**
   * <pre>
   * Edits describe how to generate a new string from elements
   * in the graph. To determine the new string, just walk the series of edits,
   * stepping from_length distance in the basis node, and to_length in the
   * novel element, replacing from_length in the basis node with the sequence.
   * There are several types of Edit:
   * - *matches*: from_length == to_length; sequence is empty
   * - *snps*: from_length == to_length; sequence = alt
   * - *deletions*: to_length == 0 &amp;&amp; from_length &gt; to_length; sequence is empty
   * - *insertions*: from_length &lt; to_length; sequence = alt
   * </pre>
   *
   * Protobuf type {@code vg.Edit}
   */
  public  static final class Edit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Edit)
      EditOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Edit.newBuilder() to construct.
    private Edit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Edit() {
      fromLength_ = 0;
      toLength_ = 0;
      sequence_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Edit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              fromLength_ = input.readInt32();
              break;
            }
            case 16: {

              toLength_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              sequence_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Edit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Edit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Edit.class, vg.Vg.Edit.Builder.class);
    }

    public static final int FROM_LENGTH_FIELD_NUMBER = 1;
    private int fromLength_;
    /**
     * <pre>
     * Length in the target/ref sequence that is removed.
     * </pre>
     *
     * <code>int32 from_length = 1;</code>
     */
    public int getFromLength() {
      return fromLength_;
    }

    public static final int TO_LENGTH_FIELD_NUMBER = 2;
    private int toLength_;
    /**
     * <pre>
     * Length in read/alt of the sequence it is replaced with.
     * </pre>
     *
     * <code>int32 to_length = 2;</code>
     */
    public int getToLength() {
      return toLength_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 3;
    private volatile java.lang.Object sequence_;
    /**
     * <pre>
     * The replacement sequence, if different from the original sequence.
     * </pre>
     *
     * <code>string sequence = 3;</code>
     */
    public java.lang.String getSequence() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sequence_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The replacement sequence, if different from the original sequence.
     * </pre>
     *
     * <code>string sequence = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSequenceBytes() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequence_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromLength_ != 0) {
        output.writeInt32(1, fromLength_);
      }
      if (toLength_ != 0) {
        output.writeInt32(2, toLength_);
      }
      if (!getSequenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sequence_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fromLength_);
      }
      if (toLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, toLength_);
      }
      if (!getSequenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sequence_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Edit)) {
        return super.equals(obj);
      }
      vg.Vg.Edit other = (vg.Vg.Edit) obj;

      boolean result = true;
      result = result && (getFromLength()
          == other.getFromLength());
      result = result && (getToLength()
          == other.getToLength());
      result = result && getSequence()
          .equals(other.getSequence());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROM_LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getFromLength();
      hash = (37 * hash) + TO_LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getToLength();
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSequence().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Edit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Edit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Edit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Edit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Edit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Edit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Edit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Edit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Edit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Edit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Edit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Edit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Edit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Edits describe how to generate a new string from elements
     * in the graph. To determine the new string, just walk the series of edits,
     * stepping from_length distance in the basis node, and to_length in the
     * novel element, replacing from_length in the basis node with the sequence.
     * There are several types of Edit:
     * - *matches*: from_length == to_length; sequence is empty
     * - *snps*: from_length == to_length; sequence = alt
     * - *deletions*: to_length == 0 &amp;&amp; from_length &gt; to_length; sequence is empty
     * - *insertions*: from_length &lt; to_length; sequence = alt
     * </pre>
     *
     * Protobuf type {@code vg.Edit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Edit)
        vg.Vg.EditOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Edit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Edit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Edit.class, vg.Vg.Edit.Builder.class);
      }

      // Construct using vg.Vg.Edit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fromLength_ = 0;

        toLength_ = 0;

        sequence_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Edit_descriptor;
      }

      public vg.Vg.Edit getDefaultInstanceForType() {
        return vg.Vg.Edit.getDefaultInstance();
      }

      public vg.Vg.Edit build() {
        vg.Vg.Edit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Edit buildPartial() {
        vg.Vg.Edit result = new vg.Vg.Edit(this);
        result.fromLength_ = fromLength_;
        result.toLength_ = toLength_;
        result.sequence_ = sequence_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Edit) {
          return mergeFrom((vg.Vg.Edit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Edit other) {
        if (other == vg.Vg.Edit.getDefaultInstance()) return this;
        if (other.getFromLength() != 0) {
          setFromLength(other.getFromLength());
        }
        if (other.getToLength() != 0) {
          setToLength(other.getToLength());
        }
        if (!other.getSequence().isEmpty()) {
          sequence_ = other.sequence_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Edit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Edit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int fromLength_ ;
      /**
       * <pre>
       * Length in the target/ref sequence that is removed.
       * </pre>
       *
       * <code>int32 from_length = 1;</code>
       */
      public int getFromLength() {
        return fromLength_;
      }
      /**
       * <pre>
       * Length in the target/ref sequence that is removed.
       * </pre>
       *
       * <code>int32 from_length = 1;</code>
       */
      public Builder setFromLength(int value) {
        
        fromLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Length in the target/ref sequence that is removed.
       * </pre>
       *
       * <code>int32 from_length = 1;</code>
       */
      public Builder clearFromLength() {
        
        fromLength_ = 0;
        onChanged();
        return this;
      }

      private int toLength_ ;
      /**
       * <pre>
       * Length in read/alt of the sequence it is replaced with.
       * </pre>
       *
       * <code>int32 to_length = 2;</code>
       */
      public int getToLength() {
        return toLength_;
      }
      /**
       * <pre>
       * Length in read/alt of the sequence it is replaced with.
       * </pre>
       *
       * <code>int32 to_length = 2;</code>
       */
      public Builder setToLength(int value) {
        
        toLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Length in read/alt of the sequence it is replaced with.
       * </pre>
       *
       * <code>int32 to_length = 2;</code>
       */
      public Builder clearToLength() {
        
        toLength_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object sequence_ = "";
      /**
       * <pre>
       * The replacement sequence, if different from the original sequence.
       * </pre>
       *
       * <code>string sequence = 3;</code>
       */
      public java.lang.String getSequence() {
        java.lang.Object ref = sequence_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sequence_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The replacement sequence, if different from the original sequence.
       * </pre>
       *
       * <code>string sequence = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSequenceBytes() {
        java.lang.Object ref = sequence_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequence_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The replacement sequence, if different from the original sequence.
       * </pre>
       *
       * <code>string sequence = 3;</code>
       */
      public Builder setSequence(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The replacement sequence, if different from the original sequence.
       * </pre>
       *
       * <code>string sequence = 3;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = getDefaultInstance().getSequence();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The replacement sequence, if different from the original sequence.
       * </pre>
       *
       * <code>string sequence = 3;</code>
       */
      public Builder setSequenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sequence_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Edit)
    }

    // @@protoc_insertion_point(class_scope:vg.Edit)
    private static final vg.Vg.Edit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Edit();
    }

    public static vg.Vg.Edit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Edit>
        PARSER = new com.google.protobuf.AbstractParser<Edit>() {
      public Edit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Edit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Edit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Edit> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Edit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MappingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Mapping)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
     * </pre>
     *
     * <code>.vg.Position position = 1;</code>
     */
    boolean hasPosition();
    /**
     * <pre>
     * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
     * </pre>
     *
     * <code>.vg.Position position = 1;</code>
     */
    vg.Vg.Position getPosition();
    /**
     * <pre>
     * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
     * </pre>
     *
     * <code>.vg.Position position = 1;</code>
     */
    vg.Vg.PositionOrBuilder getPositionOrBuilder();

    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    java.util.List<vg.Vg.Edit> 
        getEditList();
    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    vg.Vg.Edit getEdit(int index);
    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    int getEditCount();
    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    java.util.List<? extends vg.Vg.EditOrBuilder> 
        getEditOrBuilderList();
    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    vg.Vg.EditOrBuilder getEditOrBuilder(
        int index);

    /**
     * <pre>
     * The 1-based rank of the mapping in its containing path.
     * </pre>
     *
     * <code>int64 rank = 5;</code>
     */
    long getRank();
  }
  /**
   * <pre>
   * A Mapping defines the relationship between a node in system and another entity.
   * An empty edit list implies complete match, however it is preferred to specify the full edit structure.
   * as it is more complex to handle special cases.
   * </pre>
   *
   * Protobuf type {@code vg.Mapping}
   */
  public  static final class Mapping extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Mapping)
      MappingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Mapping.newBuilder() to construct.
    private Mapping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Mapping() {
      edit_ = java.util.Collections.emptyList();
      rank_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Mapping(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              vg.Vg.Position.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(vg.Vg.Position.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                edit_ = new java.util.ArrayList<vg.Vg.Edit>();
                mutable_bitField0_ |= 0x00000002;
              }
              edit_.add(
                  input.readMessage(vg.Vg.Edit.parser(), extensionRegistry));
              break;
            }
            case 40: {

              rank_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          edit_ = java.util.Collections.unmodifiableList(edit_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Mapping_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Mapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Mapping.class, vg.Vg.Mapping.Builder.class);
    }

    private int bitField0_;
    public static final int POSITION_FIELD_NUMBER = 1;
    private vg.Vg.Position position_;
    /**
     * <pre>
     * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
     * </pre>
     *
     * <code>.vg.Position position = 1;</code>
     */
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <pre>
     * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
     * </pre>
     *
     * <code>.vg.Position position = 1;</code>
     */
    public vg.Vg.Position getPosition() {
      return position_ == null ? vg.Vg.Position.getDefaultInstance() : position_;
    }
    /**
     * <pre>
     * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
     * </pre>
     *
     * <code>.vg.Position position = 1;</code>
     */
    public vg.Vg.PositionOrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int EDIT_FIELD_NUMBER = 2;
    private java.util.List<vg.Vg.Edit> edit_;
    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    public java.util.List<vg.Vg.Edit> getEditList() {
      return edit_;
    }
    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    public java.util.List<? extends vg.Vg.EditOrBuilder> 
        getEditOrBuilderList() {
      return edit_;
    }
    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    public int getEditCount() {
      return edit_.size();
    }
    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    public vg.Vg.Edit getEdit(int index) {
      return edit_.get(index);
    }
    /**
     * <pre>
     * The series of `Edit`s to transform to region in read/alt.
     * </pre>
     *
     * <code>repeated .vg.Edit edit = 2;</code>
     */
    public vg.Vg.EditOrBuilder getEditOrBuilder(
        int index) {
      return edit_.get(index);
    }

    public static final int RANK_FIELD_NUMBER = 5;
    private long rank_;
    /**
     * <pre>
     * The 1-based rank of the mapping in its containing path.
     * </pre>
     *
     * <code>int64 rank = 5;</code>
     */
    public long getRank() {
      return rank_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (position_ != null) {
        output.writeMessage(1, getPosition());
      }
      for (int i = 0; i < edit_.size(); i++) {
        output.writeMessage(2, edit_.get(i));
      }
      if (rank_ != 0L) {
        output.writeInt64(5, rank_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPosition());
      }
      for (int i = 0; i < edit_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, edit_.get(i));
      }
      if (rank_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, rank_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Mapping)) {
        return super.equals(obj);
      }
      vg.Vg.Mapping other = (vg.Vg.Mapping) obj;

      boolean result = true;
      result = result && (hasPosition() == other.hasPosition());
      if (hasPosition()) {
        result = result && getPosition()
            .equals(other.getPosition());
      }
      result = result && getEditList()
          .equals(other.getEditList());
      result = result && (getRank()
          == other.getRank());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      if (getEditCount() > 0) {
        hash = (37 * hash) + EDIT_FIELD_NUMBER;
        hash = (53 * hash) + getEditList().hashCode();
      }
      hash = (37 * hash) + RANK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRank());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Mapping parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Mapping parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Mapping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Mapping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Mapping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Mapping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Mapping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Mapping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Mapping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Mapping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Mapping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Mapping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Mapping prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Mapping defines the relationship between a node in system and another entity.
     * An empty edit list implies complete match, however it is preferred to specify the full edit structure.
     * as it is more complex to handle special cases.
     * </pre>
     *
     * Protobuf type {@code vg.Mapping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Mapping)
        vg.Vg.MappingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Mapping_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Mapping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Mapping.class, vg.Vg.Mapping.Builder.class);
      }

      // Construct using vg.Vg.Mapping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEditFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        if (editBuilder_ == null) {
          edit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          editBuilder_.clear();
        }
        rank_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Mapping_descriptor;
      }

      public vg.Vg.Mapping getDefaultInstanceForType() {
        return vg.Vg.Mapping.getDefaultInstance();
      }

      public vg.Vg.Mapping build() {
        vg.Vg.Mapping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Mapping buildPartial() {
        vg.Vg.Mapping result = new vg.Vg.Mapping(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (editBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            edit_ = java.util.Collections.unmodifiableList(edit_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.edit_ = edit_;
        } else {
          result.edit_ = editBuilder_.build();
        }
        result.rank_ = rank_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Mapping) {
          return mergeFrom((vg.Vg.Mapping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Mapping other) {
        if (other == vg.Vg.Mapping.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (editBuilder_ == null) {
          if (!other.edit_.isEmpty()) {
            if (edit_.isEmpty()) {
              edit_ = other.edit_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEditIsMutable();
              edit_.addAll(other.edit_);
            }
            onChanged();
          }
        } else {
          if (!other.edit_.isEmpty()) {
            if (editBuilder_.isEmpty()) {
              editBuilder_.dispose();
              editBuilder_ = null;
              edit_ = other.edit_;
              bitField0_ = (bitField0_ & ~0x00000002);
              editBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEditFieldBuilder() : null;
            } else {
              editBuilder_.addAllMessages(other.edit_);
            }
          }
        }
        if (other.getRank() != 0L) {
          setRank(other.getRank());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Mapping parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Mapping) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private vg.Vg.Position position_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Position, vg.Vg.Position.Builder, vg.Vg.PositionOrBuilder> positionBuilder_;
      /**
       * <pre>
       * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
       * </pre>
       *
       * <code>.vg.Position position = 1;</code>
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <pre>
       * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
       * </pre>
       *
       * <code>.vg.Position position = 1;</code>
       */
      public vg.Vg.Position getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? vg.Vg.Position.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
       * </pre>
       *
       * <code>.vg.Position position = 1;</code>
       */
      public Builder setPosition(vg.Vg.Position value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
       * </pre>
       *
       * <code>.vg.Position position = 1;</code>
       */
      public Builder setPosition(
          vg.Vg.Position.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
       * </pre>
       *
       * <code>.vg.Position position = 1;</code>
       */
      public Builder mergePosition(vg.Vg.Position value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              vg.Vg.Position.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
       * </pre>
       *
       * <code>.vg.Position position = 1;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
       * </pre>
       *
       * <code>.vg.Position position = 1;</code>
       */
      public vg.Vg.Position.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
       * </pre>
       *
       * <code>.vg.Position position = 1;</code>
       */
      public vg.Vg.PositionOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              vg.Vg.Position.getDefaultInstance() : position_;
        }
      }
      /**
       * <pre>
       * The position at which the first Edit, if any, in the Mapping starts. Inclusive.
       * </pre>
       *
       * <code>.vg.Position position = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Position, vg.Vg.Position.Builder, vg.Vg.PositionOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Position, vg.Vg.Position.Builder, vg.Vg.PositionOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private java.util.List<vg.Vg.Edit> edit_ =
        java.util.Collections.emptyList();
      private void ensureEditIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          edit_ = new java.util.ArrayList<vg.Vg.Edit>(edit_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Edit, vg.Vg.Edit.Builder, vg.Vg.EditOrBuilder> editBuilder_;

      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public java.util.List<vg.Vg.Edit> getEditList() {
        if (editBuilder_ == null) {
          return java.util.Collections.unmodifiableList(edit_);
        } else {
          return editBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public int getEditCount() {
        if (editBuilder_ == null) {
          return edit_.size();
        } else {
          return editBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public vg.Vg.Edit getEdit(int index) {
        if (editBuilder_ == null) {
          return edit_.get(index);
        } else {
          return editBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public Builder setEdit(
          int index, vg.Vg.Edit value) {
        if (editBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEditIsMutable();
          edit_.set(index, value);
          onChanged();
        } else {
          editBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public Builder setEdit(
          int index, vg.Vg.Edit.Builder builderForValue) {
        if (editBuilder_ == null) {
          ensureEditIsMutable();
          edit_.set(index, builderForValue.build());
          onChanged();
        } else {
          editBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public Builder addEdit(vg.Vg.Edit value) {
        if (editBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEditIsMutable();
          edit_.add(value);
          onChanged();
        } else {
          editBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public Builder addEdit(
          int index, vg.Vg.Edit value) {
        if (editBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEditIsMutable();
          edit_.add(index, value);
          onChanged();
        } else {
          editBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public Builder addEdit(
          vg.Vg.Edit.Builder builderForValue) {
        if (editBuilder_ == null) {
          ensureEditIsMutable();
          edit_.add(builderForValue.build());
          onChanged();
        } else {
          editBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public Builder addEdit(
          int index, vg.Vg.Edit.Builder builderForValue) {
        if (editBuilder_ == null) {
          ensureEditIsMutable();
          edit_.add(index, builderForValue.build());
          onChanged();
        } else {
          editBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public Builder addAllEdit(
          java.lang.Iterable<? extends vg.Vg.Edit> values) {
        if (editBuilder_ == null) {
          ensureEditIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, edit_);
          onChanged();
        } else {
          editBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public Builder clearEdit() {
        if (editBuilder_ == null) {
          edit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          editBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public Builder removeEdit(int index) {
        if (editBuilder_ == null) {
          ensureEditIsMutable();
          edit_.remove(index);
          onChanged();
        } else {
          editBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public vg.Vg.Edit.Builder getEditBuilder(
          int index) {
        return getEditFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public vg.Vg.EditOrBuilder getEditOrBuilder(
          int index) {
        if (editBuilder_ == null) {
          return edit_.get(index);  } else {
          return editBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public java.util.List<? extends vg.Vg.EditOrBuilder> 
           getEditOrBuilderList() {
        if (editBuilder_ != null) {
          return editBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(edit_);
        }
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public vg.Vg.Edit.Builder addEditBuilder() {
        return getEditFieldBuilder().addBuilder(
            vg.Vg.Edit.getDefaultInstance());
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public vg.Vg.Edit.Builder addEditBuilder(
          int index) {
        return getEditFieldBuilder().addBuilder(
            index, vg.Vg.Edit.getDefaultInstance());
      }
      /**
       * <pre>
       * The series of `Edit`s to transform to region in read/alt.
       * </pre>
       *
       * <code>repeated .vg.Edit edit = 2;</code>
       */
      public java.util.List<vg.Vg.Edit.Builder> 
           getEditBuilderList() {
        return getEditFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Edit, vg.Vg.Edit.Builder, vg.Vg.EditOrBuilder> 
          getEditFieldBuilder() {
        if (editBuilder_ == null) {
          editBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Edit, vg.Vg.Edit.Builder, vg.Vg.EditOrBuilder>(
                  edit_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          edit_ = null;
        }
        return editBuilder_;
      }

      private long rank_ ;
      /**
       * <pre>
       * The 1-based rank of the mapping in its containing path.
       * </pre>
       *
       * <code>int64 rank = 5;</code>
       */
      public long getRank() {
        return rank_;
      }
      /**
       * <pre>
       * The 1-based rank of the mapping in its containing path.
       * </pre>
       *
       * <code>int64 rank = 5;</code>
       */
      public Builder setRank(long value) {
        
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The 1-based rank of the mapping in its containing path.
       * </pre>
       *
       * <code>int64 rank = 5;</code>
       */
      public Builder clearRank() {
        
        rank_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Mapping)
    }

    // @@protoc_insertion_point(class_scope:vg.Mapping)
    private static final vg.Vg.Mapping DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Mapping();
    }

    public static vg.Vg.Mapping getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Mapping>
        PARSER = new com.google.protobuf.AbstractParser<Mapping>() {
      public Mapping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Mapping(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Mapping> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Mapping> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Mapping getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Position)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The Node on which the Position is.
     * </pre>
     *
     * <code>int64 node_id = 1;</code>
     */
    long getNodeId();

    /**
     * <pre>
     * The offset into that node's sequence at which the Position occurs.
     * </pre>
     *
     * <code>int64 offset = 2;</code>
     */
    long getOffset();

    /**
     * <pre>
     * True if we obtain the original sequence of the path by reverse complementing the mappings.
     * </pre>
     *
     * <code>bool is_reverse = 4;</code>
     */
    boolean getIsReverse();

    /**
     * <pre>
     * If the position is used to represent a position against a reference path
     * </pre>
     *
     * <code>string name = 5;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * If the position is used to represent a position against a reference path
     * </pre>
     *
     * <code>string name = 5;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code vg.Position}
   */
  public  static final class Position extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Position)
      PositionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Position.newBuilder() to construct.
    private Position(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Position() {
      nodeId_ = 0L;
      offset_ = 0L;
      isReverse_ = false;
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Position(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nodeId_ = input.readInt64();
              break;
            }
            case 16: {

              offset_ = input.readInt64();
              break;
            }
            case 32: {

              isReverse_ = input.readBool();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Position_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Position_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Position.class, vg.Vg.Position.Builder.class);
    }

    public static final int NODE_ID_FIELD_NUMBER = 1;
    private long nodeId_;
    /**
     * <pre>
     * The Node on which the Position is.
     * </pre>
     *
     * <code>int64 node_id = 1;</code>
     */
    public long getNodeId() {
      return nodeId_;
    }

    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <pre>
     * The offset into that node's sequence at which the Position occurs.
     * </pre>
     *
     * <code>int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    public static final int IS_REVERSE_FIELD_NUMBER = 4;
    private boolean isReverse_;
    /**
     * <pre>
     * True if we obtain the original sequence of the path by reverse complementing the mappings.
     * </pre>
     *
     * <code>bool is_reverse = 4;</code>
     */
    public boolean getIsReverse() {
      return isReverse_;
    }

    public static final int NAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * If the position is used to represent a position against a reference path
     * </pre>
     *
     * <code>string name = 5;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If the position is used to represent a position against a reference path
     * </pre>
     *
     * <code>string name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeId_ != 0L) {
        output.writeInt64(1, nodeId_);
      }
      if (offset_ != 0L) {
        output.writeInt64(2, offset_);
      }
      if (isReverse_ != false) {
        output.writeBool(4, isReverse_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, name_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, nodeId_);
      }
      if (offset_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (isReverse_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isReverse_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Position)) {
        return super.equals(obj);
      }
      vg.Vg.Position other = (vg.Vg.Position) obj;

      boolean result = true;
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && (getOffset()
          == other.getOffset());
      result = result && (getIsReverse()
          == other.getIsReverse());
      result = result && getName()
          .equals(other.getName());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNodeId());
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOffset());
      hash = (37 * hash) + IS_REVERSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsReverse());
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Position parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Position parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Position parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Position parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Position parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Position parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Position parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Position parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Position parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Position parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Position parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Position parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Position prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code vg.Position}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Position)
        vg.Vg.PositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Position_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Position_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Position.class, vg.Vg.Position.Builder.class);
      }

      // Construct using vg.Vg.Position.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = 0L;

        offset_ = 0L;

        isReverse_ = false;

        name_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Position_descriptor;
      }

      public vg.Vg.Position getDefaultInstanceForType() {
        return vg.Vg.Position.getDefaultInstance();
      }

      public vg.Vg.Position build() {
        vg.Vg.Position result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Position buildPartial() {
        vg.Vg.Position result = new vg.Vg.Position(this);
        result.nodeId_ = nodeId_;
        result.offset_ = offset_;
        result.isReverse_ = isReverse_;
        result.name_ = name_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Position) {
          return mergeFrom((vg.Vg.Position)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Position other) {
        if (other == vg.Vg.Position.getDefaultInstance()) return this;
        if (other.getNodeId() != 0L) {
          setNodeId(other.getNodeId());
        }
        if (other.getOffset() != 0L) {
          setOffset(other.getOffset());
        }
        if (other.getIsReverse() != false) {
          setIsReverse(other.getIsReverse());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Position parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Position) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long nodeId_ ;
      /**
       * <pre>
       * The Node on which the Position is.
       * </pre>
       *
       * <code>int64 node_id = 1;</code>
       */
      public long getNodeId() {
        return nodeId_;
      }
      /**
       * <pre>
       * The Node on which the Position is.
       * </pre>
       *
       * <code>int64 node_id = 1;</code>
       */
      public Builder setNodeId(long value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Node on which the Position is.
       * </pre>
       *
       * <code>int64 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0L;
        onChanged();
        return this;
      }

      private long offset_ ;
      /**
       * <pre>
       * The offset into that node's sequence at which the Position occurs.
       * </pre>
       *
       * <code>int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <pre>
       * The offset into that node's sequence at which the Position occurs.
       * </pre>
       *
       * <code>int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The offset into that node's sequence at which the Position occurs.
       * </pre>
       *
       * <code>int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        
        offset_ = 0L;
        onChanged();
        return this;
      }

      private boolean isReverse_ ;
      /**
       * <pre>
       * True if we obtain the original sequence of the path by reverse complementing the mappings.
       * </pre>
       *
       * <code>bool is_reverse = 4;</code>
       */
      public boolean getIsReverse() {
        return isReverse_;
      }
      /**
       * <pre>
       * True if we obtain the original sequence of the path by reverse complementing the mappings.
       * </pre>
       *
       * <code>bool is_reverse = 4;</code>
       */
      public Builder setIsReverse(boolean value) {
        
        isReverse_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * True if we obtain the original sequence of the path by reverse complementing the mappings.
       * </pre>
       *
       * <code>bool is_reverse = 4;</code>
       */
      public Builder clearIsReverse() {
        
        isReverse_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * If the position is used to represent a position against a reference path
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If the position is used to represent a position against a reference path
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If the position is used to represent a position against a reference path
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the position is used to represent a position against a reference path
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the position is used to represent a position against a reference path
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Position)
    }

    // @@protoc_insertion_point(class_scope:vg.Position)
    private static final vg.Vg.Position DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Position();
    }

    public static vg.Vg.Position getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Position>
        PARSER = new com.google.protobuf.AbstractParser<Position>() {
      public Position parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Position(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Position> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Position> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Position getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Path)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of the path. Path names starting with underscore (_) are reserved for internal VG use.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the path. Path names starting with underscore (_) are reserved for internal VG use.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    java.util.List<vg.Vg.Mapping> 
        getMappingList();
    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    vg.Vg.Mapping getMapping(int index);
    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    int getMappingCount();
    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    java.util.List<? extends vg.Vg.MappingOrBuilder> 
        getMappingOrBuilderList();
    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    vg.Vg.MappingOrBuilder getMappingOrBuilder(
        int index);

    /**
     * <pre>
     * Set to true if the path is circular.
     * </pre>
     *
     * <code>bool is_circular = 3;</code>
     */
    boolean getIsCircular();

    /**
     * <pre>
     * Optional length annotation for the Path.
     * </pre>
     *
     * <code>int64 length = 4;</code>
     */
    long getLength();
  }
  /**
   * <pre>
   * Paths are walks through nodes defined by a series of `Edit`s.
   * They can be used to represent:
   *    - haplotypes
   *    - mappings of reads, or alignments, by including edits
   *    - relationships between nodes
   *    - annotations from other data sources, such as:
   *          genes, exons, motifs, transcripts, peaks
   * </pre>
   *
   * Protobuf type {@code vg.Path}
   */
  public  static final class Path extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Path)
      PathOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Path.newBuilder() to construct.
    private Path(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Path() {
      name_ = "";
      mapping_ = java.util.Collections.emptyList();
      isCircular_ = false;
      length_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Path(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                mapping_ = new java.util.ArrayList<vg.Vg.Mapping>();
                mutable_bitField0_ |= 0x00000002;
              }
              mapping_.add(
                  input.readMessage(vg.Vg.Mapping.parser(), extensionRegistry));
              break;
            }
            case 24: {

              isCircular_ = input.readBool();
              break;
            }
            case 32: {

              length_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          mapping_ = java.util.Collections.unmodifiableList(mapping_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Path_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Path_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Path.class, vg.Vg.Path.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the path. Path names starting with underscore (_) are reserved for internal VG use.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the path. Path names starting with underscore (_) are reserved for internal VG use.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAPPING_FIELD_NUMBER = 2;
    private java.util.List<vg.Vg.Mapping> mapping_;
    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    public java.util.List<vg.Vg.Mapping> getMappingList() {
      return mapping_;
    }
    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    public java.util.List<? extends vg.Vg.MappingOrBuilder> 
        getMappingOrBuilderList() {
      return mapping_;
    }
    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    public int getMappingCount() {
      return mapping_.size();
    }
    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    public vg.Vg.Mapping getMapping(int index) {
      return mapping_.get(index);
    }
    /**
     * <pre>
     * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
     * </pre>
     *
     * <code>repeated .vg.Mapping mapping = 2;</code>
     */
    public vg.Vg.MappingOrBuilder getMappingOrBuilder(
        int index) {
      return mapping_.get(index);
    }

    public static final int IS_CIRCULAR_FIELD_NUMBER = 3;
    private boolean isCircular_;
    /**
     * <pre>
     * Set to true if the path is circular.
     * </pre>
     *
     * <code>bool is_circular = 3;</code>
     */
    public boolean getIsCircular() {
      return isCircular_;
    }

    public static final int LENGTH_FIELD_NUMBER = 4;
    private long length_;
    /**
     * <pre>
     * Optional length annotation for the Path.
     * </pre>
     *
     * <code>int64 length = 4;</code>
     */
    public long getLength() {
      return length_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < mapping_.size(); i++) {
        output.writeMessage(2, mapping_.get(i));
      }
      if (isCircular_ != false) {
        output.writeBool(3, isCircular_);
      }
      if (length_ != 0L) {
        output.writeInt64(4, length_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (int i = 0; i < mapping_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mapping_.get(i));
      }
      if (isCircular_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isCircular_);
      }
      if (length_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, length_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Path)) {
        return super.equals(obj);
      }
      vg.Vg.Path other = (vg.Vg.Path) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getMappingList()
          .equals(other.getMappingList());
      result = result && (getIsCircular()
          == other.getIsCircular());
      result = result && (getLength()
          == other.getLength());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getMappingCount() > 0) {
        hash = (37 * hash) + MAPPING_FIELD_NUMBER;
        hash = (53 * hash) + getMappingList().hashCode();
      }
      hash = (37 * hash) + IS_CIRCULAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsCircular());
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLength());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Path parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Path parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Path parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Path parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Path parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Path parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Path parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Path parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Path parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Path parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Path parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Path parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Path prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Paths are walks through nodes defined by a series of `Edit`s.
     * They can be used to represent:
     *    - haplotypes
     *    - mappings of reads, or alignments, by including edits
     *    - relationships between nodes
     *    - annotations from other data sources, such as:
     *          genes, exons, motifs, transcripts, peaks
     * </pre>
     *
     * Protobuf type {@code vg.Path}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Path)
        vg.Vg.PathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Path_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Path_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Path.class, vg.Vg.Path.Builder.class);
      }

      // Construct using vg.Vg.Path.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMappingFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        if (mappingBuilder_ == null) {
          mapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          mappingBuilder_.clear();
        }
        isCircular_ = false;

        length_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Path_descriptor;
      }

      public vg.Vg.Path getDefaultInstanceForType() {
        return vg.Vg.Path.getDefaultInstance();
      }

      public vg.Vg.Path build() {
        vg.Vg.Path result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Path buildPartial() {
        vg.Vg.Path result = new vg.Vg.Path(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (mappingBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            mapping_ = java.util.Collections.unmodifiableList(mapping_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.mapping_ = mapping_;
        } else {
          result.mapping_ = mappingBuilder_.build();
        }
        result.isCircular_ = isCircular_;
        result.length_ = length_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Path) {
          return mergeFrom((vg.Vg.Path)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Path other) {
        if (other == vg.Vg.Path.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (mappingBuilder_ == null) {
          if (!other.mapping_.isEmpty()) {
            if (mapping_.isEmpty()) {
              mapping_ = other.mapping_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMappingIsMutable();
              mapping_.addAll(other.mapping_);
            }
            onChanged();
          }
        } else {
          if (!other.mapping_.isEmpty()) {
            if (mappingBuilder_.isEmpty()) {
              mappingBuilder_.dispose();
              mappingBuilder_ = null;
              mapping_ = other.mapping_;
              bitField0_ = (bitField0_ & ~0x00000002);
              mappingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMappingFieldBuilder() : null;
            } else {
              mappingBuilder_.addAllMessages(other.mapping_);
            }
          }
        }
        if (other.getIsCircular() != false) {
          setIsCircular(other.getIsCircular());
        }
        if (other.getLength() != 0L) {
          setLength(other.getLength());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Path parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Path) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the path. Path names starting with underscore (_) are reserved for internal VG use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the path. Path names starting with underscore (_) are reserved for internal VG use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the path. Path names starting with underscore (_) are reserved for internal VG use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the path. Path names starting with underscore (_) are reserved for internal VG use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the path. Path names starting with underscore (_) are reserved for internal VG use.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<vg.Vg.Mapping> mapping_ =
        java.util.Collections.emptyList();
      private void ensureMappingIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          mapping_ = new java.util.ArrayList<vg.Vg.Mapping>(mapping_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Mapping, vg.Vg.Mapping.Builder, vg.Vg.MappingOrBuilder> mappingBuilder_;

      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public java.util.List<vg.Vg.Mapping> getMappingList() {
        if (mappingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mapping_);
        } else {
          return mappingBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public int getMappingCount() {
        if (mappingBuilder_ == null) {
          return mapping_.size();
        } else {
          return mappingBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public vg.Vg.Mapping getMapping(int index) {
        if (mappingBuilder_ == null) {
          return mapping_.get(index);
        } else {
          return mappingBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public Builder setMapping(
          int index, vg.Vg.Mapping value) {
        if (mappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingIsMutable();
          mapping_.set(index, value);
          onChanged();
        } else {
          mappingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public Builder setMapping(
          int index, vg.Vg.Mapping.Builder builderForValue) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.set(index, builderForValue.build());
          onChanged();
        } else {
          mappingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public Builder addMapping(vg.Vg.Mapping value) {
        if (mappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingIsMutable();
          mapping_.add(value);
          onChanged();
        } else {
          mappingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public Builder addMapping(
          int index, vg.Vg.Mapping value) {
        if (mappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingIsMutable();
          mapping_.add(index, value);
          onChanged();
        } else {
          mappingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public Builder addMapping(
          vg.Vg.Mapping.Builder builderForValue) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.add(builderForValue.build());
          onChanged();
        } else {
          mappingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public Builder addMapping(
          int index, vg.Vg.Mapping.Builder builderForValue) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.add(index, builderForValue.build());
          onChanged();
        } else {
          mappingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public Builder addAllMapping(
          java.lang.Iterable<? extends vg.Vg.Mapping> values) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mapping_);
          onChanged();
        } else {
          mappingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public Builder clearMapping() {
        if (mappingBuilder_ == null) {
          mapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          mappingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public Builder removeMapping(int index) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.remove(index);
          onChanged();
        } else {
          mappingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public vg.Vg.Mapping.Builder getMappingBuilder(
          int index) {
        return getMappingFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public vg.Vg.MappingOrBuilder getMappingOrBuilder(
          int index) {
        if (mappingBuilder_ == null) {
          return mapping_.get(index);  } else {
          return mappingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public java.util.List<? extends vg.Vg.MappingOrBuilder> 
           getMappingOrBuilderList() {
        if (mappingBuilder_ != null) {
          return mappingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mapping_);
        }
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public vg.Vg.Mapping.Builder addMappingBuilder() {
        return getMappingFieldBuilder().addBuilder(
            vg.Vg.Mapping.getDefaultInstance());
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public vg.Vg.Mapping.Builder addMappingBuilder(
          int index) {
        return getMappingFieldBuilder().addBuilder(
            index, vg.Vg.Mapping.getDefaultInstance());
      }
      /**
       * <pre>
       * The `Mapping`s which describe the order and orientation in which the Path visits `Node`s.
       * </pre>
       *
       * <code>repeated .vg.Mapping mapping = 2;</code>
       */
      public java.util.List<vg.Vg.Mapping.Builder> 
           getMappingBuilderList() {
        return getMappingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Mapping, vg.Vg.Mapping.Builder, vg.Vg.MappingOrBuilder> 
          getMappingFieldBuilder() {
        if (mappingBuilder_ == null) {
          mappingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Mapping, vg.Vg.Mapping.Builder, vg.Vg.MappingOrBuilder>(
                  mapping_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          mapping_ = null;
        }
        return mappingBuilder_;
      }

      private boolean isCircular_ ;
      /**
       * <pre>
       * Set to true if the path is circular.
       * </pre>
       *
       * <code>bool is_circular = 3;</code>
       */
      public boolean getIsCircular() {
        return isCircular_;
      }
      /**
       * <pre>
       * Set to true if the path is circular.
       * </pre>
       *
       * <code>bool is_circular = 3;</code>
       */
      public Builder setIsCircular(boolean value) {
        
        isCircular_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true if the path is circular.
       * </pre>
       *
       * <code>bool is_circular = 3;</code>
       */
      public Builder clearIsCircular() {
        
        isCircular_ = false;
        onChanged();
        return this;
      }

      private long length_ ;
      /**
       * <pre>
       * Optional length annotation for the Path.
       * </pre>
       *
       * <code>int64 length = 4;</code>
       */
      public long getLength() {
        return length_;
      }
      /**
       * <pre>
       * Optional length annotation for the Path.
       * </pre>
       *
       * <code>int64 length = 4;</code>
       */
      public Builder setLength(long value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional length annotation for the Path.
       * </pre>
       *
       * <code>int64 length = 4;</code>
       */
      public Builder clearLength() {
        
        length_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Path)
    }

    // @@protoc_insertion_point(class_scope:vg.Path)
    private static final vg.Vg.Path DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Path();
    }

    public static vg.Vg.Path getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Path>
        PARSER = new com.google.protobuf.AbstractParser<Path>() {
      public Path parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Path(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Path> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Path> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Path getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AlignmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Alignment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The sequence that has been aligned.
     * </pre>
     *
     * <code>string sequence = 1;</code>
     */
    java.lang.String getSequence();
    /**
     * <pre>
     * The sequence that has been aligned.
     * </pre>
     *
     * <code>string sequence = 1;</code>
     */
    com.google.protobuf.ByteString
        getSequenceBytes();

    /**
     * <pre>
     * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
     * </pre>
     *
     * <code>.vg.Path path = 2;</code>
     */
    boolean hasPath();
    /**
     * <pre>
     * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
     * </pre>
     *
     * <code>.vg.Path path = 2;</code>
     */
    vg.Vg.Path getPath();
    /**
     * <pre>
     * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
     * </pre>
     *
     * <code>.vg.Path path = 2;</code>
     */
    vg.Vg.PathOrBuilder getPathOrBuilder();

    /**
     * <pre>
     * The name of the sequence that has been aligned. Similar to read name in BAM.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the sequence that has been aligned. Similar to read name in BAM.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The quality scores for the sequence, as values on a 0-255 scale.
     * </pre>
     *
     * <code>bytes quality = 4;</code>
     */
    com.google.protobuf.ByteString getQuality();

    /**
     * <pre>
     * The mapping quality score for the alignment, in Phreds.
     * </pre>
     *
     * <code>int32 mapping_quality = 5;</code>
     */
    int getMappingQuality();

    /**
     * <pre>
     * The score for the alignment, in points.
     * </pre>
     *
     * <code>int32 score = 6;</code>
     */
    int getScore();

    /**
     * <pre>
     * The offset in the query at which this Alignment occurs.
     * </pre>
     *
     * <code>int32 query_position = 7;</code>
     */
    int getQueryPosition();

    /**
     * <pre>
     * The name of the sample that produced the aligned read.
     * </pre>
     *
     * <code>string sample_name = 9;</code>
     */
    java.lang.String getSampleName();
    /**
     * <pre>
     * The name of the sample that produced the aligned read.
     * </pre>
     *
     * <code>string sample_name = 9;</code>
     */
    com.google.protobuf.ByteString
        getSampleNameBytes();

    /**
     * <pre>
     * The name of the read group to which the aligned read belongs.
     * </pre>
     *
     * <code>string read_group = 10;</code>
     */
    java.lang.String getReadGroup();
    /**
     * <pre>
     * The name of the read group to which the aligned read belongs.
     * </pre>
     *
     * <code>string read_group = 10;</code>
     */
    com.google.protobuf.ByteString
        getReadGroupBytes();

    /**
     * <pre>
     * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
     * </pre>
     *
     * <code>.vg.Alignment fragment_prev = 11;</code>
     */
    boolean hasFragmentPrev();
    /**
     * <pre>
     * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
     * </pre>
     *
     * <code>.vg.Alignment fragment_prev = 11;</code>
     */
    vg.Vg.Alignment getFragmentPrev();
    /**
     * <pre>
     * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
     * </pre>
     *
     * <code>.vg.Alignment fragment_prev = 11;</code>
     */
    vg.Vg.AlignmentOrBuilder getFragmentPrevOrBuilder();

    /**
     * <pre>
     * Similarly, the next Alignment in the fragment.
     * </pre>
     *
     * <code>.vg.Alignment fragment_next = 12;</code>
     */
    boolean hasFragmentNext();
    /**
     * <pre>
     * Similarly, the next Alignment in the fragment.
     * </pre>
     *
     * <code>.vg.Alignment fragment_next = 12;</code>
     */
    vg.Vg.Alignment getFragmentNext();
    /**
     * <pre>
     * Similarly, the next Alignment in the fragment.
     * </pre>
     *
     * <code>.vg.Alignment fragment_next = 12;</code>
     */
    vg.Vg.AlignmentOrBuilder getFragmentNextOrBuilder();

    /**
     * <pre>
     * Flag marking the Alignment as secondary. All but one maximal-scoring alignment of a given read in a GAM file must be secondary.
     * </pre>
     *
     * <code>bool is_secondary = 15;</code>
     */
    boolean getIsSecondary();

    /**
     * <pre>
     * Portion of aligned bases that are perfect matches, or 0 if no bases are aligned.
     * </pre>
     *
     * <code>double identity = 16;</code>
     */
    double getIdentity();

    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    java.util.List<vg.Vg.Path> 
        getFragmentList();
    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    vg.Vg.Path getFragment(int index);
    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    int getFragmentCount();
    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    java.util.List<? extends vg.Vg.PathOrBuilder> 
        getFragmentOrBuilderList();
    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    vg.Vg.PathOrBuilder getFragmentOrBuilder(
        int index);

    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    java.util.List<vg.Vg.Locus> 
        getLocusList();
    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    vg.Vg.Locus getLocus(int index);
    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    int getLocusCount();
    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    java.util.List<? extends vg.Vg.LocusOrBuilder> 
        getLocusOrBuilderList();
    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    vg.Vg.LocusOrBuilder getLocusOrBuilder(
        int index);

    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    java.util.List<vg.Vg.Position> 
        getRefposList();
    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    vg.Vg.Position getRefpos(int index);
    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    int getRefposCount();
    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    java.util.List<? extends vg.Vg.PositionOrBuilder> 
        getRefposOrBuilderList();
    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    vg.Vg.PositionOrBuilder getRefposOrBuilder(
        int index);

    /**
     * <pre>
     * SAMTools-style flags
     * </pre>
     *
     * <code>bool read_paired = 20;</code>
     */
    boolean getReadPaired();

    /**
     * <code>bool read_mapped = 21;</code>
     */
    boolean getReadMapped();

    /**
     * <code>bool mate_unmapped = 22;</code>
     */
    boolean getMateUnmapped();

    /**
     * <code>bool read_on_reverse_strand = 23;</code>
     */
    boolean getReadOnReverseStrand();

    /**
     * <code>bool mate_on_reverse_strand = 24;</code>
     */
    boolean getMateOnReverseStrand();

    /**
     * <code>bool soft_clipped = 25;</code>
     */
    boolean getSoftClipped();

    /**
     * <code>bool discordant_insert_size = 26;</code>
     */
    boolean getDiscordantInsertSize();

    /**
     * <pre>
     * The fraction of bases in the alignment that are covered by MEMs with &lt;=1 total hits in the graph
     * </pre>
     *
     * <code>double uniqueness = 27;</code>
     */
    double getUniqueness();

    /**
     * <pre>
     * Correctness metric 1 = perfectly aligned to truth, 0 = not overlapping true alignment
     * </pre>
     *
     * <code>double correct = 28;</code>
     */
    double getCorrect();

    /**
     * <pre>
     * The ordered list of scores of secondary mappings
     * </pre>
     *
     * <code>repeated int32 secondary_score = 29;</code>
     */
    java.util.List<java.lang.Integer> getSecondaryScoreList();
    /**
     * <pre>
     * The ordered list of scores of secondary mappings
     * </pre>
     *
     * <code>repeated int32 secondary_score = 29;</code>
     */
    int getSecondaryScoreCount();
    /**
     * <pre>
     * The ordered list of scores of secondary mappings
     * </pre>
     *
     * <code>repeated int32 secondary_score = 29;</code>
     */
    int getSecondaryScore(int index);

    /**
     * <pre>
     * Score under the given fragment model, assume higher is better
     * </pre>
     *
     * <code>double fragment_score = 30;</code>
     */
    double getFragmentScore();

    /**
     * <code>bool mate_mapped_to_disjoint_subgraph = 31;</code>
     */
    boolean getMateMappedToDisjointSubgraph();

    /**
     * <pre>
     * The fragment length distribution under which a paired-end alignment was aligned.
     * </pre>
     *
     * <code>string fragment_length_distribution = 32;</code>
     */
    java.lang.String getFragmentLengthDistribution();
    /**
     * <pre>
     * The fragment length distribution under which a paired-end alignment was aligned.
     * </pre>
     *
     * <code>string fragment_length_distribution = 32;</code>
     */
    com.google.protobuf.ByteString
        getFragmentLengthDistributionBytes();

    /**
     * <pre>
     * The time this alignment took
     * </pre>
     *
     * <code>double time_used = 35;</code>
     */
    double getTimeUsed();

    /**
     * <pre>
     * A path/offset/orientation pair specifying the distance to the correct alignment
     * </pre>
     *
     * <code>.vg.Position to_correct = 36;</code>
     */
    boolean hasToCorrect();
    /**
     * <pre>
     * A path/offset/orientation pair specifying the distance to the correct alignment
     * </pre>
     *
     * <code>.vg.Position to_correct = 36;</code>
     */
    vg.Vg.Position getToCorrect();
    /**
     * <pre>
     * A path/offset/orientation pair specifying the distance to the correct alignment
     * </pre>
     *
     * <code>.vg.Position to_correct = 36;</code>
     */
    vg.Vg.PositionOrBuilder getToCorrectOrBuilder();

    /**
     * <pre>
     * This can be set to true to annotate the Alignment as having been mapped correctly.
     * </pre>
     *
     * <code>bool correctly_mapped = 37;</code>
     */
    boolean getCorrectlyMapped();

    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    boolean hasAnnotation();
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    com.google.protobuf.Struct getAnnotation();
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    com.google.protobuf.StructOrBuilder getAnnotationOrBuilder();
  }
  /**
   * <pre>
   * Alignments link query strings, such as other genomes or reads, to Paths.
   * </pre>
   *
   * Protobuf type {@code vg.Alignment}
   */
  public  static final class Alignment extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Alignment)
      AlignmentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Alignment.newBuilder() to construct.
    private Alignment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Alignment() {
      sequence_ = "";
      name_ = "";
      quality_ = com.google.protobuf.ByteString.EMPTY;
      mappingQuality_ = 0;
      score_ = 0;
      queryPosition_ = 0;
      sampleName_ = "";
      readGroup_ = "";
      isSecondary_ = false;
      identity_ = 0D;
      fragment_ = java.util.Collections.emptyList();
      locus_ = java.util.Collections.emptyList();
      refpos_ = java.util.Collections.emptyList();
      readPaired_ = false;
      readMapped_ = false;
      mateUnmapped_ = false;
      readOnReverseStrand_ = false;
      mateOnReverseStrand_ = false;
      softClipped_ = false;
      discordantInsertSize_ = false;
      uniqueness_ = 0D;
      correct_ = 0D;
      secondaryScore_ = java.util.Collections.emptyList();
      fragmentScore_ = 0D;
      mateMappedToDisjointSubgraph_ = false;
      fragmentLengthDistribution_ = "";
      timeUsed_ = 0D;
      correctlyMapped_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Alignment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              sequence_ = s;
              break;
            }
            case 18: {
              vg.Vg.Path.Builder subBuilder = null;
              if (path_ != null) {
                subBuilder = path_.toBuilder();
              }
              path_ = input.readMessage(vg.Vg.Path.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(path_);
                path_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {

              quality_ = input.readBytes();
              break;
            }
            case 40: {

              mappingQuality_ = input.readInt32();
              break;
            }
            case 48: {

              score_ = input.readInt32();
              break;
            }
            case 56: {

              queryPosition_ = input.readInt32();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              sampleName_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              readGroup_ = s;
              break;
            }
            case 90: {
              vg.Vg.Alignment.Builder subBuilder = null;
              if (fragmentPrev_ != null) {
                subBuilder = fragmentPrev_.toBuilder();
              }
              fragmentPrev_ = input.readMessage(vg.Vg.Alignment.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fragmentPrev_);
                fragmentPrev_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              vg.Vg.Alignment.Builder subBuilder = null;
              if (fragmentNext_ != null) {
                subBuilder = fragmentNext_.toBuilder();
              }
              fragmentNext_ = input.readMessage(vg.Vg.Alignment.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fragmentNext_);
                fragmentNext_ = subBuilder.buildPartial();
              }

              break;
            }
            case 120: {

              isSecondary_ = input.readBool();
              break;
            }
            case 129: {

              identity_ = input.readDouble();
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                fragment_ = new java.util.ArrayList<vg.Vg.Path>();
                mutable_bitField0_ |= 0x00002000;
              }
              fragment_.add(
                  input.readMessage(vg.Vg.Path.parser(), extensionRegistry));
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                locus_ = new java.util.ArrayList<vg.Vg.Locus>();
                mutable_bitField0_ |= 0x00004000;
              }
              locus_.add(
                  input.readMessage(vg.Vg.Locus.parser(), extensionRegistry));
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                refpos_ = new java.util.ArrayList<vg.Vg.Position>();
                mutable_bitField0_ |= 0x00008000;
              }
              refpos_.add(
                  input.readMessage(vg.Vg.Position.parser(), extensionRegistry));
              break;
            }
            case 160: {

              readPaired_ = input.readBool();
              break;
            }
            case 168: {

              readMapped_ = input.readBool();
              break;
            }
            case 176: {

              mateUnmapped_ = input.readBool();
              break;
            }
            case 184: {

              readOnReverseStrand_ = input.readBool();
              break;
            }
            case 192: {

              mateOnReverseStrand_ = input.readBool();
              break;
            }
            case 200: {

              softClipped_ = input.readBool();
              break;
            }
            case 208: {

              discordantInsertSize_ = input.readBool();
              break;
            }
            case 217: {

              uniqueness_ = input.readDouble();
              break;
            }
            case 225: {

              correct_ = input.readDouble();
              break;
            }
            case 232: {
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                secondaryScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x02000000;
              }
              secondaryScore_.add(input.readInt32());
              break;
            }
            case 234: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000) && input.getBytesUntilLimit() > 0) {
                secondaryScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x02000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                secondaryScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 241: {

              fragmentScore_ = input.readDouble();
              break;
            }
            case 248: {

              mateMappedToDisjointSubgraph_ = input.readBool();
              break;
            }
            case 258: {
              java.lang.String s = input.readStringRequireUtf8();

              fragmentLengthDistribution_ = s;
              break;
            }
            case 281: {

              timeUsed_ = input.readDouble();
              break;
            }
            case 290: {
              vg.Vg.Position.Builder subBuilder = null;
              if (toCorrect_ != null) {
                subBuilder = toCorrect_.toBuilder();
              }
              toCorrect_ = input.readMessage(vg.Vg.Position.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toCorrect_);
                toCorrect_ = subBuilder.buildPartial();
              }

              break;
            }
            case 296: {

              correctlyMapped_ = input.readBool();
              break;
            }
            case 802: {
              com.google.protobuf.Struct.Builder subBuilder = null;
              if (annotation_ != null) {
                subBuilder = annotation_.toBuilder();
              }
              annotation_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(annotation_);
                annotation_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          fragment_ = java.util.Collections.unmodifiableList(fragment_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          locus_ = java.util.Collections.unmodifiableList(locus_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          refpos_ = java.util.Collections.unmodifiableList(refpos_);
        }
        if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
          secondaryScore_ = java.util.Collections.unmodifiableList(secondaryScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Alignment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Alignment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Alignment.class, vg.Vg.Alignment.Builder.class);
    }

    private int bitField0_;
    public static final int SEQUENCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object sequence_;
    /**
     * <pre>
     * The sequence that has been aligned.
     * </pre>
     *
     * <code>string sequence = 1;</code>
     */
    public java.lang.String getSequence() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sequence_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The sequence that has been aligned.
     * </pre>
     *
     * <code>string sequence = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSequenceBytes() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequence_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATH_FIELD_NUMBER = 2;
    private vg.Vg.Path path_;
    /**
     * <pre>
     * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
     * </pre>
     *
     * <code>.vg.Path path = 2;</code>
     */
    public boolean hasPath() {
      return path_ != null;
    }
    /**
     * <pre>
     * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
     * </pre>
     *
     * <code>.vg.Path path = 2;</code>
     */
    public vg.Vg.Path getPath() {
      return path_ == null ? vg.Vg.Path.getDefaultInstance() : path_;
    }
    /**
     * <pre>
     * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
     * </pre>
     *
     * <code>.vg.Path path = 2;</code>
     */
    public vg.Vg.PathOrBuilder getPathOrBuilder() {
      return getPath();
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the sequence that has been aligned. Similar to read name in BAM.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the sequence that has been aligned. Similar to read name in BAM.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUALITY_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString quality_;
    /**
     * <pre>
     * The quality scores for the sequence, as values on a 0-255 scale.
     * </pre>
     *
     * <code>bytes quality = 4;</code>
     */
    public com.google.protobuf.ByteString getQuality() {
      return quality_;
    }

    public static final int MAPPING_QUALITY_FIELD_NUMBER = 5;
    private int mappingQuality_;
    /**
     * <pre>
     * The mapping quality score for the alignment, in Phreds.
     * </pre>
     *
     * <code>int32 mapping_quality = 5;</code>
     */
    public int getMappingQuality() {
      return mappingQuality_;
    }

    public static final int SCORE_FIELD_NUMBER = 6;
    private int score_;
    /**
     * <pre>
     * The score for the alignment, in points.
     * </pre>
     *
     * <code>int32 score = 6;</code>
     */
    public int getScore() {
      return score_;
    }

    public static final int QUERY_POSITION_FIELD_NUMBER = 7;
    private int queryPosition_;
    /**
     * <pre>
     * The offset in the query at which this Alignment occurs.
     * </pre>
     *
     * <code>int32 query_position = 7;</code>
     */
    public int getQueryPosition() {
      return queryPosition_;
    }

    public static final int SAMPLE_NAME_FIELD_NUMBER = 9;
    private volatile java.lang.Object sampleName_;
    /**
     * <pre>
     * The name of the sample that produced the aligned read.
     * </pre>
     *
     * <code>string sample_name = 9;</code>
     */
    public java.lang.String getSampleName() {
      java.lang.Object ref = sampleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sampleName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the sample that produced the aligned read.
     * </pre>
     *
     * <code>string sample_name = 9;</code>
     */
    public com.google.protobuf.ByteString
        getSampleNameBytes() {
      java.lang.Object ref = sampleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sampleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int READ_GROUP_FIELD_NUMBER = 10;
    private volatile java.lang.Object readGroup_;
    /**
     * <pre>
     * The name of the read group to which the aligned read belongs.
     * </pre>
     *
     * <code>string read_group = 10;</code>
     */
    public java.lang.String getReadGroup() {
      java.lang.Object ref = readGroup_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        readGroup_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the read group to which the aligned read belongs.
     * </pre>
     *
     * <code>string read_group = 10;</code>
     */
    public com.google.protobuf.ByteString
        getReadGroupBytes() {
      java.lang.Object ref = readGroup_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        readGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FRAGMENT_PREV_FIELD_NUMBER = 11;
    private vg.Vg.Alignment fragmentPrev_;
    /**
     * <pre>
     * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
     * </pre>
     *
     * <code>.vg.Alignment fragment_prev = 11;</code>
     */
    public boolean hasFragmentPrev() {
      return fragmentPrev_ != null;
    }
    /**
     * <pre>
     * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
     * </pre>
     *
     * <code>.vg.Alignment fragment_prev = 11;</code>
     */
    public vg.Vg.Alignment getFragmentPrev() {
      return fragmentPrev_ == null ? vg.Vg.Alignment.getDefaultInstance() : fragmentPrev_;
    }
    /**
     * <pre>
     * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
     * </pre>
     *
     * <code>.vg.Alignment fragment_prev = 11;</code>
     */
    public vg.Vg.AlignmentOrBuilder getFragmentPrevOrBuilder() {
      return getFragmentPrev();
    }

    public static final int FRAGMENT_NEXT_FIELD_NUMBER = 12;
    private vg.Vg.Alignment fragmentNext_;
    /**
     * <pre>
     * Similarly, the next Alignment in the fragment.
     * </pre>
     *
     * <code>.vg.Alignment fragment_next = 12;</code>
     */
    public boolean hasFragmentNext() {
      return fragmentNext_ != null;
    }
    /**
     * <pre>
     * Similarly, the next Alignment in the fragment.
     * </pre>
     *
     * <code>.vg.Alignment fragment_next = 12;</code>
     */
    public vg.Vg.Alignment getFragmentNext() {
      return fragmentNext_ == null ? vg.Vg.Alignment.getDefaultInstance() : fragmentNext_;
    }
    /**
     * <pre>
     * Similarly, the next Alignment in the fragment.
     * </pre>
     *
     * <code>.vg.Alignment fragment_next = 12;</code>
     */
    public vg.Vg.AlignmentOrBuilder getFragmentNextOrBuilder() {
      return getFragmentNext();
    }

    public static final int IS_SECONDARY_FIELD_NUMBER = 15;
    private boolean isSecondary_;
    /**
     * <pre>
     * Flag marking the Alignment as secondary. All but one maximal-scoring alignment of a given read in a GAM file must be secondary.
     * </pre>
     *
     * <code>bool is_secondary = 15;</code>
     */
    public boolean getIsSecondary() {
      return isSecondary_;
    }

    public static final int IDENTITY_FIELD_NUMBER = 16;
    private double identity_;
    /**
     * <pre>
     * Portion of aligned bases that are perfect matches, or 0 if no bases are aligned.
     * </pre>
     *
     * <code>double identity = 16;</code>
     */
    public double getIdentity() {
      return identity_;
    }

    public static final int FRAGMENT_FIELD_NUMBER = 17;
    private java.util.List<vg.Vg.Path> fragment_;
    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    public java.util.List<vg.Vg.Path> getFragmentList() {
      return fragment_;
    }
    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    public java.util.List<? extends vg.Vg.PathOrBuilder> 
        getFragmentOrBuilderList() {
      return fragment_;
    }
    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    public int getFragmentCount() {
      return fragment_.size();
    }
    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    public vg.Vg.Path getFragment(int index) {
      return fragment_.get(index);
    }
    /**
     * <pre>
     * An estimate of the length of the fragment, if this Alignment is paired.
     * </pre>
     *
     * <code>repeated .vg.Path fragment = 17;</code>
     */
    public vg.Vg.PathOrBuilder getFragmentOrBuilder(
        int index) {
      return fragment_.get(index);
    }

    public static final int LOCUS_FIELD_NUMBER = 18;
    private java.util.List<vg.Vg.Locus> locus_;
    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    public java.util.List<vg.Vg.Locus> getLocusList() {
      return locus_;
    }
    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    public java.util.List<? extends vg.Vg.LocusOrBuilder> 
        getLocusOrBuilderList() {
      return locus_;
    }
    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    public int getLocusCount() {
      return locus_.size();
    }
    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    public vg.Vg.Locus getLocus(int index) {
      return locus_.get(index);
    }
    /**
     * <pre>
     * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
     * </pre>
     *
     * <code>repeated .vg.Locus locus = 18;</code>
     */
    public vg.Vg.LocusOrBuilder getLocusOrBuilder(
        int index) {
      return locus_.get(index);
    }

    public static final int REFPOS_FIELD_NUMBER = 19;
    private java.util.List<vg.Vg.Position> refpos_;
    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    public java.util.List<vg.Vg.Position> getRefposList() {
      return refpos_;
    }
    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    public java.util.List<? extends vg.Vg.PositionOrBuilder> 
        getRefposOrBuilderList() {
      return refpos_;
    }
    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    public int getRefposCount() {
      return refpos_.size();
    }
    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    public vg.Vg.Position getRefpos(int index) {
      return refpos_.get(index);
    }
    /**
     * <pre>
     * Position of the alignment in reference paths embedded in graph
     * </pre>
     *
     * <code>repeated .vg.Position refpos = 19;</code>
     */
    public vg.Vg.PositionOrBuilder getRefposOrBuilder(
        int index) {
      return refpos_.get(index);
    }

    public static final int READ_PAIRED_FIELD_NUMBER = 20;
    private boolean readPaired_;
    /**
     * <pre>
     * SAMTools-style flags
     * </pre>
     *
     * <code>bool read_paired = 20;</code>
     */
    public boolean getReadPaired() {
      return readPaired_;
    }

    public static final int READ_MAPPED_FIELD_NUMBER = 21;
    private boolean readMapped_;
    /**
     * <code>bool read_mapped = 21;</code>
     */
    public boolean getReadMapped() {
      return readMapped_;
    }

    public static final int MATE_UNMAPPED_FIELD_NUMBER = 22;
    private boolean mateUnmapped_;
    /**
     * <code>bool mate_unmapped = 22;</code>
     */
    public boolean getMateUnmapped() {
      return mateUnmapped_;
    }

    public static final int READ_ON_REVERSE_STRAND_FIELD_NUMBER = 23;
    private boolean readOnReverseStrand_;
    /**
     * <code>bool read_on_reverse_strand = 23;</code>
     */
    public boolean getReadOnReverseStrand() {
      return readOnReverseStrand_;
    }

    public static final int MATE_ON_REVERSE_STRAND_FIELD_NUMBER = 24;
    private boolean mateOnReverseStrand_;
    /**
     * <code>bool mate_on_reverse_strand = 24;</code>
     */
    public boolean getMateOnReverseStrand() {
      return mateOnReverseStrand_;
    }

    public static final int SOFT_CLIPPED_FIELD_NUMBER = 25;
    private boolean softClipped_;
    /**
     * <code>bool soft_clipped = 25;</code>
     */
    public boolean getSoftClipped() {
      return softClipped_;
    }

    public static final int DISCORDANT_INSERT_SIZE_FIELD_NUMBER = 26;
    private boolean discordantInsertSize_;
    /**
     * <code>bool discordant_insert_size = 26;</code>
     */
    public boolean getDiscordantInsertSize() {
      return discordantInsertSize_;
    }

    public static final int UNIQUENESS_FIELD_NUMBER = 27;
    private double uniqueness_;
    /**
     * <pre>
     * The fraction of bases in the alignment that are covered by MEMs with &lt;=1 total hits in the graph
     * </pre>
     *
     * <code>double uniqueness = 27;</code>
     */
    public double getUniqueness() {
      return uniqueness_;
    }

    public static final int CORRECT_FIELD_NUMBER = 28;
    private double correct_;
    /**
     * <pre>
     * Correctness metric 1 = perfectly aligned to truth, 0 = not overlapping true alignment
     * </pre>
     *
     * <code>double correct = 28;</code>
     */
    public double getCorrect() {
      return correct_;
    }

    public static final int SECONDARY_SCORE_FIELD_NUMBER = 29;
    private java.util.List<java.lang.Integer> secondaryScore_;
    /**
     * <pre>
     * The ordered list of scores of secondary mappings
     * </pre>
     *
     * <code>repeated int32 secondary_score = 29;</code>
     */
    public java.util.List<java.lang.Integer>
        getSecondaryScoreList() {
      return secondaryScore_;
    }
    /**
     * <pre>
     * The ordered list of scores of secondary mappings
     * </pre>
     *
     * <code>repeated int32 secondary_score = 29;</code>
     */
    public int getSecondaryScoreCount() {
      return secondaryScore_.size();
    }
    /**
     * <pre>
     * The ordered list of scores of secondary mappings
     * </pre>
     *
     * <code>repeated int32 secondary_score = 29;</code>
     */
    public int getSecondaryScore(int index) {
      return secondaryScore_.get(index);
    }
    private int secondaryScoreMemoizedSerializedSize = -1;

    public static final int FRAGMENT_SCORE_FIELD_NUMBER = 30;
    private double fragmentScore_;
    /**
     * <pre>
     * Score under the given fragment model, assume higher is better
     * </pre>
     *
     * <code>double fragment_score = 30;</code>
     */
    public double getFragmentScore() {
      return fragmentScore_;
    }

    public static final int MATE_MAPPED_TO_DISJOINT_SUBGRAPH_FIELD_NUMBER = 31;
    private boolean mateMappedToDisjointSubgraph_;
    /**
     * <code>bool mate_mapped_to_disjoint_subgraph = 31;</code>
     */
    public boolean getMateMappedToDisjointSubgraph() {
      return mateMappedToDisjointSubgraph_;
    }

    public static final int FRAGMENT_LENGTH_DISTRIBUTION_FIELD_NUMBER = 32;
    private volatile java.lang.Object fragmentLengthDistribution_;
    /**
     * <pre>
     * The fragment length distribution under which a paired-end alignment was aligned.
     * </pre>
     *
     * <code>string fragment_length_distribution = 32;</code>
     */
    public java.lang.String getFragmentLengthDistribution() {
      java.lang.Object ref = fragmentLengthDistribution_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fragmentLengthDistribution_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The fragment length distribution under which a paired-end alignment was aligned.
     * </pre>
     *
     * <code>string fragment_length_distribution = 32;</code>
     */
    public com.google.protobuf.ByteString
        getFragmentLengthDistributionBytes() {
      java.lang.Object ref = fragmentLengthDistribution_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fragmentLengthDistribution_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_USED_FIELD_NUMBER = 35;
    private double timeUsed_;
    /**
     * <pre>
     * The time this alignment took
     * </pre>
     *
     * <code>double time_used = 35;</code>
     */
    public double getTimeUsed() {
      return timeUsed_;
    }

    public static final int TO_CORRECT_FIELD_NUMBER = 36;
    private vg.Vg.Position toCorrect_;
    /**
     * <pre>
     * A path/offset/orientation pair specifying the distance to the correct alignment
     * </pre>
     *
     * <code>.vg.Position to_correct = 36;</code>
     */
    public boolean hasToCorrect() {
      return toCorrect_ != null;
    }
    /**
     * <pre>
     * A path/offset/orientation pair specifying the distance to the correct alignment
     * </pre>
     *
     * <code>.vg.Position to_correct = 36;</code>
     */
    public vg.Vg.Position getToCorrect() {
      return toCorrect_ == null ? vg.Vg.Position.getDefaultInstance() : toCorrect_;
    }
    /**
     * <pre>
     * A path/offset/orientation pair specifying the distance to the correct alignment
     * </pre>
     *
     * <code>.vg.Position to_correct = 36;</code>
     */
    public vg.Vg.PositionOrBuilder getToCorrectOrBuilder() {
      return getToCorrect();
    }

    public static final int CORRECTLY_MAPPED_FIELD_NUMBER = 37;
    private boolean correctlyMapped_;
    /**
     * <pre>
     * This can be set to true to annotate the Alignment as having been mapped correctly.
     * </pre>
     *
     * <code>bool correctly_mapped = 37;</code>
     */
    public boolean getCorrectlyMapped() {
      return correctlyMapped_;
    }

    public static final int ANNOTATION_FIELD_NUMBER = 100;
    private com.google.protobuf.Struct annotation_;
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    public boolean hasAnnotation() {
      return annotation_ != null;
    }
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    public com.google.protobuf.Struct getAnnotation() {
      return annotation_ == null ? com.google.protobuf.Struct.getDefaultInstance() : annotation_;
    }
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    public com.google.protobuf.StructOrBuilder getAnnotationOrBuilder() {
      return getAnnotation();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getSequenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sequence_);
      }
      if (path_ != null) {
        output.writeMessage(2, getPath());
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!quality_.isEmpty()) {
        output.writeBytes(4, quality_);
      }
      if (mappingQuality_ != 0) {
        output.writeInt32(5, mappingQuality_);
      }
      if (score_ != 0) {
        output.writeInt32(6, score_);
      }
      if (queryPosition_ != 0) {
        output.writeInt32(7, queryPosition_);
      }
      if (!getSampleNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, sampleName_);
      }
      if (!getReadGroupBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, readGroup_);
      }
      if (fragmentPrev_ != null) {
        output.writeMessage(11, getFragmentPrev());
      }
      if (fragmentNext_ != null) {
        output.writeMessage(12, getFragmentNext());
      }
      if (isSecondary_ != false) {
        output.writeBool(15, isSecondary_);
      }
      if (identity_ != 0D) {
        output.writeDouble(16, identity_);
      }
      for (int i = 0; i < fragment_.size(); i++) {
        output.writeMessage(17, fragment_.get(i));
      }
      for (int i = 0; i < locus_.size(); i++) {
        output.writeMessage(18, locus_.get(i));
      }
      for (int i = 0; i < refpos_.size(); i++) {
        output.writeMessage(19, refpos_.get(i));
      }
      if (readPaired_ != false) {
        output.writeBool(20, readPaired_);
      }
      if (readMapped_ != false) {
        output.writeBool(21, readMapped_);
      }
      if (mateUnmapped_ != false) {
        output.writeBool(22, mateUnmapped_);
      }
      if (readOnReverseStrand_ != false) {
        output.writeBool(23, readOnReverseStrand_);
      }
      if (mateOnReverseStrand_ != false) {
        output.writeBool(24, mateOnReverseStrand_);
      }
      if (softClipped_ != false) {
        output.writeBool(25, softClipped_);
      }
      if (discordantInsertSize_ != false) {
        output.writeBool(26, discordantInsertSize_);
      }
      if (uniqueness_ != 0D) {
        output.writeDouble(27, uniqueness_);
      }
      if (correct_ != 0D) {
        output.writeDouble(28, correct_);
      }
      if (getSecondaryScoreList().size() > 0) {
        output.writeUInt32NoTag(234);
        output.writeUInt32NoTag(secondaryScoreMemoizedSerializedSize);
      }
      for (int i = 0; i < secondaryScore_.size(); i++) {
        output.writeInt32NoTag(secondaryScore_.get(i));
      }
      if (fragmentScore_ != 0D) {
        output.writeDouble(30, fragmentScore_);
      }
      if (mateMappedToDisjointSubgraph_ != false) {
        output.writeBool(31, mateMappedToDisjointSubgraph_);
      }
      if (!getFragmentLengthDistributionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 32, fragmentLengthDistribution_);
      }
      if (timeUsed_ != 0D) {
        output.writeDouble(35, timeUsed_);
      }
      if (toCorrect_ != null) {
        output.writeMessage(36, getToCorrect());
      }
      if (correctlyMapped_ != false) {
        output.writeBool(37, correctlyMapped_);
      }
      if (annotation_ != null) {
        output.writeMessage(100, getAnnotation());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSequenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sequence_);
      }
      if (path_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPath());
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!quality_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, quality_);
      }
      if (mappingQuality_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mappingQuality_);
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, score_);
      }
      if (queryPosition_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, queryPosition_);
      }
      if (!getSampleNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, sampleName_);
      }
      if (!getReadGroupBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, readGroup_);
      }
      if (fragmentPrev_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getFragmentPrev());
      }
      if (fragmentNext_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getFragmentNext());
      }
      if (isSecondary_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, isSecondary_);
      }
      if (identity_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, identity_);
      }
      for (int i = 0; i < fragment_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, fragment_.get(i));
      }
      for (int i = 0; i < locus_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, locus_.get(i));
      }
      for (int i = 0; i < refpos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, refpos_.get(i));
      }
      if (readPaired_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, readPaired_);
      }
      if (readMapped_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, readMapped_);
      }
      if (mateUnmapped_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, mateUnmapped_);
      }
      if (readOnReverseStrand_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, readOnReverseStrand_);
      }
      if (mateOnReverseStrand_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, mateOnReverseStrand_);
      }
      if (softClipped_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, softClipped_);
      }
      if (discordantInsertSize_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, discordantInsertSize_);
      }
      if (uniqueness_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(27, uniqueness_);
      }
      if (correct_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(28, correct_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < secondaryScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(secondaryScore_.get(i));
        }
        size += dataSize;
        if (!getSecondaryScoreList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        secondaryScoreMemoizedSerializedSize = dataSize;
      }
      if (fragmentScore_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(30, fragmentScore_);
      }
      if (mateMappedToDisjointSubgraph_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(31, mateMappedToDisjointSubgraph_);
      }
      if (!getFragmentLengthDistributionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(32, fragmentLengthDistribution_);
      }
      if (timeUsed_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(35, timeUsed_);
      }
      if (toCorrect_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, getToCorrect());
      }
      if (correctlyMapped_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(37, correctlyMapped_);
      }
      if (annotation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, getAnnotation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Alignment)) {
        return super.equals(obj);
      }
      vg.Vg.Alignment other = (vg.Vg.Alignment) obj;

      boolean result = true;
      result = result && getSequence()
          .equals(other.getSequence());
      result = result && (hasPath() == other.hasPath());
      if (hasPath()) {
        result = result && getPath()
            .equals(other.getPath());
      }
      result = result && getName()
          .equals(other.getName());
      result = result && getQuality()
          .equals(other.getQuality());
      result = result && (getMappingQuality()
          == other.getMappingQuality());
      result = result && (getScore()
          == other.getScore());
      result = result && (getQueryPosition()
          == other.getQueryPosition());
      result = result && getSampleName()
          .equals(other.getSampleName());
      result = result && getReadGroup()
          .equals(other.getReadGroup());
      result = result && (hasFragmentPrev() == other.hasFragmentPrev());
      if (hasFragmentPrev()) {
        result = result && getFragmentPrev()
            .equals(other.getFragmentPrev());
      }
      result = result && (hasFragmentNext() == other.hasFragmentNext());
      if (hasFragmentNext()) {
        result = result && getFragmentNext()
            .equals(other.getFragmentNext());
      }
      result = result && (getIsSecondary()
          == other.getIsSecondary());
      result = result && (
          java.lang.Double.doubleToLongBits(getIdentity())
          == java.lang.Double.doubleToLongBits(
              other.getIdentity()));
      result = result && getFragmentList()
          .equals(other.getFragmentList());
      result = result && getLocusList()
          .equals(other.getLocusList());
      result = result && getRefposList()
          .equals(other.getRefposList());
      result = result && (getReadPaired()
          == other.getReadPaired());
      result = result && (getReadMapped()
          == other.getReadMapped());
      result = result && (getMateUnmapped()
          == other.getMateUnmapped());
      result = result && (getReadOnReverseStrand()
          == other.getReadOnReverseStrand());
      result = result && (getMateOnReverseStrand()
          == other.getMateOnReverseStrand());
      result = result && (getSoftClipped()
          == other.getSoftClipped());
      result = result && (getDiscordantInsertSize()
          == other.getDiscordantInsertSize());
      result = result && (
          java.lang.Double.doubleToLongBits(getUniqueness())
          == java.lang.Double.doubleToLongBits(
              other.getUniqueness()));
      result = result && (
          java.lang.Double.doubleToLongBits(getCorrect())
          == java.lang.Double.doubleToLongBits(
              other.getCorrect()));
      result = result && getSecondaryScoreList()
          .equals(other.getSecondaryScoreList());
      result = result && (
          java.lang.Double.doubleToLongBits(getFragmentScore())
          == java.lang.Double.doubleToLongBits(
              other.getFragmentScore()));
      result = result && (getMateMappedToDisjointSubgraph()
          == other.getMateMappedToDisjointSubgraph());
      result = result && getFragmentLengthDistribution()
          .equals(other.getFragmentLengthDistribution());
      result = result && (
          java.lang.Double.doubleToLongBits(getTimeUsed())
          == java.lang.Double.doubleToLongBits(
              other.getTimeUsed()));
      result = result && (hasToCorrect() == other.hasToCorrect());
      if (hasToCorrect()) {
        result = result && getToCorrect()
            .equals(other.getToCorrect());
      }
      result = result && (getCorrectlyMapped()
          == other.getCorrectlyMapped());
      result = result && (hasAnnotation() == other.hasAnnotation());
      if (hasAnnotation()) {
        result = result && getAnnotation()
            .equals(other.getAnnotation());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSequence().hashCode();
      if (hasPath()) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
      }
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + getQuality().hashCode();
      hash = (37 * hash) + MAPPING_QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + getMappingQuality();
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (37 * hash) + QUERY_POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getQueryPosition();
      hash = (37 * hash) + SAMPLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getSampleName().hashCode();
      hash = (37 * hash) + READ_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getReadGroup().hashCode();
      if (hasFragmentPrev()) {
        hash = (37 * hash) + FRAGMENT_PREV_FIELD_NUMBER;
        hash = (53 * hash) + getFragmentPrev().hashCode();
      }
      if (hasFragmentNext()) {
        hash = (37 * hash) + FRAGMENT_NEXT_FIELD_NUMBER;
        hash = (53 * hash) + getFragmentNext().hashCode();
      }
      hash = (37 * hash) + IS_SECONDARY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSecondary());
      hash = (37 * hash) + IDENTITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getIdentity()));
      if (getFragmentCount() > 0) {
        hash = (37 * hash) + FRAGMENT_FIELD_NUMBER;
        hash = (53 * hash) + getFragmentList().hashCode();
      }
      if (getLocusCount() > 0) {
        hash = (37 * hash) + LOCUS_FIELD_NUMBER;
        hash = (53 * hash) + getLocusList().hashCode();
      }
      if (getRefposCount() > 0) {
        hash = (37 * hash) + REFPOS_FIELD_NUMBER;
        hash = (53 * hash) + getRefposList().hashCode();
      }
      hash = (37 * hash) + READ_PAIRED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReadPaired());
      hash = (37 * hash) + READ_MAPPED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReadMapped());
      hash = (37 * hash) + MATE_UNMAPPED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMateUnmapped());
      hash = (37 * hash) + READ_ON_REVERSE_STRAND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReadOnReverseStrand());
      hash = (37 * hash) + MATE_ON_REVERSE_STRAND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMateOnReverseStrand());
      hash = (37 * hash) + SOFT_CLIPPED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSoftClipped());
      hash = (37 * hash) + DISCORDANT_INSERT_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDiscordantInsertSize());
      hash = (37 * hash) + UNIQUENESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getUniqueness()));
      hash = (37 * hash) + CORRECT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCorrect()));
      if (getSecondaryScoreCount() > 0) {
        hash = (37 * hash) + SECONDARY_SCORE_FIELD_NUMBER;
        hash = (53 * hash) + getSecondaryScoreList().hashCode();
      }
      hash = (37 * hash) + FRAGMENT_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFragmentScore()));
      hash = (37 * hash) + MATE_MAPPED_TO_DISJOINT_SUBGRAPH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMateMappedToDisjointSubgraph());
      hash = (37 * hash) + FRAGMENT_LENGTH_DISTRIBUTION_FIELD_NUMBER;
      hash = (53 * hash) + getFragmentLengthDistribution().hashCode();
      hash = (37 * hash) + TIME_USED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTimeUsed()));
      if (hasToCorrect()) {
        hash = (37 * hash) + TO_CORRECT_FIELD_NUMBER;
        hash = (53 * hash) + getToCorrect().hashCode();
      }
      hash = (37 * hash) + CORRECTLY_MAPPED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCorrectlyMapped());
      if (hasAnnotation()) {
        hash = (37 * hash) + ANNOTATION_FIELD_NUMBER;
        hash = (53 * hash) + getAnnotation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Alignment parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Alignment parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Alignment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Alignment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Alignment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Alignment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Alignment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Alignment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Alignment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Alignment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Alignment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Alignment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Alignment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Alignments link query strings, such as other genomes or reads, to Paths.
     * </pre>
     *
     * Protobuf type {@code vg.Alignment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Alignment)
        vg.Vg.AlignmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Alignment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Alignment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Alignment.class, vg.Vg.Alignment.Builder.class);
      }

      // Construct using vg.Vg.Alignment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFragmentFieldBuilder();
          getLocusFieldBuilder();
          getRefposFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        sequence_ = "";

        if (pathBuilder_ == null) {
          path_ = null;
        } else {
          path_ = null;
          pathBuilder_ = null;
        }
        name_ = "";

        quality_ = com.google.protobuf.ByteString.EMPTY;

        mappingQuality_ = 0;

        score_ = 0;

        queryPosition_ = 0;

        sampleName_ = "";

        readGroup_ = "";

        if (fragmentPrevBuilder_ == null) {
          fragmentPrev_ = null;
        } else {
          fragmentPrev_ = null;
          fragmentPrevBuilder_ = null;
        }
        if (fragmentNextBuilder_ == null) {
          fragmentNext_ = null;
        } else {
          fragmentNext_ = null;
          fragmentNextBuilder_ = null;
        }
        isSecondary_ = false;

        identity_ = 0D;

        if (fragmentBuilder_ == null) {
          fragment_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          fragmentBuilder_.clear();
        }
        if (locusBuilder_ == null) {
          locus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          locusBuilder_.clear();
        }
        if (refposBuilder_ == null) {
          refpos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          refposBuilder_.clear();
        }
        readPaired_ = false;

        readMapped_ = false;

        mateUnmapped_ = false;

        readOnReverseStrand_ = false;

        mateOnReverseStrand_ = false;

        softClipped_ = false;

        discordantInsertSize_ = false;

        uniqueness_ = 0D;

        correct_ = 0D;

        secondaryScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        fragmentScore_ = 0D;

        mateMappedToDisjointSubgraph_ = false;

        fragmentLengthDistribution_ = "";

        timeUsed_ = 0D;

        if (toCorrectBuilder_ == null) {
          toCorrect_ = null;
        } else {
          toCorrect_ = null;
          toCorrectBuilder_ = null;
        }
        correctlyMapped_ = false;

        if (annotationBuilder_ == null) {
          annotation_ = null;
        } else {
          annotation_ = null;
          annotationBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Alignment_descriptor;
      }

      public vg.Vg.Alignment getDefaultInstanceForType() {
        return vg.Vg.Alignment.getDefaultInstance();
      }

      public vg.Vg.Alignment build() {
        vg.Vg.Alignment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Alignment buildPartial() {
        vg.Vg.Alignment result = new vg.Vg.Alignment(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        result.sequence_ = sequence_;
        if (pathBuilder_ == null) {
          result.path_ = path_;
        } else {
          result.path_ = pathBuilder_.build();
        }
        result.name_ = name_;
        result.quality_ = quality_;
        result.mappingQuality_ = mappingQuality_;
        result.score_ = score_;
        result.queryPosition_ = queryPosition_;
        result.sampleName_ = sampleName_;
        result.readGroup_ = readGroup_;
        if (fragmentPrevBuilder_ == null) {
          result.fragmentPrev_ = fragmentPrev_;
        } else {
          result.fragmentPrev_ = fragmentPrevBuilder_.build();
        }
        if (fragmentNextBuilder_ == null) {
          result.fragmentNext_ = fragmentNext_;
        } else {
          result.fragmentNext_ = fragmentNextBuilder_.build();
        }
        result.isSecondary_ = isSecondary_;
        result.identity_ = identity_;
        if (fragmentBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            fragment_ = java.util.Collections.unmodifiableList(fragment_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.fragment_ = fragment_;
        } else {
          result.fragment_ = fragmentBuilder_.build();
        }
        if (locusBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            locus_ = java.util.Collections.unmodifiableList(locus_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.locus_ = locus_;
        } else {
          result.locus_ = locusBuilder_.build();
        }
        if (refposBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            refpos_ = java.util.Collections.unmodifiableList(refpos_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.refpos_ = refpos_;
        } else {
          result.refpos_ = refposBuilder_.build();
        }
        result.readPaired_ = readPaired_;
        result.readMapped_ = readMapped_;
        result.mateUnmapped_ = mateUnmapped_;
        result.readOnReverseStrand_ = readOnReverseStrand_;
        result.mateOnReverseStrand_ = mateOnReverseStrand_;
        result.softClipped_ = softClipped_;
        result.discordantInsertSize_ = discordantInsertSize_;
        result.uniqueness_ = uniqueness_;
        result.correct_ = correct_;
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          secondaryScore_ = java.util.Collections.unmodifiableList(secondaryScore_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.secondaryScore_ = secondaryScore_;
        result.fragmentScore_ = fragmentScore_;
        result.mateMappedToDisjointSubgraph_ = mateMappedToDisjointSubgraph_;
        result.fragmentLengthDistribution_ = fragmentLengthDistribution_;
        result.timeUsed_ = timeUsed_;
        if (toCorrectBuilder_ == null) {
          result.toCorrect_ = toCorrect_;
        } else {
          result.toCorrect_ = toCorrectBuilder_.build();
        }
        result.correctlyMapped_ = correctlyMapped_;
        if (annotationBuilder_ == null) {
          result.annotation_ = annotation_;
        } else {
          result.annotation_ = annotationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Alignment) {
          return mergeFrom((vg.Vg.Alignment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Alignment other) {
        if (other == vg.Vg.Alignment.getDefaultInstance()) return this;
        if (!other.getSequence().isEmpty()) {
          sequence_ = other.sequence_;
          onChanged();
        }
        if (other.hasPath()) {
          mergePath(other.getPath());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getQuality() != com.google.protobuf.ByteString.EMPTY) {
          setQuality(other.getQuality());
        }
        if (other.getMappingQuality() != 0) {
          setMappingQuality(other.getMappingQuality());
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        if (other.getQueryPosition() != 0) {
          setQueryPosition(other.getQueryPosition());
        }
        if (!other.getSampleName().isEmpty()) {
          sampleName_ = other.sampleName_;
          onChanged();
        }
        if (!other.getReadGroup().isEmpty()) {
          readGroup_ = other.readGroup_;
          onChanged();
        }
        if (other.hasFragmentPrev()) {
          mergeFragmentPrev(other.getFragmentPrev());
        }
        if (other.hasFragmentNext()) {
          mergeFragmentNext(other.getFragmentNext());
        }
        if (other.getIsSecondary() != false) {
          setIsSecondary(other.getIsSecondary());
        }
        if (other.getIdentity() != 0D) {
          setIdentity(other.getIdentity());
        }
        if (fragmentBuilder_ == null) {
          if (!other.fragment_.isEmpty()) {
            if (fragment_.isEmpty()) {
              fragment_ = other.fragment_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureFragmentIsMutable();
              fragment_.addAll(other.fragment_);
            }
            onChanged();
          }
        } else {
          if (!other.fragment_.isEmpty()) {
            if (fragmentBuilder_.isEmpty()) {
              fragmentBuilder_.dispose();
              fragmentBuilder_ = null;
              fragment_ = other.fragment_;
              bitField0_ = (bitField0_ & ~0x00002000);
              fragmentBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFragmentFieldBuilder() : null;
            } else {
              fragmentBuilder_.addAllMessages(other.fragment_);
            }
          }
        }
        if (locusBuilder_ == null) {
          if (!other.locus_.isEmpty()) {
            if (locus_.isEmpty()) {
              locus_ = other.locus_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureLocusIsMutable();
              locus_.addAll(other.locus_);
            }
            onChanged();
          }
        } else {
          if (!other.locus_.isEmpty()) {
            if (locusBuilder_.isEmpty()) {
              locusBuilder_.dispose();
              locusBuilder_ = null;
              locus_ = other.locus_;
              bitField0_ = (bitField0_ & ~0x00004000);
              locusBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLocusFieldBuilder() : null;
            } else {
              locusBuilder_.addAllMessages(other.locus_);
            }
          }
        }
        if (refposBuilder_ == null) {
          if (!other.refpos_.isEmpty()) {
            if (refpos_.isEmpty()) {
              refpos_ = other.refpos_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureRefposIsMutable();
              refpos_.addAll(other.refpos_);
            }
            onChanged();
          }
        } else {
          if (!other.refpos_.isEmpty()) {
            if (refposBuilder_.isEmpty()) {
              refposBuilder_.dispose();
              refposBuilder_ = null;
              refpos_ = other.refpos_;
              bitField0_ = (bitField0_ & ~0x00008000);
              refposBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRefposFieldBuilder() : null;
            } else {
              refposBuilder_.addAllMessages(other.refpos_);
            }
          }
        }
        if (other.getReadPaired() != false) {
          setReadPaired(other.getReadPaired());
        }
        if (other.getReadMapped() != false) {
          setReadMapped(other.getReadMapped());
        }
        if (other.getMateUnmapped() != false) {
          setMateUnmapped(other.getMateUnmapped());
        }
        if (other.getReadOnReverseStrand() != false) {
          setReadOnReverseStrand(other.getReadOnReverseStrand());
        }
        if (other.getMateOnReverseStrand() != false) {
          setMateOnReverseStrand(other.getMateOnReverseStrand());
        }
        if (other.getSoftClipped() != false) {
          setSoftClipped(other.getSoftClipped());
        }
        if (other.getDiscordantInsertSize() != false) {
          setDiscordantInsertSize(other.getDiscordantInsertSize());
        }
        if (other.getUniqueness() != 0D) {
          setUniqueness(other.getUniqueness());
        }
        if (other.getCorrect() != 0D) {
          setCorrect(other.getCorrect());
        }
        if (!other.secondaryScore_.isEmpty()) {
          if (secondaryScore_.isEmpty()) {
            secondaryScore_ = other.secondaryScore_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensureSecondaryScoreIsMutable();
            secondaryScore_.addAll(other.secondaryScore_);
          }
          onChanged();
        }
        if (other.getFragmentScore() != 0D) {
          setFragmentScore(other.getFragmentScore());
        }
        if (other.getMateMappedToDisjointSubgraph() != false) {
          setMateMappedToDisjointSubgraph(other.getMateMappedToDisjointSubgraph());
        }
        if (!other.getFragmentLengthDistribution().isEmpty()) {
          fragmentLengthDistribution_ = other.fragmentLengthDistribution_;
          onChanged();
        }
        if (other.getTimeUsed() != 0D) {
          setTimeUsed(other.getTimeUsed());
        }
        if (other.hasToCorrect()) {
          mergeToCorrect(other.getToCorrect());
        }
        if (other.getCorrectlyMapped() != false) {
          setCorrectlyMapped(other.getCorrectlyMapped());
        }
        if (other.hasAnnotation()) {
          mergeAnnotation(other.getAnnotation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Alignment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Alignment) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private java.lang.Object sequence_ = "";
      /**
       * <pre>
       * The sequence that has been aligned.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public java.lang.String getSequence() {
        java.lang.Object ref = sequence_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sequence_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The sequence that has been aligned.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSequenceBytes() {
        java.lang.Object ref = sequence_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequence_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The sequence that has been aligned.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public Builder setSequence(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sequence that has been aligned.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = getDefaultInstance().getSequence();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sequence that has been aligned.
       * </pre>
       *
       * <code>string sequence = 1;</code>
       */
      public Builder setSequenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sequence_ = value;
        onChanged();
        return this;
      }

      private vg.Vg.Path path_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> pathBuilder_;
      /**
       * <pre>
       * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
       * </pre>
       *
       * <code>.vg.Path path = 2;</code>
       */
      public boolean hasPath() {
        return pathBuilder_ != null || path_ != null;
      }
      /**
       * <pre>
       * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
       * </pre>
       *
       * <code>.vg.Path path = 2;</code>
       */
      public vg.Vg.Path getPath() {
        if (pathBuilder_ == null) {
          return path_ == null ? vg.Vg.Path.getDefaultInstance() : path_;
        } else {
          return pathBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
       * </pre>
       *
       * <code>.vg.Path path = 2;</code>
       */
      public Builder setPath(vg.Vg.Path value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          path_ = value;
          onChanged();
        } else {
          pathBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
       * </pre>
       *
       * <code>.vg.Path path = 2;</code>
       */
      public Builder setPath(
          vg.Vg.Path.Builder builderForValue) {
        if (pathBuilder_ == null) {
          path_ = builderForValue.build();
          onChanged();
        } else {
          pathBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
       * </pre>
       *
       * <code>.vg.Path path = 2;</code>
       */
      public Builder mergePath(vg.Vg.Path value) {
        if (pathBuilder_ == null) {
          if (path_ != null) {
            path_ =
              vg.Vg.Path.newBuilder(path_).mergeFrom(value).buildPartial();
          } else {
            path_ = value;
          }
          onChanged();
        } else {
          pathBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
       * </pre>
       *
       * <code>.vg.Path path = 2;</code>
       */
      public Builder clearPath() {
        if (pathBuilder_ == null) {
          path_ = null;
          onChanged();
        } else {
          path_ = null;
          pathBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
       * </pre>
       *
       * <code>.vg.Path path = 2;</code>
       */
      public vg.Vg.Path.Builder getPathBuilder() {
        
        onChanged();
        return getPathFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
       * </pre>
       *
       * <code>.vg.Path path = 2;</code>
       */
      public vg.Vg.PathOrBuilder getPathOrBuilder() {
        if (pathBuilder_ != null) {
          return pathBuilder_.getMessageOrBuilder();
        } else {
          return path_ == null ?
              vg.Vg.Path.getDefaultInstance() : path_;
        }
      }
      /**
       * <pre>
       * The Path that the sequence follows in the graph it has been aligned to, containing the `Edit`s that modify the graph to produce the sequence.
       * </pre>
       *
       * <code>.vg.Path path = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> 
          getPathFieldBuilder() {
        if (pathBuilder_ == null) {
          pathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder>(
                  getPath(),
                  getParentForChildren(),
                  isClean());
          path_ = null;
        }
        return pathBuilder_;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the sequence that has been aligned. Similar to read name in BAM.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the sequence that has been aligned. Similar to read name in BAM.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the sequence that has been aligned. Similar to read name in BAM.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the sequence that has been aligned. Similar to read name in BAM.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the sequence that has been aligned. Similar to read name in BAM.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString quality_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The quality scores for the sequence, as values on a 0-255 scale.
       * </pre>
       *
       * <code>bytes quality = 4;</code>
       */
      public com.google.protobuf.ByteString getQuality() {
        return quality_;
      }
      /**
       * <pre>
       * The quality scores for the sequence, as values on a 0-255 scale.
       * </pre>
       *
       * <code>bytes quality = 4;</code>
       */
      public Builder setQuality(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quality scores for the sequence, as values on a 0-255 scale.
       * </pre>
       *
       * <code>bytes quality = 4;</code>
       */
      public Builder clearQuality() {
        
        quality_ = getDefaultInstance().getQuality();
        onChanged();
        return this;
      }

      private int mappingQuality_ ;
      /**
       * <pre>
       * The mapping quality score for the alignment, in Phreds.
       * </pre>
       *
       * <code>int32 mapping_quality = 5;</code>
       */
      public int getMappingQuality() {
        return mappingQuality_;
      }
      /**
       * <pre>
       * The mapping quality score for the alignment, in Phreds.
       * </pre>
       *
       * <code>int32 mapping_quality = 5;</code>
       */
      public Builder setMappingQuality(int value) {
        
        mappingQuality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The mapping quality score for the alignment, in Phreds.
       * </pre>
       *
       * <code>int32 mapping_quality = 5;</code>
       */
      public Builder clearMappingQuality() {
        
        mappingQuality_ = 0;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <pre>
       * The score for the alignment, in points.
       * </pre>
       *
       * <code>int32 score = 6;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <pre>
       * The score for the alignment, in points.
       * </pre>
       *
       * <code>int32 score = 6;</code>
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The score for the alignment, in points.
       * </pre>
       *
       * <code>int32 score = 6;</code>
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }

      private int queryPosition_ ;
      /**
       * <pre>
       * The offset in the query at which this Alignment occurs.
       * </pre>
       *
       * <code>int32 query_position = 7;</code>
       */
      public int getQueryPosition() {
        return queryPosition_;
      }
      /**
       * <pre>
       * The offset in the query at which this Alignment occurs.
       * </pre>
       *
       * <code>int32 query_position = 7;</code>
       */
      public Builder setQueryPosition(int value) {
        
        queryPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The offset in the query at which this Alignment occurs.
       * </pre>
       *
       * <code>int32 query_position = 7;</code>
       */
      public Builder clearQueryPosition() {
        
        queryPosition_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object sampleName_ = "";
      /**
       * <pre>
       * The name of the sample that produced the aligned read.
       * </pre>
       *
       * <code>string sample_name = 9;</code>
       */
      public java.lang.String getSampleName() {
        java.lang.Object ref = sampleName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sampleName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the sample that produced the aligned read.
       * </pre>
       *
       * <code>string sample_name = 9;</code>
       */
      public com.google.protobuf.ByteString
          getSampleNameBytes() {
        java.lang.Object ref = sampleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sampleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the sample that produced the aligned read.
       * </pre>
       *
       * <code>string sample_name = 9;</code>
       */
      public Builder setSampleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sampleName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the sample that produced the aligned read.
       * </pre>
       *
       * <code>string sample_name = 9;</code>
       */
      public Builder clearSampleName() {
        
        sampleName_ = getDefaultInstance().getSampleName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the sample that produced the aligned read.
       * </pre>
       *
       * <code>string sample_name = 9;</code>
       */
      public Builder setSampleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sampleName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object readGroup_ = "";
      /**
       * <pre>
       * The name of the read group to which the aligned read belongs.
       * </pre>
       *
       * <code>string read_group = 10;</code>
       */
      public java.lang.String getReadGroup() {
        java.lang.Object ref = readGroup_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          readGroup_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the read group to which the aligned read belongs.
       * </pre>
       *
       * <code>string read_group = 10;</code>
       */
      public com.google.protobuf.ByteString
          getReadGroupBytes() {
        java.lang.Object ref = readGroup_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          readGroup_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the read group to which the aligned read belongs.
       * </pre>
       *
       * <code>string read_group = 10;</code>
       */
      public Builder setReadGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        readGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the read group to which the aligned read belongs.
       * </pre>
       *
       * <code>string read_group = 10;</code>
       */
      public Builder clearReadGroup() {
        
        readGroup_ = getDefaultInstance().getReadGroup();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the read group to which the aligned read belongs.
       * </pre>
       *
       * <code>string read_group = 10;</code>
       */
      public Builder setReadGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        readGroup_ = value;
        onChanged();
        return this;
      }

      private vg.Vg.Alignment fragmentPrev_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Alignment, vg.Vg.Alignment.Builder, vg.Vg.AlignmentOrBuilder> fragmentPrevBuilder_;
      /**
       * <pre>
       * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
       * </pre>
       *
       * <code>.vg.Alignment fragment_prev = 11;</code>
       */
      public boolean hasFragmentPrev() {
        return fragmentPrevBuilder_ != null || fragmentPrev_ != null;
      }
      /**
       * <pre>
       * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
       * </pre>
       *
       * <code>.vg.Alignment fragment_prev = 11;</code>
       */
      public vg.Vg.Alignment getFragmentPrev() {
        if (fragmentPrevBuilder_ == null) {
          return fragmentPrev_ == null ? vg.Vg.Alignment.getDefaultInstance() : fragmentPrev_;
        } else {
          return fragmentPrevBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
       * </pre>
       *
       * <code>.vg.Alignment fragment_prev = 11;</code>
       */
      public Builder setFragmentPrev(vg.Vg.Alignment value) {
        if (fragmentPrevBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fragmentPrev_ = value;
          onChanged();
        } else {
          fragmentPrevBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
       * </pre>
       *
       * <code>.vg.Alignment fragment_prev = 11;</code>
       */
      public Builder setFragmentPrev(
          vg.Vg.Alignment.Builder builderForValue) {
        if (fragmentPrevBuilder_ == null) {
          fragmentPrev_ = builderForValue.build();
          onChanged();
        } else {
          fragmentPrevBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
       * </pre>
       *
       * <code>.vg.Alignment fragment_prev = 11;</code>
       */
      public Builder mergeFragmentPrev(vg.Vg.Alignment value) {
        if (fragmentPrevBuilder_ == null) {
          if (fragmentPrev_ != null) {
            fragmentPrev_ =
              vg.Vg.Alignment.newBuilder(fragmentPrev_).mergeFrom(value).buildPartial();
          } else {
            fragmentPrev_ = value;
          }
          onChanged();
        } else {
          fragmentPrevBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
       * </pre>
       *
       * <code>.vg.Alignment fragment_prev = 11;</code>
       */
      public Builder clearFragmentPrev() {
        if (fragmentPrevBuilder_ == null) {
          fragmentPrev_ = null;
          onChanged();
        } else {
          fragmentPrev_ = null;
          fragmentPrevBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
       * </pre>
       *
       * <code>.vg.Alignment fragment_prev = 11;</code>
       */
      public vg.Vg.Alignment.Builder getFragmentPrevBuilder() {
        
        onChanged();
        return getFragmentPrevFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
       * </pre>
       *
       * <code>.vg.Alignment fragment_prev = 11;</code>
       */
      public vg.Vg.AlignmentOrBuilder getFragmentPrevOrBuilder() {
        if (fragmentPrevBuilder_ != null) {
          return fragmentPrevBuilder_.getMessageOrBuilder();
        } else {
          return fragmentPrev_ == null ?
              vg.Vg.Alignment.getDefaultInstance() : fragmentPrev_;
        }
      }
      /**
       * <pre>
       * The previous Alignment in the fragment. Contains just enough information to locate the full Alignment; e.g. contains an Alignment with only a name, or only a graph mapping position.
       * </pre>
       *
       * <code>.vg.Alignment fragment_prev = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Alignment, vg.Vg.Alignment.Builder, vg.Vg.AlignmentOrBuilder> 
          getFragmentPrevFieldBuilder() {
        if (fragmentPrevBuilder_ == null) {
          fragmentPrevBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Alignment, vg.Vg.Alignment.Builder, vg.Vg.AlignmentOrBuilder>(
                  getFragmentPrev(),
                  getParentForChildren(),
                  isClean());
          fragmentPrev_ = null;
        }
        return fragmentPrevBuilder_;
      }

      private vg.Vg.Alignment fragmentNext_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Alignment, vg.Vg.Alignment.Builder, vg.Vg.AlignmentOrBuilder> fragmentNextBuilder_;
      /**
       * <pre>
       * Similarly, the next Alignment in the fragment.
       * </pre>
       *
       * <code>.vg.Alignment fragment_next = 12;</code>
       */
      public boolean hasFragmentNext() {
        return fragmentNextBuilder_ != null || fragmentNext_ != null;
      }
      /**
       * <pre>
       * Similarly, the next Alignment in the fragment.
       * </pre>
       *
       * <code>.vg.Alignment fragment_next = 12;</code>
       */
      public vg.Vg.Alignment getFragmentNext() {
        if (fragmentNextBuilder_ == null) {
          return fragmentNext_ == null ? vg.Vg.Alignment.getDefaultInstance() : fragmentNext_;
        } else {
          return fragmentNextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Similarly, the next Alignment in the fragment.
       * </pre>
       *
       * <code>.vg.Alignment fragment_next = 12;</code>
       */
      public Builder setFragmentNext(vg.Vg.Alignment value) {
        if (fragmentNextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fragmentNext_ = value;
          onChanged();
        } else {
          fragmentNextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Similarly, the next Alignment in the fragment.
       * </pre>
       *
       * <code>.vg.Alignment fragment_next = 12;</code>
       */
      public Builder setFragmentNext(
          vg.Vg.Alignment.Builder builderForValue) {
        if (fragmentNextBuilder_ == null) {
          fragmentNext_ = builderForValue.build();
          onChanged();
        } else {
          fragmentNextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Similarly, the next Alignment in the fragment.
       * </pre>
       *
       * <code>.vg.Alignment fragment_next = 12;</code>
       */
      public Builder mergeFragmentNext(vg.Vg.Alignment value) {
        if (fragmentNextBuilder_ == null) {
          if (fragmentNext_ != null) {
            fragmentNext_ =
              vg.Vg.Alignment.newBuilder(fragmentNext_).mergeFrom(value).buildPartial();
          } else {
            fragmentNext_ = value;
          }
          onChanged();
        } else {
          fragmentNextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Similarly, the next Alignment in the fragment.
       * </pre>
       *
       * <code>.vg.Alignment fragment_next = 12;</code>
       */
      public Builder clearFragmentNext() {
        if (fragmentNextBuilder_ == null) {
          fragmentNext_ = null;
          onChanged();
        } else {
          fragmentNext_ = null;
          fragmentNextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Similarly, the next Alignment in the fragment.
       * </pre>
       *
       * <code>.vg.Alignment fragment_next = 12;</code>
       */
      public vg.Vg.Alignment.Builder getFragmentNextBuilder() {
        
        onChanged();
        return getFragmentNextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Similarly, the next Alignment in the fragment.
       * </pre>
       *
       * <code>.vg.Alignment fragment_next = 12;</code>
       */
      public vg.Vg.AlignmentOrBuilder getFragmentNextOrBuilder() {
        if (fragmentNextBuilder_ != null) {
          return fragmentNextBuilder_.getMessageOrBuilder();
        } else {
          return fragmentNext_ == null ?
              vg.Vg.Alignment.getDefaultInstance() : fragmentNext_;
        }
      }
      /**
       * <pre>
       * Similarly, the next Alignment in the fragment.
       * </pre>
       *
       * <code>.vg.Alignment fragment_next = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Alignment, vg.Vg.Alignment.Builder, vg.Vg.AlignmentOrBuilder> 
          getFragmentNextFieldBuilder() {
        if (fragmentNextBuilder_ == null) {
          fragmentNextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Alignment, vg.Vg.Alignment.Builder, vg.Vg.AlignmentOrBuilder>(
                  getFragmentNext(),
                  getParentForChildren(),
                  isClean());
          fragmentNext_ = null;
        }
        return fragmentNextBuilder_;
      }

      private boolean isSecondary_ ;
      /**
       * <pre>
       * Flag marking the Alignment as secondary. All but one maximal-scoring alignment of a given read in a GAM file must be secondary.
       * </pre>
       *
       * <code>bool is_secondary = 15;</code>
       */
      public boolean getIsSecondary() {
        return isSecondary_;
      }
      /**
       * <pre>
       * Flag marking the Alignment as secondary. All but one maximal-scoring alignment of a given read in a GAM file must be secondary.
       * </pre>
       *
       * <code>bool is_secondary = 15;</code>
       */
      public Builder setIsSecondary(boolean value) {
        
        isSecondary_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flag marking the Alignment as secondary. All but one maximal-scoring alignment of a given read in a GAM file must be secondary.
       * </pre>
       *
       * <code>bool is_secondary = 15;</code>
       */
      public Builder clearIsSecondary() {
        
        isSecondary_ = false;
        onChanged();
        return this;
      }

      private double identity_ ;
      /**
       * <pre>
       * Portion of aligned bases that are perfect matches, or 0 if no bases are aligned.
       * </pre>
       *
       * <code>double identity = 16;</code>
       */
      public double getIdentity() {
        return identity_;
      }
      /**
       * <pre>
       * Portion of aligned bases that are perfect matches, or 0 if no bases are aligned.
       * </pre>
       *
       * <code>double identity = 16;</code>
       */
      public Builder setIdentity(double value) {
        
        identity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Portion of aligned bases that are perfect matches, or 0 if no bases are aligned.
       * </pre>
       *
       * <code>double identity = 16;</code>
       */
      public Builder clearIdentity() {
        
        identity_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<vg.Vg.Path> fragment_ =
        java.util.Collections.emptyList();
      private void ensureFragmentIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          fragment_ = new java.util.ArrayList<vg.Vg.Path>(fragment_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> fragmentBuilder_;

      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public java.util.List<vg.Vg.Path> getFragmentList() {
        if (fragmentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fragment_);
        } else {
          return fragmentBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public int getFragmentCount() {
        if (fragmentBuilder_ == null) {
          return fragment_.size();
        } else {
          return fragmentBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public vg.Vg.Path getFragment(int index) {
        if (fragmentBuilder_ == null) {
          return fragment_.get(index);
        } else {
          return fragmentBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public Builder setFragment(
          int index, vg.Vg.Path value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFragmentIsMutable();
          fragment_.set(index, value);
          onChanged();
        } else {
          fragmentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public Builder setFragment(
          int index, vg.Vg.Path.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.set(index, builderForValue.build());
          onChanged();
        } else {
          fragmentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public Builder addFragment(vg.Vg.Path value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFragmentIsMutable();
          fragment_.add(value);
          onChanged();
        } else {
          fragmentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public Builder addFragment(
          int index, vg.Vg.Path value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFragmentIsMutable();
          fragment_.add(index, value);
          onChanged();
        } else {
          fragmentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public Builder addFragment(
          vg.Vg.Path.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.add(builderForValue.build());
          onChanged();
        } else {
          fragmentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public Builder addFragment(
          int index, vg.Vg.Path.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.add(index, builderForValue.build());
          onChanged();
        } else {
          fragmentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public Builder addAllFragment(
          java.lang.Iterable<? extends vg.Vg.Path> values) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fragment_);
          onChanged();
        } else {
          fragmentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public Builder clearFragment() {
        if (fragmentBuilder_ == null) {
          fragment_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          fragmentBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public Builder removeFragment(int index) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.remove(index);
          onChanged();
        } else {
          fragmentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public vg.Vg.Path.Builder getFragmentBuilder(
          int index) {
        return getFragmentFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public vg.Vg.PathOrBuilder getFragmentOrBuilder(
          int index) {
        if (fragmentBuilder_ == null) {
          return fragment_.get(index);  } else {
          return fragmentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public java.util.List<? extends vg.Vg.PathOrBuilder> 
           getFragmentOrBuilderList() {
        if (fragmentBuilder_ != null) {
          return fragmentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fragment_);
        }
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public vg.Vg.Path.Builder addFragmentBuilder() {
        return getFragmentFieldBuilder().addBuilder(
            vg.Vg.Path.getDefaultInstance());
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public vg.Vg.Path.Builder addFragmentBuilder(
          int index) {
        return getFragmentFieldBuilder().addBuilder(
            index, vg.Vg.Path.getDefaultInstance());
      }
      /**
       * <pre>
       * An estimate of the length of the fragment, if this Alignment is paired.
       * </pre>
       *
       * <code>repeated .vg.Path fragment = 17;</code>
       */
      public java.util.List<vg.Vg.Path.Builder> 
           getFragmentBuilderList() {
        return getFragmentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> 
          getFragmentFieldBuilder() {
        if (fragmentBuilder_ == null) {
          fragmentBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder>(
                  fragment_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          fragment_ = null;
        }
        return fragmentBuilder_;
      }

      private java.util.List<vg.Vg.Locus> locus_ =
        java.util.Collections.emptyList();
      private void ensureLocusIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          locus_ = new java.util.ArrayList<vg.Vg.Locus>(locus_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Locus, vg.Vg.Locus.Builder, vg.Vg.LocusOrBuilder> locusBuilder_;

      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public java.util.List<vg.Vg.Locus> getLocusList() {
        if (locusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(locus_);
        } else {
          return locusBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public int getLocusCount() {
        if (locusBuilder_ == null) {
          return locus_.size();
        } else {
          return locusBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public vg.Vg.Locus getLocus(int index) {
        if (locusBuilder_ == null) {
          return locus_.get(index);
        } else {
          return locusBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public Builder setLocus(
          int index, vg.Vg.Locus value) {
        if (locusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocusIsMutable();
          locus_.set(index, value);
          onChanged();
        } else {
          locusBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public Builder setLocus(
          int index, vg.Vg.Locus.Builder builderForValue) {
        if (locusBuilder_ == null) {
          ensureLocusIsMutable();
          locus_.set(index, builderForValue.build());
          onChanged();
        } else {
          locusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public Builder addLocus(vg.Vg.Locus value) {
        if (locusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocusIsMutable();
          locus_.add(value);
          onChanged();
        } else {
          locusBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public Builder addLocus(
          int index, vg.Vg.Locus value) {
        if (locusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocusIsMutable();
          locus_.add(index, value);
          onChanged();
        } else {
          locusBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public Builder addLocus(
          vg.Vg.Locus.Builder builderForValue) {
        if (locusBuilder_ == null) {
          ensureLocusIsMutable();
          locus_.add(builderForValue.build());
          onChanged();
        } else {
          locusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public Builder addLocus(
          int index, vg.Vg.Locus.Builder builderForValue) {
        if (locusBuilder_ == null) {
          ensureLocusIsMutable();
          locus_.add(index, builderForValue.build());
          onChanged();
        } else {
          locusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public Builder addAllLocus(
          java.lang.Iterable<? extends vg.Vg.Locus> values) {
        if (locusBuilder_ == null) {
          ensureLocusIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, locus_);
          onChanged();
        } else {
          locusBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public Builder clearLocus() {
        if (locusBuilder_ == null) {
          locus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          locusBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public Builder removeLocus(int index) {
        if (locusBuilder_ == null) {
          ensureLocusIsMutable();
          locus_.remove(index);
          onChanged();
        } else {
          locusBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public vg.Vg.Locus.Builder getLocusBuilder(
          int index) {
        return getLocusFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public vg.Vg.LocusOrBuilder getLocusOrBuilder(
          int index) {
        if (locusBuilder_ == null) {
          return locus_.get(index);  } else {
          return locusBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public java.util.List<? extends vg.Vg.LocusOrBuilder> 
           getLocusOrBuilderList() {
        if (locusBuilder_ != null) {
          return locusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(locus_);
        }
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public vg.Vg.Locus.Builder addLocusBuilder() {
        return getLocusFieldBuilder().addBuilder(
            vg.Vg.Locus.getDefaultInstance());
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public vg.Vg.Locus.Builder addLocusBuilder(
          int index) {
        return getLocusFieldBuilder().addBuilder(
            index, vg.Vg.Locus.getDefaultInstance());
      }
      /**
       * <pre>
       * The loci that this alignment supports. TODO: get rid of this, we have annotations in our data model again.
       * </pre>
       *
       * <code>repeated .vg.Locus locus = 18;</code>
       */
      public java.util.List<vg.Vg.Locus.Builder> 
           getLocusBuilderList() {
        return getLocusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Locus, vg.Vg.Locus.Builder, vg.Vg.LocusOrBuilder> 
          getLocusFieldBuilder() {
        if (locusBuilder_ == null) {
          locusBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Locus, vg.Vg.Locus.Builder, vg.Vg.LocusOrBuilder>(
                  locus_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          locus_ = null;
        }
        return locusBuilder_;
      }

      private java.util.List<vg.Vg.Position> refpos_ =
        java.util.Collections.emptyList();
      private void ensureRefposIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          refpos_ = new java.util.ArrayList<vg.Vg.Position>(refpos_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Position, vg.Vg.Position.Builder, vg.Vg.PositionOrBuilder> refposBuilder_;

      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public java.util.List<vg.Vg.Position> getRefposList() {
        if (refposBuilder_ == null) {
          return java.util.Collections.unmodifiableList(refpos_);
        } else {
          return refposBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public int getRefposCount() {
        if (refposBuilder_ == null) {
          return refpos_.size();
        } else {
          return refposBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public vg.Vg.Position getRefpos(int index) {
        if (refposBuilder_ == null) {
          return refpos_.get(index);
        } else {
          return refposBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public Builder setRefpos(
          int index, vg.Vg.Position value) {
        if (refposBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefposIsMutable();
          refpos_.set(index, value);
          onChanged();
        } else {
          refposBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public Builder setRefpos(
          int index, vg.Vg.Position.Builder builderForValue) {
        if (refposBuilder_ == null) {
          ensureRefposIsMutable();
          refpos_.set(index, builderForValue.build());
          onChanged();
        } else {
          refposBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public Builder addRefpos(vg.Vg.Position value) {
        if (refposBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefposIsMutable();
          refpos_.add(value);
          onChanged();
        } else {
          refposBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public Builder addRefpos(
          int index, vg.Vg.Position value) {
        if (refposBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefposIsMutable();
          refpos_.add(index, value);
          onChanged();
        } else {
          refposBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public Builder addRefpos(
          vg.Vg.Position.Builder builderForValue) {
        if (refposBuilder_ == null) {
          ensureRefposIsMutable();
          refpos_.add(builderForValue.build());
          onChanged();
        } else {
          refposBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public Builder addRefpos(
          int index, vg.Vg.Position.Builder builderForValue) {
        if (refposBuilder_ == null) {
          ensureRefposIsMutable();
          refpos_.add(index, builderForValue.build());
          onChanged();
        } else {
          refposBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public Builder addAllRefpos(
          java.lang.Iterable<? extends vg.Vg.Position> values) {
        if (refposBuilder_ == null) {
          ensureRefposIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, refpos_);
          onChanged();
        } else {
          refposBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public Builder clearRefpos() {
        if (refposBuilder_ == null) {
          refpos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          refposBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public Builder removeRefpos(int index) {
        if (refposBuilder_ == null) {
          ensureRefposIsMutable();
          refpos_.remove(index);
          onChanged();
        } else {
          refposBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public vg.Vg.Position.Builder getRefposBuilder(
          int index) {
        return getRefposFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public vg.Vg.PositionOrBuilder getRefposOrBuilder(
          int index) {
        if (refposBuilder_ == null) {
          return refpos_.get(index);  } else {
          return refposBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public java.util.List<? extends vg.Vg.PositionOrBuilder> 
           getRefposOrBuilderList() {
        if (refposBuilder_ != null) {
          return refposBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(refpos_);
        }
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public vg.Vg.Position.Builder addRefposBuilder() {
        return getRefposFieldBuilder().addBuilder(
            vg.Vg.Position.getDefaultInstance());
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public vg.Vg.Position.Builder addRefposBuilder(
          int index) {
        return getRefposFieldBuilder().addBuilder(
            index, vg.Vg.Position.getDefaultInstance());
      }
      /**
       * <pre>
       * Position of the alignment in reference paths embedded in graph
       * </pre>
       *
       * <code>repeated .vg.Position refpos = 19;</code>
       */
      public java.util.List<vg.Vg.Position.Builder> 
           getRefposBuilderList() {
        return getRefposFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Position, vg.Vg.Position.Builder, vg.Vg.PositionOrBuilder> 
          getRefposFieldBuilder() {
        if (refposBuilder_ == null) {
          refposBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Position, vg.Vg.Position.Builder, vg.Vg.PositionOrBuilder>(
                  refpos_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          refpos_ = null;
        }
        return refposBuilder_;
      }

      private boolean readPaired_ ;
      /**
       * <pre>
       * SAMTools-style flags
       * </pre>
       *
       * <code>bool read_paired = 20;</code>
       */
      public boolean getReadPaired() {
        return readPaired_;
      }
      /**
       * <pre>
       * SAMTools-style flags
       * </pre>
       *
       * <code>bool read_paired = 20;</code>
       */
      public Builder setReadPaired(boolean value) {
        
        readPaired_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SAMTools-style flags
       * </pre>
       *
       * <code>bool read_paired = 20;</code>
       */
      public Builder clearReadPaired() {
        
        readPaired_ = false;
        onChanged();
        return this;
      }

      private boolean readMapped_ ;
      /**
       * <code>bool read_mapped = 21;</code>
       */
      public boolean getReadMapped() {
        return readMapped_;
      }
      /**
       * <code>bool read_mapped = 21;</code>
       */
      public Builder setReadMapped(boolean value) {
        
        readMapped_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool read_mapped = 21;</code>
       */
      public Builder clearReadMapped() {
        
        readMapped_ = false;
        onChanged();
        return this;
      }

      private boolean mateUnmapped_ ;
      /**
       * <code>bool mate_unmapped = 22;</code>
       */
      public boolean getMateUnmapped() {
        return mateUnmapped_;
      }
      /**
       * <code>bool mate_unmapped = 22;</code>
       */
      public Builder setMateUnmapped(boolean value) {
        
        mateUnmapped_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool mate_unmapped = 22;</code>
       */
      public Builder clearMateUnmapped() {
        
        mateUnmapped_ = false;
        onChanged();
        return this;
      }

      private boolean readOnReverseStrand_ ;
      /**
       * <code>bool read_on_reverse_strand = 23;</code>
       */
      public boolean getReadOnReverseStrand() {
        return readOnReverseStrand_;
      }
      /**
       * <code>bool read_on_reverse_strand = 23;</code>
       */
      public Builder setReadOnReverseStrand(boolean value) {
        
        readOnReverseStrand_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool read_on_reverse_strand = 23;</code>
       */
      public Builder clearReadOnReverseStrand() {
        
        readOnReverseStrand_ = false;
        onChanged();
        return this;
      }

      private boolean mateOnReverseStrand_ ;
      /**
       * <code>bool mate_on_reverse_strand = 24;</code>
       */
      public boolean getMateOnReverseStrand() {
        return mateOnReverseStrand_;
      }
      /**
       * <code>bool mate_on_reverse_strand = 24;</code>
       */
      public Builder setMateOnReverseStrand(boolean value) {
        
        mateOnReverseStrand_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool mate_on_reverse_strand = 24;</code>
       */
      public Builder clearMateOnReverseStrand() {
        
        mateOnReverseStrand_ = false;
        onChanged();
        return this;
      }

      private boolean softClipped_ ;
      /**
       * <code>bool soft_clipped = 25;</code>
       */
      public boolean getSoftClipped() {
        return softClipped_;
      }
      /**
       * <code>bool soft_clipped = 25;</code>
       */
      public Builder setSoftClipped(boolean value) {
        
        softClipped_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool soft_clipped = 25;</code>
       */
      public Builder clearSoftClipped() {
        
        softClipped_ = false;
        onChanged();
        return this;
      }

      private boolean discordantInsertSize_ ;
      /**
       * <code>bool discordant_insert_size = 26;</code>
       */
      public boolean getDiscordantInsertSize() {
        return discordantInsertSize_;
      }
      /**
       * <code>bool discordant_insert_size = 26;</code>
       */
      public Builder setDiscordantInsertSize(boolean value) {
        
        discordantInsertSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool discordant_insert_size = 26;</code>
       */
      public Builder clearDiscordantInsertSize() {
        
        discordantInsertSize_ = false;
        onChanged();
        return this;
      }

      private double uniqueness_ ;
      /**
       * <pre>
       * The fraction of bases in the alignment that are covered by MEMs with &lt;=1 total hits in the graph
       * </pre>
       *
       * <code>double uniqueness = 27;</code>
       */
      public double getUniqueness() {
        return uniqueness_;
      }
      /**
       * <pre>
       * The fraction of bases in the alignment that are covered by MEMs with &lt;=1 total hits in the graph
       * </pre>
       *
       * <code>double uniqueness = 27;</code>
       */
      public Builder setUniqueness(double value) {
        
        uniqueness_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The fraction of bases in the alignment that are covered by MEMs with &lt;=1 total hits in the graph
       * </pre>
       *
       * <code>double uniqueness = 27;</code>
       */
      public Builder clearUniqueness() {
        
        uniqueness_ = 0D;
        onChanged();
        return this;
      }

      private double correct_ ;
      /**
       * <pre>
       * Correctness metric 1 = perfectly aligned to truth, 0 = not overlapping true alignment
       * </pre>
       *
       * <code>double correct = 28;</code>
       */
      public double getCorrect() {
        return correct_;
      }
      /**
       * <pre>
       * Correctness metric 1 = perfectly aligned to truth, 0 = not overlapping true alignment
       * </pre>
       *
       * <code>double correct = 28;</code>
       */
      public Builder setCorrect(double value) {
        
        correct_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Correctness metric 1 = perfectly aligned to truth, 0 = not overlapping true alignment
       * </pre>
       *
       * <code>double correct = 28;</code>
       */
      public Builder clearCorrect() {
        
        correct_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> secondaryScore_ = java.util.Collections.emptyList();
      private void ensureSecondaryScoreIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          secondaryScore_ = new java.util.ArrayList<java.lang.Integer>(secondaryScore_);
          bitField0_ |= 0x02000000;
         }
      }
      /**
       * <pre>
       * The ordered list of scores of secondary mappings
       * </pre>
       *
       * <code>repeated int32 secondary_score = 29;</code>
       */
      public java.util.List<java.lang.Integer>
          getSecondaryScoreList() {
        return java.util.Collections.unmodifiableList(secondaryScore_);
      }
      /**
       * <pre>
       * The ordered list of scores of secondary mappings
       * </pre>
       *
       * <code>repeated int32 secondary_score = 29;</code>
       */
      public int getSecondaryScoreCount() {
        return secondaryScore_.size();
      }
      /**
       * <pre>
       * The ordered list of scores of secondary mappings
       * </pre>
       *
       * <code>repeated int32 secondary_score = 29;</code>
       */
      public int getSecondaryScore(int index) {
        return secondaryScore_.get(index);
      }
      /**
       * <pre>
       * The ordered list of scores of secondary mappings
       * </pre>
       *
       * <code>repeated int32 secondary_score = 29;</code>
       */
      public Builder setSecondaryScore(
          int index, int value) {
        ensureSecondaryScoreIsMutable();
        secondaryScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ordered list of scores of secondary mappings
       * </pre>
       *
       * <code>repeated int32 secondary_score = 29;</code>
       */
      public Builder addSecondaryScore(int value) {
        ensureSecondaryScoreIsMutable();
        secondaryScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ordered list of scores of secondary mappings
       * </pre>
       *
       * <code>repeated int32 secondary_score = 29;</code>
       */
      public Builder addAllSecondaryScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSecondaryScoreIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, secondaryScore_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ordered list of scores of secondary mappings
       * </pre>
       *
       * <code>repeated int32 secondary_score = 29;</code>
       */
      public Builder clearSecondaryScore() {
        secondaryScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }

      private double fragmentScore_ ;
      /**
       * <pre>
       * Score under the given fragment model, assume higher is better
       * </pre>
       *
       * <code>double fragment_score = 30;</code>
       */
      public double getFragmentScore() {
        return fragmentScore_;
      }
      /**
       * <pre>
       * Score under the given fragment model, assume higher is better
       * </pre>
       *
       * <code>double fragment_score = 30;</code>
       */
      public Builder setFragmentScore(double value) {
        
        fragmentScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Score under the given fragment model, assume higher is better
       * </pre>
       *
       * <code>double fragment_score = 30;</code>
       */
      public Builder clearFragmentScore() {
        
        fragmentScore_ = 0D;
        onChanged();
        return this;
      }

      private boolean mateMappedToDisjointSubgraph_ ;
      /**
       * <code>bool mate_mapped_to_disjoint_subgraph = 31;</code>
       */
      public boolean getMateMappedToDisjointSubgraph() {
        return mateMappedToDisjointSubgraph_;
      }
      /**
       * <code>bool mate_mapped_to_disjoint_subgraph = 31;</code>
       */
      public Builder setMateMappedToDisjointSubgraph(boolean value) {
        
        mateMappedToDisjointSubgraph_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool mate_mapped_to_disjoint_subgraph = 31;</code>
       */
      public Builder clearMateMappedToDisjointSubgraph() {
        
        mateMappedToDisjointSubgraph_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object fragmentLengthDistribution_ = "";
      /**
       * <pre>
       * The fragment length distribution under which a paired-end alignment was aligned.
       * </pre>
       *
       * <code>string fragment_length_distribution = 32;</code>
       */
      public java.lang.String getFragmentLengthDistribution() {
        java.lang.Object ref = fragmentLengthDistribution_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fragmentLengthDistribution_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The fragment length distribution under which a paired-end alignment was aligned.
       * </pre>
       *
       * <code>string fragment_length_distribution = 32;</code>
       */
      public com.google.protobuf.ByteString
          getFragmentLengthDistributionBytes() {
        java.lang.Object ref = fragmentLengthDistribution_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fragmentLengthDistribution_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The fragment length distribution under which a paired-end alignment was aligned.
       * </pre>
       *
       * <code>string fragment_length_distribution = 32;</code>
       */
      public Builder setFragmentLengthDistribution(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fragmentLengthDistribution_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The fragment length distribution under which a paired-end alignment was aligned.
       * </pre>
       *
       * <code>string fragment_length_distribution = 32;</code>
       */
      public Builder clearFragmentLengthDistribution() {
        
        fragmentLengthDistribution_ = getDefaultInstance().getFragmentLengthDistribution();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The fragment length distribution under which a paired-end alignment was aligned.
       * </pre>
       *
       * <code>string fragment_length_distribution = 32;</code>
       */
      public Builder setFragmentLengthDistributionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fragmentLengthDistribution_ = value;
        onChanged();
        return this;
      }

      private double timeUsed_ ;
      /**
       * <pre>
       * The time this alignment took
       * </pre>
       *
       * <code>double time_used = 35;</code>
       */
      public double getTimeUsed() {
        return timeUsed_;
      }
      /**
       * <pre>
       * The time this alignment took
       * </pre>
       *
       * <code>double time_used = 35;</code>
       */
      public Builder setTimeUsed(double value) {
        
        timeUsed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time this alignment took
       * </pre>
       *
       * <code>double time_used = 35;</code>
       */
      public Builder clearTimeUsed() {
        
        timeUsed_ = 0D;
        onChanged();
        return this;
      }

      private vg.Vg.Position toCorrect_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Position, vg.Vg.Position.Builder, vg.Vg.PositionOrBuilder> toCorrectBuilder_;
      /**
       * <pre>
       * A path/offset/orientation pair specifying the distance to the correct alignment
       * </pre>
       *
       * <code>.vg.Position to_correct = 36;</code>
       */
      public boolean hasToCorrect() {
        return toCorrectBuilder_ != null || toCorrect_ != null;
      }
      /**
       * <pre>
       * A path/offset/orientation pair specifying the distance to the correct alignment
       * </pre>
       *
       * <code>.vg.Position to_correct = 36;</code>
       */
      public vg.Vg.Position getToCorrect() {
        if (toCorrectBuilder_ == null) {
          return toCorrect_ == null ? vg.Vg.Position.getDefaultInstance() : toCorrect_;
        } else {
          return toCorrectBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A path/offset/orientation pair specifying the distance to the correct alignment
       * </pre>
       *
       * <code>.vg.Position to_correct = 36;</code>
       */
      public Builder setToCorrect(vg.Vg.Position value) {
        if (toCorrectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toCorrect_ = value;
          onChanged();
        } else {
          toCorrectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * A path/offset/orientation pair specifying the distance to the correct alignment
       * </pre>
       *
       * <code>.vg.Position to_correct = 36;</code>
       */
      public Builder setToCorrect(
          vg.Vg.Position.Builder builderForValue) {
        if (toCorrectBuilder_ == null) {
          toCorrect_ = builderForValue.build();
          onChanged();
        } else {
          toCorrectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * A path/offset/orientation pair specifying the distance to the correct alignment
       * </pre>
       *
       * <code>.vg.Position to_correct = 36;</code>
       */
      public Builder mergeToCorrect(vg.Vg.Position value) {
        if (toCorrectBuilder_ == null) {
          if (toCorrect_ != null) {
            toCorrect_ =
              vg.Vg.Position.newBuilder(toCorrect_).mergeFrom(value).buildPartial();
          } else {
            toCorrect_ = value;
          }
          onChanged();
        } else {
          toCorrectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * A path/offset/orientation pair specifying the distance to the correct alignment
       * </pre>
       *
       * <code>.vg.Position to_correct = 36;</code>
       */
      public Builder clearToCorrect() {
        if (toCorrectBuilder_ == null) {
          toCorrect_ = null;
          onChanged();
        } else {
          toCorrect_ = null;
          toCorrectBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * A path/offset/orientation pair specifying the distance to the correct alignment
       * </pre>
       *
       * <code>.vg.Position to_correct = 36;</code>
       */
      public vg.Vg.Position.Builder getToCorrectBuilder() {
        
        onChanged();
        return getToCorrectFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A path/offset/orientation pair specifying the distance to the correct alignment
       * </pre>
       *
       * <code>.vg.Position to_correct = 36;</code>
       */
      public vg.Vg.PositionOrBuilder getToCorrectOrBuilder() {
        if (toCorrectBuilder_ != null) {
          return toCorrectBuilder_.getMessageOrBuilder();
        } else {
          return toCorrect_ == null ?
              vg.Vg.Position.getDefaultInstance() : toCorrect_;
        }
      }
      /**
       * <pre>
       * A path/offset/orientation pair specifying the distance to the correct alignment
       * </pre>
       *
       * <code>.vg.Position to_correct = 36;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Position, vg.Vg.Position.Builder, vg.Vg.PositionOrBuilder> 
          getToCorrectFieldBuilder() {
        if (toCorrectBuilder_ == null) {
          toCorrectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Position, vg.Vg.Position.Builder, vg.Vg.PositionOrBuilder>(
                  getToCorrect(),
                  getParentForChildren(),
                  isClean());
          toCorrect_ = null;
        }
        return toCorrectBuilder_;
      }

      private boolean correctlyMapped_ ;
      /**
       * <pre>
       * This can be set to true to annotate the Alignment as having been mapped correctly.
       * </pre>
       *
       * <code>bool correctly_mapped = 37;</code>
       */
      public boolean getCorrectlyMapped() {
        return correctlyMapped_;
      }
      /**
       * <pre>
       * This can be set to true to annotate the Alignment as having been mapped correctly.
       * </pre>
       *
       * <code>bool correctly_mapped = 37;</code>
       */
      public Builder setCorrectlyMapped(boolean value) {
        
        correctlyMapped_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This can be set to true to annotate the Alignment as having been mapped correctly.
       * </pre>
       *
       * <code>bool correctly_mapped = 37;</code>
       */
      public Builder clearCorrectlyMapped() {
        
        correctlyMapped_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Struct annotation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> annotationBuilder_;
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public boolean hasAnnotation() {
        return annotationBuilder_ != null || annotation_ != null;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public com.google.protobuf.Struct getAnnotation() {
        if (annotationBuilder_ == null) {
          return annotation_ == null ? com.google.protobuf.Struct.getDefaultInstance() : annotation_;
        } else {
          return annotationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public Builder setAnnotation(com.google.protobuf.Struct value) {
        if (annotationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          annotation_ = value;
          onChanged();
        } else {
          annotationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public Builder setAnnotation(
          com.google.protobuf.Struct.Builder builderForValue) {
        if (annotationBuilder_ == null) {
          annotation_ = builderForValue.build();
          onChanged();
        } else {
          annotationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public Builder mergeAnnotation(com.google.protobuf.Struct value) {
        if (annotationBuilder_ == null) {
          if (annotation_ != null) {
            annotation_ =
              com.google.protobuf.Struct.newBuilder(annotation_).mergeFrom(value).buildPartial();
          } else {
            annotation_ = value;
          }
          onChanged();
        } else {
          annotationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public Builder clearAnnotation() {
        if (annotationBuilder_ == null) {
          annotation_ = null;
          onChanged();
        } else {
          annotation_ = null;
          annotationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public com.google.protobuf.Struct.Builder getAnnotationBuilder() {
        
        onChanged();
        return getAnnotationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public com.google.protobuf.StructOrBuilder getAnnotationOrBuilder() {
        if (annotationBuilder_ != null) {
          return annotationBuilder_.getMessageOrBuilder();
        } else {
          return annotation_ == null ?
              com.google.protobuf.Struct.getDefaultInstance() : annotation_;
        }
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
          getAnnotationFieldBuilder() {
        if (annotationBuilder_ == null) {
          annotationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                  getAnnotation(),
                  getParentForChildren(),
                  isClean());
          annotation_ = null;
        }
        return annotationBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Alignment)
    }

    // @@protoc_insertion_point(class_scope:vg.Alignment)
    private static final vg.Vg.Alignment DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Alignment();
    }

    public static vg.Vg.Alignment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Alignment>
        PARSER = new com.google.protobuf.AbstractParser<Alignment>() {
      public Alignment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Alignment(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Alignment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Alignment> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Alignment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultipathAlignmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.MultipathAlignment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string sequence = 1;</code>
     */
    java.lang.String getSequence();
    /**
     * <code>string sequence = 1;</code>
     */
    com.google.protobuf.ByteString
        getSequenceBytes();

    /**
     * <code>bytes quality = 2;</code>
     */
    com.google.protobuf.ByteString getQuality();

    /**
     * <code>string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string sample_name = 4;</code>
     */
    java.lang.String getSampleName();
    /**
     * <code>string sample_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getSampleNameBytes();

    /**
     * <code>string read_group = 5;</code>
     */
    java.lang.String getReadGroup();
    /**
     * <code>string read_group = 5;</code>
     */
    com.google.protobuf.ByteString
        getReadGroupBytes();

    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    java.util.List<vg.Vg.Subpath> 
        getSubpathList();
    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    vg.Vg.Subpath getSubpath(int index);
    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    int getSubpathCount();
    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    java.util.List<? extends vg.Vg.SubpathOrBuilder> 
        getSubpathOrBuilderList();
    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    vg.Vg.SubpathOrBuilder getSubpathOrBuilder(
        int index);

    /**
     * <pre>
     * -10 * log_10(probability of mismapping)
     * </pre>
     *
     * <code>int32 mapping_quality = 7;</code>
     */
    int getMappingQuality();

    /**
     * <pre>
     * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
     * </pre>
     *
     * <code>repeated uint32 start = 8;</code>
     */
    java.util.List<java.lang.Integer> getStartList();
    /**
     * <pre>
     * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
     * </pre>
     *
     * <code>repeated uint32 start = 8;</code>
     */
    int getStartCount();
    /**
     * <pre>
     * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
     * </pre>
     *
     * <code>repeated uint32 start = 8;</code>
     */
    int getStart(int index);

    /**
     * <code>string paired_read_name = 9;</code>
     */
    java.lang.String getPairedReadName();
    /**
     * <code>string paired_read_name = 9;</code>
     */
    com.google.protobuf.ByteString
        getPairedReadNameBytes();

    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    boolean hasAnnotation();
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    com.google.protobuf.Struct getAnnotation();
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    com.google.protobuf.StructOrBuilder getAnnotationOrBuilder();
  }
  /**
   * <pre>
   * A subgraph of the unrolled Graph in which each non-branching path is associated with an alignment
   * of part of the read and part of the graph such that any path through the MultipathAlignment
   * indicates a valid alignment of a read to the graph
   * </pre>
   *
   * Protobuf type {@code vg.MultipathAlignment}
   */
  public  static final class MultipathAlignment extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.MultipathAlignment)
      MultipathAlignmentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultipathAlignment.newBuilder() to construct.
    private MultipathAlignment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultipathAlignment() {
      sequence_ = "";
      quality_ = com.google.protobuf.ByteString.EMPTY;
      name_ = "";
      sampleName_ = "";
      readGroup_ = "";
      subpath_ = java.util.Collections.emptyList();
      mappingQuality_ = 0;
      start_ = java.util.Collections.emptyList();
      pairedReadName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultipathAlignment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              sequence_ = s;
              break;
            }
            case 18: {

              quality_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              sampleName_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              readGroup_ = s;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                subpath_ = new java.util.ArrayList<vg.Vg.Subpath>();
                mutable_bitField0_ |= 0x00000020;
              }
              subpath_.add(
                  input.readMessage(vg.Vg.Subpath.parser(), extensionRegistry));
              break;
            }
            case 56: {

              mappingQuality_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                start_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              start_.add(input.readUInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                start_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                start_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              pairedReadName_ = s;
              break;
            }
            case 802: {
              com.google.protobuf.Struct.Builder subBuilder = null;
              if (annotation_ != null) {
                subBuilder = annotation_.toBuilder();
              }
              annotation_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(annotation_);
                annotation_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          subpath_ = java.util.Collections.unmodifiableList(subpath_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          start_ = java.util.Collections.unmodifiableList(start_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_MultipathAlignment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_MultipathAlignment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.MultipathAlignment.class, vg.Vg.MultipathAlignment.Builder.class);
    }

    private int bitField0_;
    public static final int SEQUENCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object sequence_;
    /**
     * <code>string sequence = 1;</code>
     */
    public java.lang.String getSequence() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sequence_ = s;
        return s;
      }
    }
    /**
     * <code>string sequence = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSequenceBytes() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequence_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUALITY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString quality_;
    /**
     * <code>bytes quality = 2;</code>
     */
    public com.google.protobuf.ByteString getQuality() {
      return quality_;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SAMPLE_NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object sampleName_;
    /**
     * <code>string sample_name = 4;</code>
     */
    public java.lang.String getSampleName() {
      java.lang.Object ref = sampleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sampleName_ = s;
        return s;
      }
    }
    /**
     * <code>string sample_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSampleNameBytes() {
      java.lang.Object ref = sampleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sampleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int READ_GROUP_FIELD_NUMBER = 5;
    private volatile java.lang.Object readGroup_;
    /**
     * <code>string read_group = 5;</code>
     */
    public java.lang.String getReadGroup() {
      java.lang.Object ref = readGroup_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        readGroup_ = s;
        return s;
      }
    }
    /**
     * <code>string read_group = 5;</code>
     */
    public com.google.protobuf.ByteString
        getReadGroupBytes() {
      java.lang.Object ref = readGroup_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        readGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBPATH_FIELD_NUMBER = 6;
    private java.util.List<vg.Vg.Subpath> subpath_;
    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    public java.util.List<vg.Vg.Subpath> getSubpathList() {
      return subpath_;
    }
    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    public java.util.List<? extends vg.Vg.SubpathOrBuilder> 
        getSubpathOrBuilderList() {
      return subpath_;
    }
    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    public int getSubpathCount() {
      return subpath_.size();
    }
    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    public vg.Vg.Subpath getSubpath(int index) {
      return subpath_.get(index);
    }
    /**
     * <pre>
     * non-branching paths of the multipath alignment, each containing an alignment of part of
     * the sequence to a Graph
     * IMPORTANT: downstream applications will assume these are stored in topological order
     * </pre>
     *
     * <code>repeated .vg.Subpath subpath = 6;</code>
     */
    public vg.Vg.SubpathOrBuilder getSubpathOrBuilder(
        int index) {
      return subpath_.get(index);
    }

    public static final int MAPPING_QUALITY_FIELD_NUMBER = 7;
    private int mappingQuality_;
    /**
     * <pre>
     * -10 * log_10(probability of mismapping)
     * </pre>
     *
     * <code>int32 mapping_quality = 7;</code>
     */
    public int getMappingQuality() {
      return mappingQuality_;
    }

    public static final int START_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> start_;
    /**
     * <pre>
     * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
     * </pre>
     *
     * <code>repeated uint32 start = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getStartList() {
      return start_;
    }
    /**
     * <pre>
     * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
     * </pre>
     *
     * <code>repeated uint32 start = 8;</code>
     */
    public int getStartCount() {
      return start_.size();
    }
    /**
     * <pre>
     * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
     * </pre>
     *
     * <code>repeated uint32 start = 8;</code>
     */
    public int getStart(int index) {
      return start_.get(index);
    }
    private int startMemoizedSerializedSize = -1;

    public static final int PAIRED_READ_NAME_FIELD_NUMBER = 9;
    private volatile java.lang.Object pairedReadName_;
    /**
     * <code>string paired_read_name = 9;</code>
     */
    public java.lang.String getPairedReadName() {
      java.lang.Object ref = pairedReadName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pairedReadName_ = s;
        return s;
      }
    }
    /**
     * <code>string paired_read_name = 9;</code>
     */
    public com.google.protobuf.ByteString
        getPairedReadNameBytes() {
      java.lang.Object ref = pairedReadName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pairedReadName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANNOTATION_FIELD_NUMBER = 100;
    private com.google.protobuf.Struct annotation_;
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    public boolean hasAnnotation() {
      return annotation_ != null;
    }
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    public com.google.protobuf.Struct getAnnotation() {
      return annotation_ == null ? com.google.protobuf.Struct.getDefaultInstance() : annotation_;
    }
    /**
     * <pre>
     * Annotations carried along with the Alignment.
     * </pre>
     *
     * <code>.google.protobuf.Struct annotation = 100;</code>
     */
    public com.google.protobuf.StructOrBuilder getAnnotationOrBuilder() {
      return getAnnotation();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getSequenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sequence_);
      }
      if (!quality_.isEmpty()) {
        output.writeBytes(2, quality_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getSampleNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, sampleName_);
      }
      if (!getReadGroupBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, readGroup_);
      }
      for (int i = 0; i < subpath_.size(); i++) {
        output.writeMessage(6, subpath_.get(i));
      }
      if (mappingQuality_ != 0) {
        output.writeInt32(7, mappingQuality_);
      }
      if (getStartList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(startMemoizedSerializedSize);
      }
      for (int i = 0; i < start_.size(); i++) {
        output.writeUInt32NoTag(start_.get(i));
      }
      if (!getPairedReadNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, pairedReadName_);
      }
      if (annotation_ != null) {
        output.writeMessage(100, getAnnotation());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSequenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sequence_);
      }
      if (!quality_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, quality_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getSampleNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, sampleName_);
      }
      if (!getReadGroupBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, readGroup_);
      }
      for (int i = 0; i < subpath_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, subpath_.get(i));
      }
      if (mappingQuality_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, mappingQuality_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < start_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(start_.get(i));
        }
        size += dataSize;
        if (!getStartList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        startMemoizedSerializedSize = dataSize;
      }
      if (!getPairedReadNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, pairedReadName_);
      }
      if (annotation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, getAnnotation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.MultipathAlignment)) {
        return super.equals(obj);
      }
      vg.Vg.MultipathAlignment other = (vg.Vg.MultipathAlignment) obj;

      boolean result = true;
      result = result && getSequence()
          .equals(other.getSequence());
      result = result && getQuality()
          .equals(other.getQuality());
      result = result && getName()
          .equals(other.getName());
      result = result && getSampleName()
          .equals(other.getSampleName());
      result = result && getReadGroup()
          .equals(other.getReadGroup());
      result = result && getSubpathList()
          .equals(other.getSubpathList());
      result = result && (getMappingQuality()
          == other.getMappingQuality());
      result = result && getStartList()
          .equals(other.getStartList());
      result = result && getPairedReadName()
          .equals(other.getPairedReadName());
      result = result && (hasAnnotation() == other.hasAnnotation());
      if (hasAnnotation()) {
        result = result && getAnnotation()
            .equals(other.getAnnotation());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSequence().hashCode();
      hash = (37 * hash) + QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + getQuality().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + SAMPLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getSampleName().hashCode();
      hash = (37 * hash) + READ_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getReadGroup().hashCode();
      if (getSubpathCount() > 0) {
        hash = (37 * hash) + SUBPATH_FIELD_NUMBER;
        hash = (53 * hash) + getSubpathList().hashCode();
      }
      hash = (37 * hash) + MAPPING_QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + getMappingQuality();
      if (getStartCount() > 0) {
        hash = (37 * hash) + START_FIELD_NUMBER;
        hash = (53 * hash) + getStartList().hashCode();
      }
      hash = (37 * hash) + PAIRED_READ_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getPairedReadName().hashCode();
      if (hasAnnotation()) {
        hash = (37 * hash) + ANNOTATION_FIELD_NUMBER;
        hash = (53 * hash) + getAnnotation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.MultipathAlignment parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.MultipathAlignment parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.MultipathAlignment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.MultipathAlignment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.MultipathAlignment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.MultipathAlignment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.MultipathAlignment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.MultipathAlignment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.MultipathAlignment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.MultipathAlignment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.MultipathAlignment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.MultipathAlignment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.MultipathAlignment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A subgraph of the unrolled Graph in which each non-branching path is associated with an alignment
     * of part of the read and part of the graph such that any path through the MultipathAlignment
     * indicates a valid alignment of a read to the graph
     * </pre>
     *
     * Protobuf type {@code vg.MultipathAlignment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.MultipathAlignment)
        vg.Vg.MultipathAlignmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_MultipathAlignment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_MultipathAlignment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.MultipathAlignment.class, vg.Vg.MultipathAlignment.Builder.class);
      }

      // Construct using vg.Vg.MultipathAlignment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubpathFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        sequence_ = "";

        quality_ = com.google.protobuf.ByteString.EMPTY;

        name_ = "";

        sampleName_ = "";

        readGroup_ = "";

        if (subpathBuilder_ == null) {
          subpath_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          subpathBuilder_.clear();
        }
        mappingQuality_ = 0;

        start_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        pairedReadName_ = "";

        if (annotationBuilder_ == null) {
          annotation_ = null;
        } else {
          annotation_ = null;
          annotationBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_MultipathAlignment_descriptor;
      }

      public vg.Vg.MultipathAlignment getDefaultInstanceForType() {
        return vg.Vg.MultipathAlignment.getDefaultInstance();
      }

      public vg.Vg.MultipathAlignment build() {
        vg.Vg.MultipathAlignment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.MultipathAlignment buildPartial() {
        vg.Vg.MultipathAlignment result = new vg.Vg.MultipathAlignment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.sequence_ = sequence_;
        result.quality_ = quality_;
        result.name_ = name_;
        result.sampleName_ = sampleName_;
        result.readGroup_ = readGroup_;
        if (subpathBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            subpath_ = java.util.Collections.unmodifiableList(subpath_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.subpath_ = subpath_;
        } else {
          result.subpath_ = subpathBuilder_.build();
        }
        result.mappingQuality_ = mappingQuality_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          start_ = java.util.Collections.unmodifiableList(start_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.start_ = start_;
        result.pairedReadName_ = pairedReadName_;
        if (annotationBuilder_ == null) {
          result.annotation_ = annotation_;
        } else {
          result.annotation_ = annotationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.MultipathAlignment) {
          return mergeFrom((vg.Vg.MultipathAlignment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.MultipathAlignment other) {
        if (other == vg.Vg.MultipathAlignment.getDefaultInstance()) return this;
        if (!other.getSequence().isEmpty()) {
          sequence_ = other.sequence_;
          onChanged();
        }
        if (other.getQuality() != com.google.protobuf.ByteString.EMPTY) {
          setQuality(other.getQuality());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getSampleName().isEmpty()) {
          sampleName_ = other.sampleName_;
          onChanged();
        }
        if (!other.getReadGroup().isEmpty()) {
          readGroup_ = other.readGroup_;
          onChanged();
        }
        if (subpathBuilder_ == null) {
          if (!other.subpath_.isEmpty()) {
            if (subpath_.isEmpty()) {
              subpath_ = other.subpath_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSubpathIsMutable();
              subpath_.addAll(other.subpath_);
            }
            onChanged();
          }
        } else {
          if (!other.subpath_.isEmpty()) {
            if (subpathBuilder_.isEmpty()) {
              subpathBuilder_.dispose();
              subpathBuilder_ = null;
              subpath_ = other.subpath_;
              bitField0_ = (bitField0_ & ~0x00000020);
              subpathBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSubpathFieldBuilder() : null;
            } else {
              subpathBuilder_.addAllMessages(other.subpath_);
            }
          }
        }
        if (other.getMappingQuality() != 0) {
          setMappingQuality(other.getMappingQuality());
        }
        if (!other.start_.isEmpty()) {
          if (start_.isEmpty()) {
            start_ = other.start_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureStartIsMutable();
            start_.addAll(other.start_);
          }
          onChanged();
        }
        if (!other.getPairedReadName().isEmpty()) {
          pairedReadName_ = other.pairedReadName_;
          onChanged();
        }
        if (other.hasAnnotation()) {
          mergeAnnotation(other.getAnnotation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.MultipathAlignment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.MultipathAlignment) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object sequence_ = "";
      /**
       * <code>string sequence = 1;</code>
       */
      public java.lang.String getSequence() {
        java.lang.Object ref = sequence_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sequence_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sequence = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSequenceBytes() {
        java.lang.Object ref = sequence_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequence_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sequence = 1;</code>
       */
      public Builder setSequence(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sequence = 1;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = getDefaultInstance().getSequence();
        onChanged();
        return this;
      }
      /**
       * <code>string sequence = 1;</code>
       */
      public Builder setSequenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sequence_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString quality_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes quality = 2;</code>
       */
      public com.google.protobuf.ByteString getQuality() {
        return quality_;
      }
      /**
       * <code>bytes quality = 2;</code>
       */
      public Builder setQuality(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes quality = 2;</code>
       */
      public Builder clearQuality() {
        
        quality_ = getDefaultInstance().getQuality();
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 3;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sampleName_ = "";
      /**
       * <code>string sample_name = 4;</code>
       */
      public java.lang.String getSampleName() {
        java.lang.Object ref = sampleName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sampleName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sample_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSampleNameBytes() {
        java.lang.Object ref = sampleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sampleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sample_name = 4;</code>
       */
      public Builder setSampleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sampleName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sample_name = 4;</code>
       */
      public Builder clearSampleName() {
        
        sampleName_ = getDefaultInstance().getSampleName();
        onChanged();
        return this;
      }
      /**
       * <code>string sample_name = 4;</code>
       */
      public Builder setSampleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sampleName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object readGroup_ = "";
      /**
       * <code>string read_group = 5;</code>
       */
      public java.lang.String getReadGroup() {
        java.lang.Object ref = readGroup_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          readGroup_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string read_group = 5;</code>
       */
      public com.google.protobuf.ByteString
          getReadGroupBytes() {
        java.lang.Object ref = readGroup_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          readGroup_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string read_group = 5;</code>
       */
      public Builder setReadGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        readGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string read_group = 5;</code>
       */
      public Builder clearReadGroup() {
        
        readGroup_ = getDefaultInstance().getReadGroup();
        onChanged();
        return this;
      }
      /**
       * <code>string read_group = 5;</code>
       */
      public Builder setReadGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        readGroup_ = value;
        onChanged();
        return this;
      }

      private java.util.List<vg.Vg.Subpath> subpath_ =
        java.util.Collections.emptyList();
      private void ensureSubpathIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          subpath_ = new java.util.ArrayList<vg.Vg.Subpath>(subpath_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Subpath, vg.Vg.Subpath.Builder, vg.Vg.SubpathOrBuilder> subpathBuilder_;

      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public java.util.List<vg.Vg.Subpath> getSubpathList() {
        if (subpathBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subpath_);
        } else {
          return subpathBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public int getSubpathCount() {
        if (subpathBuilder_ == null) {
          return subpath_.size();
        } else {
          return subpathBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public vg.Vg.Subpath getSubpath(int index) {
        if (subpathBuilder_ == null) {
          return subpath_.get(index);
        } else {
          return subpathBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public Builder setSubpath(
          int index, vg.Vg.Subpath value) {
        if (subpathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubpathIsMutable();
          subpath_.set(index, value);
          onChanged();
        } else {
          subpathBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public Builder setSubpath(
          int index, vg.Vg.Subpath.Builder builderForValue) {
        if (subpathBuilder_ == null) {
          ensureSubpathIsMutable();
          subpath_.set(index, builderForValue.build());
          onChanged();
        } else {
          subpathBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public Builder addSubpath(vg.Vg.Subpath value) {
        if (subpathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubpathIsMutable();
          subpath_.add(value);
          onChanged();
        } else {
          subpathBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public Builder addSubpath(
          int index, vg.Vg.Subpath value) {
        if (subpathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubpathIsMutable();
          subpath_.add(index, value);
          onChanged();
        } else {
          subpathBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public Builder addSubpath(
          vg.Vg.Subpath.Builder builderForValue) {
        if (subpathBuilder_ == null) {
          ensureSubpathIsMutable();
          subpath_.add(builderForValue.build());
          onChanged();
        } else {
          subpathBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public Builder addSubpath(
          int index, vg.Vg.Subpath.Builder builderForValue) {
        if (subpathBuilder_ == null) {
          ensureSubpathIsMutable();
          subpath_.add(index, builderForValue.build());
          onChanged();
        } else {
          subpathBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public Builder addAllSubpath(
          java.lang.Iterable<? extends vg.Vg.Subpath> values) {
        if (subpathBuilder_ == null) {
          ensureSubpathIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, subpath_);
          onChanged();
        } else {
          subpathBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public Builder clearSubpath() {
        if (subpathBuilder_ == null) {
          subpath_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          subpathBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public Builder removeSubpath(int index) {
        if (subpathBuilder_ == null) {
          ensureSubpathIsMutable();
          subpath_.remove(index);
          onChanged();
        } else {
          subpathBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public vg.Vg.Subpath.Builder getSubpathBuilder(
          int index) {
        return getSubpathFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public vg.Vg.SubpathOrBuilder getSubpathOrBuilder(
          int index) {
        if (subpathBuilder_ == null) {
          return subpath_.get(index);  } else {
          return subpathBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public java.util.List<? extends vg.Vg.SubpathOrBuilder> 
           getSubpathOrBuilderList() {
        if (subpathBuilder_ != null) {
          return subpathBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subpath_);
        }
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public vg.Vg.Subpath.Builder addSubpathBuilder() {
        return getSubpathFieldBuilder().addBuilder(
            vg.Vg.Subpath.getDefaultInstance());
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public vg.Vg.Subpath.Builder addSubpathBuilder(
          int index) {
        return getSubpathFieldBuilder().addBuilder(
            index, vg.Vg.Subpath.getDefaultInstance());
      }
      /**
       * <pre>
       * non-branching paths of the multipath alignment, each containing an alignment of part of
       * the sequence to a Graph
       * IMPORTANT: downstream applications will assume these are stored in topological order
       * </pre>
       *
       * <code>repeated .vg.Subpath subpath = 6;</code>
       */
      public java.util.List<vg.Vg.Subpath.Builder> 
           getSubpathBuilderList() {
        return getSubpathFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Subpath, vg.Vg.Subpath.Builder, vg.Vg.SubpathOrBuilder> 
          getSubpathFieldBuilder() {
        if (subpathBuilder_ == null) {
          subpathBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Subpath, vg.Vg.Subpath.Builder, vg.Vg.SubpathOrBuilder>(
                  subpath_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          subpath_ = null;
        }
        return subpathBuilder_;
      }

      private int mappingQuality_ ;
      /**
       * <pre>
       * -10 * log_10(probability of mismapping)
       * </pre>
       *
       * <code>int32 mapping_quality = 7;</code>
       */
      public int getMappingQuality() {
        return mappingQuality_;
      }
      /**
       * <pre>
       * -10 * log_10(probability of mismapping)
       * </pre>
       *
       * <code>int32 mapping_quality = 7;</code>
       */
      public Builder setMappingQuality(int value) {
        
        mappingQuality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * -10 * log_10(probability of mismapping)
       * </pre>
       *
       * <code>int32 mapping_quality = 7;</code>
       */
      public Builder clearMappingQuality() {
        
        mappingQuality_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> start_ = java.util.Collections.emptyList();
      private void ensureStartIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          start_ = new java.util.ArrayList<java.lang.Integer>(start_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <pre>
       * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
       * </pre>
       *
       * <code>repeated uint32 start = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getStartList() {
        return java.util.Collections.unmodifiableList(start_);
      }
      /**
       * <pre>
       * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
       * </pre>
       *
       * <code>repeated uint32 start = 8;</code>
       */
      public int getStartCount() {
        return start_.size();
      }
      /**
       * <pre>
       * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
       * </pre>
       *
       * <code>repeated uint32 start = 8;</code>
       */
      public int getStart(int index) {
        return start_.get(index);
      }
      /**
       * <pre>
       * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
       * </pre>
       *
       * <code>repeated uint32 start = 8;</code>
       */
      public Builder setStart(
          int index, int value) {
        ensureStartIsMutable();
        start_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
       * </pre>
       *
       * <code>repeated uint32 start = 8;</code>
       */
      public Builder addStart(int value) {
        ensureStartIsMutable();
        start_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
       * </pre>
       *
       * <code>repeated uint32 start = 8;</code>
       */
      public Builder addAllStart(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStartIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, start_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional: indices of Subpaths that align the beginning of the read (i.e. source nodes)
       * </pre>
       *
       * <code>repeated uint32 start = 8;</code>
       */
      public Builder clearStart() {
        start_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.lang.Object pairedReadName_ = "";
      /**
       * <code>string paired_read_name = 9;</code>
       */
      public java.lang.String getPairedReadName() {
        java.lang.Object ref = pairedReadName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pairedReadName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string paired_read_name = 9;</code>
       */
      public com.google.protobuf.ByteString
          getPairedReadNameBytes() {
        java.lang.Object ref = pairedReadName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pairedReadName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string paired_read_name = 9;</code>
       */
      public Builder setPairedReadName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pairedReadName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string paired_read_name = 9;</code>
       */
      public Builder clearPairedReadName() {
        
        pairedReadName_ = getDefaultInstance().getPairedReadName();
        onChanged();
        return this;
      }
      /**
       * <code>string paired_read_name = 9;</code>
       */
      public Builder setPairedReadNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pairedReadName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Struct annotation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> annotationBuilder_;
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public boolean hasAnnotation() {
        return annotationBuilder_ != null || annotation_ != null;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public com.google.protobuf.Struct getAnnotation() {
        if (annotationBuilder_ == null) {
          return annotation_ == null ? com.google.protobuf.Struct.getDefaultInstance() : annotation_;
        } else {
          return annotationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public Builder setAnnotation(com.google.protobuf.Struct value) {
        if (annotationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          annotation_ = value;
          onChanged();
        } else {
          annotationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public Builder setAnnotation(
          com.google.protobuf.Struct.Builder builderForValue) {
        if (annotationBuilder_ == null) {
          annotation_ = builderForValue.build();
          onChanged();
        } else {
          annotationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public Builder mergeAnnotation(com.google.protobuf.Struct value) {
        if (annotationBuilder_ == null) {
          if (annotation_ != null) {
            annotation_ =
              com.google.protobuf.Struct.newBuilder(annotation_).mergeFrom(value).buildPartial();
          } else {
            annotation_ = value;
          }
          onChanged();
        } else {
          annotationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public Builder clearAnnotation() {
        if (annotationBuilder_ == null) {
          annotation_ = null;
          onChanged();
        } else {
          annotation_ = null;
          annotationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public com.google.protobuf.Struct.Builder getAnnotationBuilder() {
        
        onChanged();
        return getAnnotationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      public com.google.protobuf.StructOrBuilder getAnnotationOrBuilder() {
        if (annotationBuilder_ != null) {
          return annotationBuilder_.getMessageOrBuilder();
        } else {
          return annotation_ == null ?
              com.google.protobuf.Struct.getDefaultInstance() : annotation_;
        }
      }
      /**
       * <pre>
       * Annotations carried along with the Alignment.
       * </pre>
       *
       * <code>.google.protobuf.Struct annotation = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
          getAnnotationFieldBuilder() {
        if (annotationBuilder_ == null) {
          annotationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                  getAnnotation(),
                  getParentForChildren(),
                  isClean());
          annotation_ = null;
        }
        return annotationBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.MultipathAlignment)
    }

    // @@protoc_insertion_point(class_scope:vg.MultipathAlignment)
    private static final vg.Vg.MultipathAlignment DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.MultipathAlignment();
    }

    public static vg.Vg.MultipathAlignment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultipathAlignment>
        PARSER = new com.google.protobuf.AbstractParser<MultipathAlignment>() {
      public MultipathAlignment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MultipathAlignment(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultipathAlignment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultipathAlignment> getParserForType() {
      return PARSER;
    }

    public vg.Vg.MultipathAlignment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubpathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Subpath)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * describes node sequence and edits to the graph sequences
     * </pre>
     *
     * <code>.vg.Path path = 1;</code>
     */
    boolean hasPath();
    /**
     * <pre>
     * describes node sequence and edits to the graph sequences
     * </pre>
     *
     * <code>.vg.Path path = 1;</code>
     */
    vg.Vg.Path getPath();
    /**
     * <pre>
     * describes node sequence and edits to the graph sequences
     * </pre>
     *
     * <code>.vg.Path path = 1;</code>
     */
    vg.Vg.PathOrBuilder getPathOrBuilder();

    /**
     * <pre>
     * the indices of subpaths in the multipath alignment that are to the right of this path
     * where right is in the direction of the end of the read sequence
     * </pre>
     *
     * <code>repeated uint32 next = 2;</code>
     */
    java.util.List<java.lang.Integer> getNextList();
    /**
     * <pre>
     * the indices of subpaths in the multipath alignment that are to the right of this path
     * where right is in the direction of the end of the read sequence
     * </pre>
     *
     * <code>repeated uint32 next = 2;</code>
     */
    int getNextCount();
    /**
     * <pre>
     * the indices of subpaths in the multipath alignment that are to the right of this path
     * where right is in the direction of the end of the read sequence
     * </pre>
     *
     * <code>repeated uint32 next = 2;</code>
     */
    int getNext(int index);

    /**
     * <pre>
     * score of this subpath's alignment
     * </pre>
     *
     * <code>int32 score = 3;</code>
     */
    int getScore();
  }
  /**
   * <pre>
   * A non-branching path of a MultipathAlignment
   * </pre>
   *
   * Protobuf type {@code vg.Subpath}
   */
  public  static final class Subpath extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Subpath)
      SubpathOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Subpath.newBuilder() to construct.
    private Subpath(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Subpath() {
      next_ = java.util.Collections.emptyList();
      score_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Subpath(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              vg.Vg.Path.Builder subBuilder = null;
              if (path_ != null) {
                subBuilder = path_.toBuilder();
              }
              path_ = input.readMessage(vg.Vg.Path.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(path_);
                path_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                next_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              next_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                next_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                next_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {

              score_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          next_ = java.util.Collections.unmodifiableList(next_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Subpath_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Subpath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Subpath.class, vg.Vg.Subpath.Builder.class);
    }

    private int bitField0_;
    public static final int PATH_FIELD_NUMBER = 1;
    private vg.Vg.Path path_;
    /**
     * <pre>
     * describes node sequence and edits to the graph sequences
     * </pre>
     *
     * <code>.vg.Path path = 1;</code>
     */
    public boolean hasPath() {
      return path_ != null;
    }
    /**
     * <pre>
     * describes node sequence and edits to the graph sequences
     * </pre>
     *
     * <code>.vg.Path path = 1;</code>
     */
    public vg.Vg.Path getPath() {
      return path_ == null ? vg.Vg.Path.getDefaultInstance() : path_;
    }
    /**
     * <pre>
     * describes node sequence and edits to the graph sequences
     * </pre>
     *
     * <code>.vg.Path path = 1;</code>
     */
    public vg.Vg.PathOrBuilder getPathOrBuilder() {
      return getPath();
    }

    public static final int NEXT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> next_;
    /**
     * <pre>
     * the indices of subpaths in the multipath alignment that are to the right of this path
     * where right is in the direction of the end of the read sequence
     * </pre>
     *
     * <code>repeated uint32 next = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getNextList() {
      return next_;
    }
    /**
     * <pre>
     * the indices of subpaths in the multipath alignment that are to the right of this path
     * where right is in the direction of the end of the read sequence
     * </pre>
     *
     * <code>repeated uint32 next = 2;</code>
     */
    public int getNextCount() {
      return next_.size();
    }
    /**
     * <pre>
     * the indices of subpaths in the multipath alignment that are to the right of this path
     * where right is in the direction of the end of the read sequence
     * </pre>
     *
     * <code>repeated uint32 next = 2;</code>
     */
    public int getNext(int index) {
      return next_.get(index);
    }
    private int nextMemoizedSerializedSize = -1;

    public static final int SCORE_FIELD_NUMBER = 3;
    private int score_;
    /**
     * <pre>
     * score of this subpath's alignment
     * </pre>
     *
     * <code>int32 score = 3;</code>
     */
    public int getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (path_ != null) {
        output.writeMessage(1, getPath());
      }
      if (getNextList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(nextMemoizedSerializedSize);
      }
      for (int i = 0; i < next_.size(); i++) {
        output.writeUInt32NoTag(next_.get(i));
      }
      if (score_ != 0) {
        output.writeInt32(3, score_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (path_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPath());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < next_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(next_.get(i));
        }
        size += dataSize;
        if (!getNextList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        nextMemoizedSerializedSize = dataSize;
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, score_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Subpath)) {
        return super.equals(obj);
      }
      vg.Vg.Subpath other = (vg.Vg.Subpath) obj;

      boolean result = true;
      result = result && (hasPath() == other.hasPath());
      if (hasPath()) {
        result = result && getPath()
            .equals(other.getPath());
      }
      result = result && getNextList()
          .equals(other.getNextList());
      result = result && (getScore()
          == other.getScore());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPath()) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
      }
      if (getNextCount() > 0) {
        hash = (37 * hash) + NEXT_FIELD_NUMBER;
        hash = (53 * hash) + getNextList().hashCode();
      }
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Subpath parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Subpath parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Subpath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Subpath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Subpath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Subpath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Subpath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Subpath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Subpath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Subpath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Subpath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Subpath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Subpath prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A non-branching path of a MultipathAlignment
     * </pre>
     *
     * Protobuf type {@code vg.Subpath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Subpath)
        vg.Vg.SubpathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Subpath_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Subpath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Subpath.class, vg.Vg.Subpath.Builder.class);
      }

      // Construct using vg.Vg.Subpath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (pathBuilder_ == null) {
          path_ = null;
        } else {
          path_ = null;
          pathBuilder_ = null;
        }
        next_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        score_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Subpath_descriptor;
      }

      public vg.Vg.Subpath getDefaultInstanceForType() {
        return vg.Vg.Subpath.getDefaultInstance();
      }

      public vg.Vg.Subpath build() {
        vg.Vg.Subpath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Subpath buildPartial() {
        vg.Vg.Subpath result = new vg.Vg.Subpath(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (pathBuilder_ == null) {
          result.path_ = path_;
        } else {
          result.path_ = pathBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          next_ = java.util.Collections.unmodifiableList(next_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.next_ = next_;
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Subpath) {
          return mergeFrom((vg.Vg.Subpath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Subpath other) {
        if (other == vg.Vg.Subpath.getDefaultInstance()) return this;
        if (other.hasPath()) {
          mergePath(other.getPath());
        }
        if (!other.next_.isEmpty()) {
          if (next_.isEmpty()) {
            next_ = other.next_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNextIsMutable();
            next_.addAll(other.next_);
          }
          onChanged();
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Subpath parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Subpath) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private vg.Vg.Path path_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> pathBuilder_;
      /**
       * <pre>
       * describes node sequence and edits to the graph sequences
       * </pre>
       *
       * <code>.vg.Path path = 1;</code>
       */
      public boolean hasPath() {
        return pathBuilder_ != null || path_ != null;
      }
      /**
       * <pre>
       * describes node sequence and edits to the graph sequences
       * </pre>
       *
       * <code>.vg.Path path = 1;</code>
       */
      public vg.Vg.Path getPath() {
        if (pathBuilder_ == null) {
          return path_ == null ? vg.Vg.Path.getDefaultInstance() : path_;
        } else {
          return pathBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * describes node sequence and edits to the graph sequences
       * </pre>
       *
       * <code>.vg.Path path = 1;</code>
       */
      public Builder setPath(vg.Vg.Path value) {
        if (pathBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          path_ = value;
          onChanged();
        } else {
          pathBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * describes node sequence and edits to the graph sequences
       * </pre>
       *
       * <code>.vg.Path path = 1;</code>
       */
      public Builder setPath(
          vg.Vg.Path.Builder builderForValue) {
        if (pathBuilder_ == null) {
          path_ = builderForValue.build();
          onChanged();
        } else {
          pathBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * describes node sequence and edits to the graph sequences
       * </pre>
       *
       * <code>.vg.Path path = 1;</code>
       */
      public Builder mergePath(vg.Vg.Path value) {
        if (pathBuilder_ == null) {
          if (path_ != null) {
            path_ =
              vg.Vg.Path.newBuilder(path_).mergeFrom(value).buildPartial();
          } else {
            path_ = value;
          }
          onChanged();
        } else {
          pathBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * describes node sequence and edits to the graph sequences
       * </pre>
       *
       * <code>.vg.Path path = 1;</code>
       */
      public Builder clearPath() {
        if (pathBuilder_ == null) {
          path_ = null;
          onChanged();
        } else {
          path_ = null;
          pathBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * describes node sequence and edits to the graph sequences
       * </pre>
       *
       * <code>.vg.Path path = 1;</code>
       */
      public vg.Vg.Path.Builder getPathBuilder() {
        
        onChanged();
        return getPathFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * describes node sequence and edits to the graph sequences
       * </pre>
       *
       * <code>.vg.Path path = 1;</code>
       */
      public vg.Vg.PathOrBuilder getPathOrBuilder() {
        if (pathBuilder_ != null) {
          return pathBuilder_.getMessageOrBuilder();
        } else {
          return path_ == null ?
              vg.Vg.Path.getDefaultInstance() : path_;
        }
      }
      /**
       * <pre>
       * describes node sequence and edits to the graph sequences
       * </pre>
       *
       * <code>.vg.Path path = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> 
          getPathFieldBuilder() {
        if (pathBuilder_ == null) {
          pathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder>(
                  getPath(),
                  getParentForChildren(),
                  isClean());
          path_ = null;
        }
        return pathBuilder_;
      }

      private java.util.List<java.lang.Integer> next_ = java.util.Collections.emptyList();
      private void ensureNextIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          next_ = new java.util.ArrayList<java.lang.Integer>(next_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * the indices of subpaths in the multipath alignment that are to the right of this path
       * where right is in the direction of the end of the read sequence
       * </pre>
       *
       * <code>repeated uint32 next = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getNextList() {
        return java.util.Collections.unmodifiableList(next_);
      }
      /**
       * <pre>
       * the indices of subpaths in the multipath alignment that are to the right of this path
       * where right is in the direction of the end of the read sequence
       * </pre>
       *
       * <code>repeated uint32 next = 2;</code>
       */
      public int getNextCount() {
        return next_.size();
      }
      /**
       * <pre>
       * the indices of subpaths in the multipath alignment that are to the right of this path
       * where right is in the direction of the end of the read sequence
       * </pre>
       *
       * <code>repeated uint32 next = 2;</code>
       */
      public int getNext(int index) {
        return next_.get(index);
      }
      /**
       * <pre>
       * the indices of subpaths in the multipath alignment that are to the right of this path
       * where right is in the direction of the end of the read sequence
       * </pre>
       *
       * <code>repeated uint32 next = 2;</code>
       */
      public Builder setNext(
          int index, int value) {
        ensureNextIsMutable();
        next_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the indices of subpaths in the multipath alignment that are to the right of this path
       * where right is in the direction of the end of the read sequence
       * </pre>
       *
       * <code>repeated uint32 next = 2;</code>
       */
      public Builder addNext(int value) {
        ensureNextIsMutable();
        next_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the indices of subpaths in the multipath alignment that are to the right of this path
       * where right is in the direction of the end of the read sequence
       * </pre>
       *
       * <code>repeated uint32 next = 2;</code>
       */
      public Builder addAllNext(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNextIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, next_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the indices of subpaths in the multipath alignment that are to the right of this path
       * where right is in the direction of the end of the read sequence
       * </pre>
       *
       * <code>repeated uint32 next = 2;</code>
       */
      public Builder clearNext() {
        next_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <pre>
       * score of this subpath's alignment
       * </pre>
       *
       * <code>int32 score = 3;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <pre>
       * score of this subpath's alignment
       * </pre>
       *
       * <code>int32 score = 3;</code>
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * score of this subpath's alignment
       * </pre>
       *
       * <code>int32 score = 3;</code>
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Subpath)
    }

    // @@protoc_insertion_point(class_scope:vg.Subpath)
    private static final vg.Vg.Subpath DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Subpath();
    }

    public static vg.Vg.Subpath getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Subpath>
        PARSER = new com.google.protobuf.AbstractParser<Subpath>() {
      public Subpath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Subpath(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Subpath> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Subpath> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Subpath getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KmerMatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.KmerMatch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string sequence = 1;</code>
     */
    java.lang.String getSequence();
    /**
     * <code>string sequence = 1;</code>
     */
    com.google.protobuf.ByteString
        getSequenceBytes();

    /**
     * <code>int64 node_id = 2;</code>
     */
    long getNodeId();

    /**
     * <code>sint32 position = 3;</code>
     */
    int getPosition();

    /**
     * <pre>
     * If true, this kmer is backwards relative to its node, and position counts from the end of the node.
     * </pre>
     *
     * <code>bool backward = 4;</code>
     */
    boolean getBackward();
  }
  /**
   * <pre>
   * Used to serialize kmer matches.
   * </pre>
   *
   * Protobuf type {@code vg.KmerMatch}
   */
  public  static final class KmerMatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.KmerMatch)
      KmerMatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KmerMatch.newBuilder() to construct.
    private KmerMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KmerMatch() {
      sequence_ = "";
      nodeId_ = 0L;
      position_ = 0;
      backward_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KmerMatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              sequence_ = s;
              break;
            }
            case 16: {

              nodeId_ = input.readInt64();
              break;
            }
            case 24: {

              position_ = input.readSInt32();
              break;
            }
            case 32: {

              backward_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_KmerMatch_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_KmerMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.KmerMatch.class, vg.Vg.KmerMatch.Builder.class);
    }

    public static final int SEQUENCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object sequence_;
    /**
     * <code>string sequence = 1;</code>
     */
    public java.lang.String getSequence() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sequence_ = s;
        return s;
      }
    }
    /**
     * <code>string sequence = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSequenceBytes() {
      java.lang.Object ref = sequence_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequence_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_ID_FIELD_NUMBER = 2;
    private long nodeId_;
    /**
     * <code>int64 node_id = 2;</code>
     */
    public long getNodeId() {
      return nodeId_;
    }

    public static final int POSITION_FIELD_NUMBER = 3;
    private int position_;
    /**
     * <code>sint32 position = 3;</code>
     */
    public int getPosition() {
      return position_;
    }

    public static final int BACKWARD_FIELD_NUMBER = 4;
    private boolean backward_;
    /**
     * <pre>
     * If true, this kmer is backwards relative to its node, and position counts from the end of the node.
     * </pre>
     *
     * <code>bool backward = 4;</code>
     */
    public boolean getBackward() {
      return backward_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSequenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sequence_);
      }
      if (nodeId_ != 0L) {
        output.writeInt64(2, nodeId_);
      }
      if (position_ != 0) {
        output.writeSInt32(3, position_);
      }
      if (backward_ != false) {
        output.writeBool(4, backward_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSequenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sequence_);
      }
      if (nodeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, nodeId_);
      }
      if (position_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, position_);
      }
      if (backward_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, backward_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.KmerMatch)) {
        return super.equals(obj);
      }
      vg.Vg.KmerMatch other = (vg.Vg.KmerMatch) obj;

      boolean result = true;
      result = result && getSequence()
          .equals(other.getSequence());
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && (getPosition()
          == other.getPosition());
      result = result && (getBackward()
          == other.getBackward());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSequence().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNodeId());
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition();
      hash = (37 * hash) + BACKWARD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBackward());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.KmerMatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.KmerMatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.KmerMatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.KmerMatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.KmerMatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.KmerMatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.KmerMatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.KmerMatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.KmerMatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.KmerMatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.KmerMatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.KmerMatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.KmerMatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to serialize kmer matches.
     * </pre>
     *
     * Protobuf type {@code vg.KmerMatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.KmerMatch)
        vg.Vg.KmerMatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_KmerMatch_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_KmerMatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.KmerMatch.class, vg.Vg.KmerMatch.Builder.class);
      }

      // Construct using vg.Vg.KmerMatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sequence_ = "";

        nodeId_ = 0L;

        position_ = 0;

        backward_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_KmerMatch_descriptor;
      }

      public vg.Vg.KmerMatch getDefaultInstanceForType() {
        return vg.Vg.KmerMatch.getDefaultInstance();
      }

      public vg.Vg.KmerMatch build() {
        vg.Vg.KmerMatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.KmerMatch buildPartial() {
        vg.Vg.KmerMatch result = new vg.Vg.KmerMatch(this);
        result.sequence_ = sequence_;
        result.nodeId_ = nodeId_;
        result.position_ = position_;
        result.backward_ = backward_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.KmerMatch) {
          return mergeFrom((vg.Vg.KmerMatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.KmerMatch other) {
        if (other == vg.Vg.KmerMatch.getDefaultInstance()) return this;
        if (!other.getSequence().isEmpty()) {
          sequence_ = other.sequence_;
          onChanged();
        }
        if (other.getNodeId() != 0L) {
          setNodeId(other.getNodeId());
        }
        if (other.getPosition() != 0) {
          setPosition(other.getPosition());
        }
        if (other.getBackward() != false) {
          setBackward(other.getBackward());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.KmerMatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.KmerMatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object sequence_ = "";
      /**
       * <code>string sequence = 1;</code>
       */
      public java.lang.String getSequence() {
        java.lang.Object ref = sequence_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sequence_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sequence = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSequenceBytes() {
        java.lang.Object ref = sequence_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequence_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sequence = 1;</code>
       */
      public Builder setSequence(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sequence = 1;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = getDefaultInstance().getSequence();
        onChanged();
        return this;
      }
      /**
       * <code>string sequence = 1;</code>
       */
      public Builder setSequenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sequence_ = value;
        onChanged();
        return this;
      }

      private long nodeId_ ;
      /**
       * <code>int64 node_id = 2;</code>
       */
      public long getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int64 node_id = 2;</code>
       */
      public Builder setNodeId(long value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 node_id = 2;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0L;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <code>sint32 position = 3;</code>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>sint32 position = 3;</code>
       */
      public Builder setPosition(int value) {
        
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 position = 3;</code>
       */
      public Builder clearPosition() {
        
        position_ = 0;
        onChanged();
        return this;
      }

      private boolean backward_ ;
      /**
       * <pre>
       * If true, this kmer is backwards relative to its node, and position counts from the end of the node.
       * </pre>
       *
       * <code>bool backward = 4;</code>
       */
      public boolean getBackward() {
        return backward_;
      }
      /**
       * <pre>
       * If true, this kmer is backwards relative to its node, and position counts from the end of the node.
       * </pre>
       *
       * <code>bool backward = 4;</code>
       */
      public Builder setBackward(boolean value) {
        
        backward_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, this kmer is backwards relative to its node, and position counts from the end of the node.
       * </pre>
       *
       * <code>bool backward = 4;</code>
       */
      public Builder clearBackward() {
        
        backward_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.KmerMatch)
    }

    // @@protoc_insertion_point(class_scope:vg.KmerMatch)
    private static final vg.Vg.KmerMatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.KmerMatch();
    }

    public static vg.Vg.KmerMatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KmerMatch>
        PARSER = new com.google.protobuf.AbstractParser<KmerMatch>() {
      public KmerMatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new KmerMatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KmerMatch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KmerMatch> getParserForType() {
      return PARSER;
    }

    public vg.Vg.KmerMatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BasePileupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.BasePileup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 ref_base = 1;</code>
     */
    int getRefBase();

    /**
     * <code>int32 num_bases = 2;</code>
     */
    int getNumBases();

    /**
     * <code>string bases = 3;</code>
     */
    java.lang.String getBases();
    /**
     * <code>string bases = 3;</code>
     */
    com.google.protobuf.ByteString
        getBasesBytes();

    /**
     * <code>bytes qualities = 4;</code>
     */
    com.google.protobuf.ByteString getQualities();
  }
  /**
   * <pre>
   * Summarizes reads that map to single position in the graph.
   * This structure is pretty much identical to a line in Samtools pileup format
   * if qualities set, it must have size = num_bases
   * </pre>
   *
   * Protobuf type {@code vg.BasePileup}
   */
  public  static final class BasePileup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.BasePileup)
      BasePileupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BasePileup.newBuilder() to construct.
    private BasePileup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BasePileup() {
      refBase_ = 0;
      numBases_ = 0;
      bases_ = "";
      qualities_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BasePileup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              refBase_ = input.readInt32();
              break;
            }
            case 16: {

              numBases_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              bases_ = s;
              break;
            }
            case 34: {

              qualities_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_BasePileup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_BasePileup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.BasePileup.class, vg.Vg.BasePileup.Builder.class);
    }

    public static final int REF_BASE_FIELD_NUMBER = 1;
    private int refBase_;
    /**
     * <code>int32 ref_base = 1;</code>
     */
    public int getRefBase() {
      return refBase_;
    }

    public static final int NUM_BASES_FIELD_NUMBER = 2;
    private int numBases_;
    /**
     * <code>int32 num_bases = 2;</code>
     */
    public int getNumBases() {
      return numBases_;
    }

    public static final int BASES_FIELD_NUMBER = 3;
    private volatile java.lang.Object bases_;
    /**
     * <code>string bases = 3;</code>
     */
    public java.lang.String getBases() {
      java.lang.Object ref = bases_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bases_ = s;
        return s;
      }
    }
    /**
     * <code>string bases = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBasesBytes() {
      java.lang.Object ref = bases_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bases_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUALITIES_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString qualities_;
    /**
     * <code>bytes qualities = 4;</code>
     */
    public com.google.protobuf.ByteString getQualities() {
      return qualities_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (refBase_ != 0) {
        output.writeInt32(1, refBase_);
      }
      if (numBases_ != 0) {
        output.writeInt32(2, numBases_);
      }
      if (!getBasesBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, bases_);
      }
      if (!qualities_.isEmpty()) {
        output.writeBytes(4, qualities_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (refBase_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, refBase_);
      }
      if (numBases_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numBases_);
      }
      if (!getBasesBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, bases_);
      }
      if (!qualities_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, qualities_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.BasePileup)) {
        return super.equals(obj);
      }
      vg.Vg.BasePileup other = (vg.Vg.BasePileup) obj;

      boolean result = true;
      result = result && (getRefBase()
          == other.getRefBase());
      result = result && (getNumBases()
          == other.getNumBases());
      result = result && getBases()
          .equals(other.getBases());
      result = result && getQualities()
          .equals(other.getQualities());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REF_BASE_FIELD_NUMBER;
      hash = (53 * hash) + getRefBase();
      hash = (37 * hash) + NUM_BASES_FIELD_NUMBER;
      hash = (53 * hash) + getNumBases();
      hash = (37 * hash) + BASES_FIELD_NUMBER;
      hash = (53 * hash) + getBases().hashCode();
      hash = (37 * hash) + QUALITIES_FIELD_NUMBER;
      hash = (53 * hash) + getQualities().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.BasePileup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.BasePileup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.BasePileup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.BasePileup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.BasePileup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.BasePileup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.BasePileup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.BasePileup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.BasePileup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.BasePileup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.BasePileup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.BasePileup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.BasePileup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Summarizes reads that map to single position in the graph.
     * This structure is pretty much identical to a line in Samtools pileup format
     * if qualities set, it must have size = num_bases
     * </pre>
     *
     * Protobuf type {@code vg.BasePileup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.BasePileup)
        vg.Vg.BasePileupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_BasePileup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_BasePileup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.BasePileup.class, vg.Vg.BasePileup.Builder.class);
      }

      // Construct using vg.Vg.BasePileup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        refBase_ = 0;

        numBases_ = 0;

        bases_ = "";

        qualities_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_BasePileup_descriptor;
      }

      public vg.Vg.BasePileup getDefaultInstanceForType() {
        return vg.Vg.BasePileup.getDefaultInstance();
      }

      public vg.Vg.BasePileup build() {
        vg.Vg.BasePileup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.BasePileup buildPartial() {
        vg.Vg.BasePileup result = new vg.Vg.BasePileup(this);
        result.refBase_ = refBase_;
        result.numBases_ = numBases_;
        result.bases_ = bases_;
        result.qualities_ = qualities_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.BasePileup) {
          return mergeFrom((vg.Vg.BasePileup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.BasePileup other) {
        if (other == vg.Vg.BasePileup.getDefaultInstance()) return this;
        if (other.getRefBase() != 0) {
          setRefBase(other.getRefBase());
        }
        if (other.getNumBases() != 0) {
          setNumBases(other.getNumBases());
        }
        if (!other.getBases().isEmpty()) {
          bases_ = other.bases_;
          onChanged();
        }
        if (other.getQualities() != com.google.protobuf.ByteString.EMPTY) {
          setQualities(other.getQualities());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.BasePileup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.BasePileup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int refBase_ ;
      /**
       * <code>int32 ref_base = 1;</code>
       */
      public int getRefBase() {
        return refBase_;
      }
      /**
       * <code>int32 ref_base = 1;</code>
       */
      public Builder setRefBase(int value) {
        
        refBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 ref_base = 1;</code>
       */
      public Builder clearRefBase() {
        
        refBase_ = 0;
        onChanged();
        return this;
      }

      private int numBases_ ;
      /**
       * <code>int32 num_bases = 2;</code>
       */
      public int getNumBases() {
        return numBases_;
      }
      /**
       * <code>int32 num_bases = 2;</code>
       */
      public Builder setNumBases(int value) {
        
        numBases_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_bases = 2;</code>
       */
      public Builder clearNumBases() {
        
        numBases_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object bases_ = "";
      /**
       * <code>string bases = 3;</code>
       */
      public java.lang.String getBases() {
        java.lang.Object ref = bases_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bases_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string bases = 3;</code>
       */
      public com.google.protobuf.ByteString
          getBasesBytes() {
        java.lang.Object ref = bases_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bases_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string bases = 3;</code>
       */
      public Builder setBases(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bases_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string bases = 3;</code>
       */
      public Builder clearBases() {
        
        bases_ = getDefaultInstance().getBases();
        onChanged();
        return this;
      }
      /**
       * <code>string bases = 3;</code>
       */
      public Builder setBasesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bases_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString qualities_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes qualities = 4;</code>
       */
      public com.google.protobuf.ByteString getQualities() {
        return qualities_;
      }
      /**
       * <code>bytes qualities = 4;</code>
       */
      public Builder setQualities(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        qualities_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes qualities = 4;</code>
       */
      public Builder clearQualities() {
        
        qualities_ = getDefaultInstance().getQualities();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.BasePileup)
    }

    // @@protoc_insertion_point(class_scope:vg.BasePileup)
    private static final vg.Vg.BasePileup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.BasePileup();
    }

    public static vg.Vg.BasePileup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BasePileup>
        PARSER = new com.google.protobuf.AbstractParser<BasePileup>() {
      public BasePileup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BasePileup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BasePileup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BasePileup> getParserForType() {
      return PARSER;
    }

    public vg.Vg.BasePileup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodePileupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.NodePileup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 node_id = 1;</code>
     */
    long getNodeId();

    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    java.util.List<vg.Vg.BasePileup> 
        getBasePileupList();
    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    vg.Vg.BasePileup getBasePileup(int index);
    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    int getBasePileupCount();
    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    java.util.List<? extends vg.Vg.BasePileupOrBuilder> 
        getBasePileupOrBuilderList();
    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    vg.Vg.BasePileupOrBuilder getBasePileupOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Collect pileup records by node.  Saves some space and hashing over
   * storing individually, assuming not too sparse and avg. node length more than couple bases
   * the ith BasePileup in the array corresponds to the position at offset i. 
   * </pre>
   *
   * Protobuf type {@code vg.NodePileup}
   */
  public  static final class NodePileup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.NodePileup)
      NodePileupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodePileup.newBuilder() to construct.
    private NodePileup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodePileup() {
      nodeId_ = 0L;
      basePileup_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodePileup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nodeId_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                basePileup_ = new java.util.ArrayList<vg.Vg.BasePileup>();
                mutable_bitField0_ |= 0x00000002;
              }
              basePileup_.add(
                  input.readMessage(vg.Vg.BasePileup.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          basePileup_ = java.util.Collections.unmodifiableList(basePileup_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_NodePileup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_NodePileup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.NodePileup.class, vg.Vg.NodePileup.Builder.class);
    }

    private int bitField0_;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private long nodeId_;
    /**
     * <code>int64 node_id = 1;</code>
     */
    public long getNodeId() {
      return nodeId_;
    }

    public static final int BASE_PILEUP_FIELD_NUMBER = 2;
    private java.util.List<vg.Vg.BasePileup> basePileup_;
    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    public java.util.List<vg.Vg.BasePileup> getBasePileupList() {
      return basePileup_;
    }
    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    public java.util.List<? extends vg.Vg.BasePileupOrBuilder> 
        getBasePileupOrBuilderList() {
      return basePileup_;
    }
    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    public int getBasePileupCount() {
      return basePileup_.size();
    }
    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    public vg.Vg.BasePileup getBasePileup(int index) {
      return basePileup_.get(index);
    }
    /**
     * <code>repeated .vg.BasePileup base_pileup = 2;</code>
     */
    public vg.Vg.BasePileupOrBuilder getBasePileupOrBuilder(
        int index) {
      return basePileup_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeId_ != 0L) {
        output.writeInt64(1, nodeId_);
      }
      for (int i = 0; i < basePileup_.size(); i++) {
        output.writeMessage(2, basePileup_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, nodeId_);
      }
      for (int i = 0; i < basePileup_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, basePileup_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.NodePileup)) {
        return super.equals(obj);
      }
      vg.Vg.NodePileup other = (vg.Vg.NodePileup) obj;

      boolean result = true;
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && getBasePileupList()
          .equals(other.getBasePileupList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNodeId());
      if (getBasePileupCount() > 0) {
        hash = (37 * hash) + BASE_PILEUP_FIELD_NUMBER;
        hash = (53 * hash) + getBasePileupList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.NodePileup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.NodePileup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.NodePileup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.NodePileup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.NodePileup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.NodePileup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.NodePileup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.NodePileup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.NodePileup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.NodePileup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.NodePileup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.NodePileup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.NodePileup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Collect pileup records by node.  Saves some space and hashing over
     * storing individually, assuming not too sparse and avg. node length more than couple bases
     * the ith BasePileup in the array corresponds to the position at offset i. 
     * </pre>
     *
     * Protobuf type {@code vg.NodePileup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.NodePileup)
        vg.Vg.NodePileupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_NodePileup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_NodePileup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.NodePileup.class, vg.Vg.NodePileup.Builder.class);
      }

      // Construct using vg.Vg.NodePileup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBasePileupFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = 0L;

        if (basePileupBuilder_ == null) {
          basePileup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          basePileupBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_NodePileup_descriptor;
      }

      public vg.Vg.NodePileup getDefaultInstanceForType() {
        return vg.Vg.NodePileup.getDefaultInstance();
      }

      public vg.Vg.NodePileup build() {
        vg.Vg.NodePileup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.NodePileup buildPartial() {
        vg.Vg.NodePileup result = new vg.Vg.NodePileup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.nodeId_ = nodeId_;
        if (basePileupBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            basePileup_ = java.util.Collections.unmodifiableList(basePileup_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.basePileup_ = basePileup_;
        } else {
          result.basePileup_ = basePileupBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.NodePileup) {
          return mergeFrom((vg.Vg.NodePileup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.NodePileup other) {
        if (other == vg.Vg.NodePileup.getDefaultInstance()) return this;
        if (other.getNodeId() != 0L) {
          setNodeId(other.getNodeId());
        }
        if (basePileupBuilder_ == null) {
          if (!other.basePileup_.isEmpty()) {
            if (basePileup_.isEmpty()) {
              basePileup_ = other.basePileup_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBasePileupIsMutable();
              basePileup_.addAll(other.basePileup_);
            }
            onChanged();
          }
        } else {
          if (!other.basePileup_.isEmpty()) {
            if (basePileupBuilder_.isEmpty()) {
              basePileupBuilder_.dispose();
              basePileupBuilder_ = null;
              basePileup_ = other.basePileup_;
              bitField0_ = (bitField0_ & ~0x00000002);
              basePileupBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBasePileupFieldBuilder() : null;
            } else {
              basePileupBuilder_.addAllMessages(other.basePileup_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.NodePileup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.NodePileup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long nodeId_ ;
      /**
       * <code>int64 node_id = 1;</code>
       */
      public long getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int64 node_id = 1;</code>
       */
      public Builder setNodeId(long value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<vg.Vg.BasePileup> basePileup_ =
        java.util.Collections.emptyList();
      private void ensureBasePileupIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          basePileup_ = new java.util.ArrayList<vg.Vg.BasePileup>(basePileup_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.BasePileup, vg.Vg.BasePileup.Builder, vg.Vg.BasePileupOrBuilder> basePileupBuilder_;

      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public java.util.List<vg.Vg.BasePileup> getBasePileupList() {
        if (basePileupBuilder_ == null) {
          return java.util.Collections.unmodifiableList(basePileup_);
        } else {
          return basePileupBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public int getBasePileupCount() {
        if (basePileupBuilder_ == null) {
          return basePileup_.size();
        } else {
          return basePileupBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public vg.Vg.BasePileup getBasePileup(int index) {
        if (basePileupBuilder_ == null) {
          return basePileup_.get(index);
        } else {
          return basePileupBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public Builder setBasePileup(
          int index, vg.Vg.BasePileup value) {
        if (basePileupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBasePileupIsMutable();
          basePileup_.set(index, value);
          onChanged();
        } else {
          basePileupBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public Builder setBasePileup(
          int index, vg.Vg.BasePileup.Builder builderForValue) {
        if (basePileupBuilder_ == null) {
          ensureBasePileupIsMutable();
          basePileup_.set(index, builderForValue.build());
          onChanged();
        } else {
          basePileupBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public Builder addBasePileup(vg.Vg.BasePileup value) {
        if (basePileupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBasePileupIsMutable();
          basePileup_.add(value);
          onChanged();
        } else {
          basePileupBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public Builder addBasePileup(
          int index, vg.Vg.BasePileup value) {
        if (basePileupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBasePileupIsMutable();
          basePileup_.add(index, value);
          onChanged();
        } else {
          basePileupBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public Builder addBasePileup(
          vg.Vg.BasePileup.Builder builderForValue) {
        if (basePileupBuilder_ == null) {
          ensureBasePileupIsMutable();
          basePileup_.add(builderForValue.build());
          onChanged();
        } else {
          basePileupBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public Builder addBasePileup(
          int index, vg.Vg.BasePileup.Builder builderForValue) {
        if (basePileupBuilder_ == null) {
          ensureBasePileupIsMutable();
          basePileup_.add(index, builderForValue.build());
          onChanged();
        } else {
          basePileupBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public Builder addAllBasePileup(
          java.lang.Iterable<? extends vg.Vg.BasePileup> values) {
        if (basePileupBuilder_ == null) {
          ensureBasePileupIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, basePileup_);
          onChanged();
        } else {
          basePileupBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public Builder clearBasePileup() {
        if (basePileupBuilder_ == null) {
          basePileup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          basePileupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public Builder removeBasePileup(int index) {
        if (basePileupBuilder_ == null) {
          ensureBasePileupIsMutable();
          basePileup_.remove(index);
          onChanged();
        } else {
          basePileupBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public vg.Vg.BasePileup.Builder getBasePileupBuilder(
          int index) {
        return getBasePileupFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public vg.Vg.BasePileupOrBuilder getBasePileupOrBuilder(
          int index) {
        if (basePileupBuilder_ == null) {
          return basePileup_.get(index);  } else {
          return basePileupBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public java.util.List<? extends vg.Vg.BasePileupOrBuilder> 
           getBasePileupOrBuilderList() {
        if (basePileupBuilder_ != null) {
          return basePileupBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(basePileup_);
        }
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public vg.Vg.BasePileup.Builder addBasePileupBuilder() {
        return getBasePileupFieldBuilder().addBuilder(
            vg.Vg.BasePileup.getDefaultInstance());
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public vg.Vg.BasePileup.Builder addBasePileupBuilder(
          int index) {
        return getBasePileupFieldBuilder().addBuilder(
            index, vg.Vg.BasePileup.getDefaultInstance());
      }
      /**
       * <code>repeated .vg.BasePileup base_pileup = 2;</code>
       */
      public java.util.List<vg.Vg.BasePileup.Builder> 
           getBasePileupBuilderList() {
        return getBasePileupFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.BasePileup, vg.Vg.BasePileup.Builder, vg.Vg.BasePileupOrBuilder> 
          getBasePileupFieldBuilder() {
        if (basePileupBuilder_ == null) {
          basePileupBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.BasePileup, vg.Vg.BasePileup.Builder, vg.Vg.BasePileupOrBuilder>(
                  basePileup_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          basePileup_ = null;
        }
        return basePileupBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.NodePileup)
    }

    // @@protoc_insertion_point(class_scope:vg.NodePileup)
    private static final vg.Vg.NodePileup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.NodePileup();
    }

    public static vg.Vg.NodePileup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodePileup>
        PARSER = new com.google.protobuf.AbstractParser<NodePileup>() {
      public NodePileup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodePileup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodePileup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodePileup> getParserForType() {
      return PARSER;
    }

    public vg.Vg.NodePileup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EdgePileupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.EdgePileup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.vg.Edge edge = 1;</code>
     */
    boolean hasEdge();
    /**
     * <code>.vg.Edge edge = 1;</code>
     */
    vg.Vg.Edge getEdge();
    /**
     * <code>.vg.Edge edge = 1;</code>
     */
    vg.Vg.EdgeOrBuilder getEdgeOrBuilder();

    /**
     * <pre>
     * total reads mapped
     * </pre>
     *
     * <code>int32 num_reads = 2;</code>
     */
    int getNumReads();

    /**
     * <pre>
     * number of reads mapped on forward strand
     * </pre>
     *
     * <code>int32 num_forward_reads = 3;</code>
     */
    int getNumForwardReads();

    /**
     * <code>bytes qualities = 4;</code>
     */
    com.google.protobuf.ByteString getQualities();
  }
  /**
   * <pre>
   * Keep pileup-like record for reads that span edges
   * </pre>
   *
   * Protobuf type {@code vg.EdgePileup}
   */
  public  static final class EdgePileup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.EdgePileup)
      EdgePileupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EdgePileup.newBuilder() to construct.
    private EdgePileup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EdgePileup() {
      numReads_ = 0;
      numForwardReads_ = 0;
      qualities_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EdgePileup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              vg.Vg.Edge.Builder subBuilder = null;
              if (edge_ != null) {
                subBuilder = edge_.toBuilder();
              }
              edge_ = input.readMessage(vg.Vg.Edge.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(edge_);
                edge_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              numReads_ = input.readInt32();
              break;
            }
            case 24: {

              numForwardReads_ = input.readInt32();
              break;
            }
            case 34: {

              qualities_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_EdgePileup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_EdgePileup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.EdgePileup.class, vg.Vg.EdgePileup.Builder.class);
    }

    public static final int EDGE_FIELD_NUMBER = 1;
    private vg.Vg.Edge edge_;
    /**
     * <code>.vg.Edge edge = 1;</code>
     */
    public boolean hasEdge() {
      return edge_ != null;
    }
    /**
     * <code>.vg.Edge edge = 1;</code>
     */
    public vg.Vg.Edge getEdge() {
      return edge_ == null ? vg.Vg.Edge.getDefaultInstance() : edge_;
    }
    /**
     * <code>.vg.Edge edge = 1;</code>
     */
    public vg.Vg.EdgeOrBuilder getEdgeOrBuilder() {
      return getEdge();
    }

    public static final int NUM_READS_FIELD_NUMBER = 2;
    private int numReads_;
    /**
     * <pre>
     * total reads mapped
     * </pre>
     *
     * <code>int32 num_reads = 2;</code>
     */
    public int getNumReads() {
      return numReads_;
    }

    public static final int NUM_FORWARD_READS_FIELD_NUMBER = 3;
    private int numForwardReads_;
    /**
     * <pre>
     * number of reads mapped on forward strand
     * </pre>
     *
     * <code>int32 num_forward_reads = 3;</code>
     */
    public int getNumForwardReads() {
      return numForwardReads_;
    }

    public static final int QUALITIES_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString qualities_;
    /**
     * <code>bytes qualities = 4;</code>
     */
    public com.google.protobuf.ByteString getQualities() {
      return qualities_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (edge_ != null) {
        output.writeMessage(1, getEdge());
      }
      if (numReads_ != 0) {
        output.writeInt32(2, numReads_);
      }
      if (numForwardReads_ != 0) {
        output.writeInt32(3, numForwardReads_);
      }
      if (!qualities_.isEmpty()) {
        output.writeBytes(4, qualities_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (edge_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEdge());
      }
      if (numReads_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numReads_);
      }
      if (numForwardReads_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, numForwardReads_);
      }
      if (!qualities_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, qualities_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.EdgePileup)) {
        return super.equals(obj);
      }
      vg.Vg.EdgePileup other = (vg.Vg.EdgePileup) obj;

      boolean result = true;
      result = result && (hasEdge() == other.hasEdge());
      if (hasEdge()) {
        result = result && getEdge()
            .equals(other.getEdge());
      }
      result = result && (getNumReads()
          == other.getNumReads());
      result = result && (getNumForwardReads()
          == other.getNumForwardReads());
      result = result && getQualities()
          .equals(other.getQualities());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEdge()) {
        hash = (37 * hash) + EDGE_FIELD_NUMBER;
        hash = (53 * hash) + getEdge().hashCode();
      }
      hash = (37 * hash) + NUM_READS_FIELD_NUMBER;
      hash = (53 * hash) + getNumReads();
      hash = (37 * hash) + NUM_FORWARD_READS_FIELD_NUMBER;
      hash = (53 * hash) + getNumForwardReads();
      hash = (37 * hash) + QUALITIES_FIELD_NUMBER;
      hash = (53 * hash) + getQualities().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.EdgePileup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.EdgePileup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.EdgePileup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.EdgePileup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.EdgePileup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.EdgePileup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.EdgePileup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.EdgePileup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.EdgePileup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.EdgePileup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.EdgePileup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.EdgePileup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.EdgePileup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Keep pileup-like record for reads that span edges
     * </pre>
     *
     * Protobuf type {@code vg.EdgePileup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.EdgePileup)
        vg.Vg.EdgePileupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_EdgePileup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_EdgePileup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.EdgePileup.class, vg.Vg.EdgePileup.Builder.class);
      }

      // Construct using vg.Vg.EdgePileup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (edgeBuilder_ == null) {
          edge_ = null;
        } else {
          edge_ = null;
          edgeBuilder_ = null;
        }
        numReads_ = 0;

        numForwardReads_ = 0;

        qualities_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_EdgePileup_descriptor;
      }

      public vg.Vg.EdgePileup getDefaultInstanceForType() {
        return vg.Vg.EdgePileup.getDefaultInstance();
      }

      public vg.Vg.EdgePileup build() {
        vg.Vg.EdgePileup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.EdgePileup buildPartial() {
        vg.Vg.EdgePileup result = new vg.Vg.EdgePileup(this);
        if (edgeBuilder_ == null) {
          result.edge_ = edge_;
        } else {
          result.edge_ = edgeBuilder_.build();
        }
        result.numReads_ = numReads_;
        result.numForwardReads_ = numForwardReads_;
        result.qualities_ = qualities_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.EdgePileup) {
          return mergeFrom((vg.Vg.EdgePileup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.EdgePileup other) {
        if (other == vg.Vg.EdgePileup.getDefaultInstance()) return this;
        if (other.hasEdge()) {
          mergeEdge(other.getEdge());
        }
        if (other.getNumReads() != 0) {
          setNumReads(other.getNumReads());
        }
        if (other.getNumForwardReads() != 0) {
          setNumForwardReads(other.getNumForwardReads());
        }
        if (other.getQualities() != com.google.protobuf.ByteString.EMPTY) {
          setQualities(other.getQualities());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.EdgePileup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.EdgePileup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private vg.Vg.Edge edge_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Edge, vg.Vg.Edge.Builder, vg.Vg.EdgeOrBuilder> edgeBuilder_;
      /**
       * <code>.vg.Edge edge = 1;</code>
       */
      public boolean hasEdge() {
        return edgeBuilder_ != null || edge_ != null;
      }
      /**
       * <code>.vg.Edge edge = 1;</code>
       */
      public vg.Vg.Edge getEdge() {
        if (edgeBuilder_ == null) {
          return edge_ == null ? vg.Vg.Edge.getDefaultInstance() : edge_;
        } else {
          return edgeBuilder_.getMessage();
        }
      }
      /**
       * <code>.vg.Edge edge = 1;</code>
       */
      public Builder setEdge(vg.Vg.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          edge_ = value;
          onChanged();
        } else {
          edgeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.vg.Edge edge = 1;</code>
       */
      public Builder setEdge(
          vg.Vg.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          edge_ = builderForValue.build();
          onChanged();
        } else {
          edgeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.vg.Edge edge = 1;</code>
       */
      public Builder mergeEdge(vg.Vg.Edge value) {
        if (edgeBuilder_ == null) {
          if (edge_ != null) {
            edge_ =
              vg.Vg.Edge.newBuilder(edge_).mergeFrom(value).buildPartial();
          } else {
            edge_ = value;
          }
          onChanged();
        } else {
          edgeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.vg.Edge edge = 1;</code>
       */
      public Builder clearEdge() {
        if (edgeBuilder_ == null) {
          edge_ = null;
          onChanged();
        } else {
          edge_ = null;
          edgeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.vg.Edge edge = 1;</code>
       */
      public vg.Vg.Edge.Builder getEdgeBuilder() {
        
        onChanged();
        return getEdgeFieldBuilder().getBuilder();
      }
      /**
       * <code>.vg.Edge edge = 1;</code>
       */
      public vg.Vg.EdgeOrBuilder getEdgeOrBuilder() {
        if (edgeBuilder_ != null) {
          return edgeBuilder_.getMessageOrBuilder();
        } else {
          return edge_ == null ?
              vg.Vg.Edge.getDefaultInstance() : edge_;
        }
      }
      /**
       * <code>.vg.Edge edge = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Edge, vg.Vg.Edge.Builder, vg.Vg.EdgeOrBuilder> 
          getEdgeFieldBuilder() {
        if (edgeBuilder_ == null) {
          edgeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Edge, vg.Vg.Edge.Builder, vg.Vg.EdgeOrBuilder>(
                  getEdge(),
                  getParentForChildren(),
                  isClean());
          edge_ = null;
        }
        return edgeBuilder_;
      }

      private int numReads_ ;
      /**
       * <pre>
       * total reads mapped
       * </pre>
       *
       * <code>int32 num_reads = 2;</code>
       */
      public int getNumReads() {
        return numReads_;
      }
      /**
       * <pre>
       * total reads mapped
       * </pre>
       *
       * <code>int32 num_reads = 2;</code>
       */
      public Builder setNumReads(int value) {
        
        numReads_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * total reads mapped
       * </pre>
       *
       * <code>int32 num_reads = 2;</code>
       */
      public Builder clearNumReads() {
        
        numReads_ = 0;
        onChanged();
        return this;
      }

      private int numForwardReads_ ;
      /**
       * <pre>
       * number of reads mapped on forward strand
       * </pre>
       *
       * <code>int32 num_forward_reads = 3;</code>
       */
      public int getNumForwardReads() {
        return numForwardReads_;
      }
      /**
       * <pre>
       * number of reads mapped on forward strand
       * </pre>
       *
       * <code>int32 num_forward_reads = 3;</code>
       */
      public Builder setNumForwardReads(int value) {
        
        numForwardReads_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * number of reads mapped on forward strand
       * </pre>
       *
       * <code>int32 num_forward_reads = 3;</code>
       */
      public Builder clearNumForwardReads() {
        
        numForwardReads_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString qualities_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes qualities = 4;</code>
       */
      public com.google.protobuf.ByteString getQualities() {
        return qualities_;
      }
      /**
       * <code>bytes qualities = 4;</code>
       */
      public Builder setQualities(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        qualities_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes qualities = 4;</code>
       */
      public Builder clearQualities() {
        
        qualities_ = getDefaultInstance().getQualities();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.EdgePileup)
    }

    // @@protoc_insertion_point(class_scope:vg.EdgePileup)
    private static final vg.Vg.EdgePileup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.EdgePileup();
    }

    public static vg.Vg.EdgePileup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EdgePileup>
        PARSER = new com.google.protobuf.AbstractParser<EdgePileup>() {
      public EdgePileup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new EdgePileup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EdgePileup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EdgePileup> getParserForType() {
      return PARSER;
    }

    public vg.Vg.EdgePileup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PileupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Pileup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    java.util.List<vg.Vg.NodePileup> 
        getNodePileupsList();
    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    vg.Vg.NodePileup getNodePileups(int index);
    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    int getNodePileupsCount();
    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    java.util.List<? extends vg.Vg.NodePileupOrBuilder> 
        getNodePileupsOrBuilderList();
    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    vg.Vg.NodePileupOrBuilder getNodePileupsOrBuilder(
        int index);

    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    java.util.List<vg.Vg.EdgePileup> 
        getEdgePileupsList();
    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    vg.Vg.EdgePileup getEdgePileups(int index);
    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    int getEdgePileupsCount();
    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    java.util.List<? extends vg.Vg.EdgePileupOrBuilder> 
        getEdgePileupsOrBuilderList();
    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    vg.Vg.EdgePileupOrBuilder getEdgePileupsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Bundle up Node and Edge pileups
   * </pre>
   *
   * Protobuf type {@code vg.Pileup}
   */
  public  static final class Pileup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Pileup)
      PileupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Pileup.newBuilder() to construct.
    private Pileup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pileup() {
      nodePileups_ = java.util.Collections.emptyList();
      edgePileups_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Pileup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodePileups_ = new java.util.ArrayList<vg.Vg.NodePileup>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodePileups_.add(
                  input.readMessage(vg.Vg.NodePileup.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                edgePileups_ = new java.util.ArrayList<vg.Vg.EdgePileup>();
                mutable_bitField0_ |= 0x00000002;
              }
              edgePileups_.add(
                  input.readMessage(vg.Vg.EdgePileup.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodePileups_ = java.util.Collections.unmodifiableList(nodePileups_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          edgePileups_ = java.util.Collections.unmodifiableList(edgePileups_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Pileup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Pileup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Pileup.class, vg.Vg.Pileup.Builder.class);
    }

    public static final int NODE_PILEUPS_FIELD_NUMBER = 1;
    private java.util.List<vg.Vg.NodePileup> nodePileups_;
    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    public java.util.List<vg.Vg.NodePileup> getNodePileupsList() {
      return nodePileups_;
    }
    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    public java.util.List<? extends vg.Vg.NodePileupOrBuilder> 
        getNodePileupsOrBuilderList() {
      return nodePileups_;
    }
    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    public int getNodePileupsCount() {
      return nodePileups_.size();
    }
    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    public vg.Vg.NodePileup getNodePileups(int index) {
      return nodePileups_.get(index);
    }
    /**
     * <code>repeated .vg.NodePileup node_pileups = 1;</code>
     */
    public vg.Vg.NodePileupOrBuilder getNodePileupsOrBuilder(
        int index) {
      return nodePileups_.get(index);
    }

    public static final int EDGE_PILEUPS_FIELD_NUMBER = 2;
    private java.util.List<vg.Vg.EdgePileup> edgePileups_;
    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    public java.util.List<vg.Vg.EdgePileup> getEdgePileupsList() {
      return edgePileups_;
    }
    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    public java.util.List<? extends vg.Vg.EdgePileupOrBuilder> 
        getEdgePileupsOrBuilderList() {
      return edgePileups_;
    }
    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    public int getEdgePileupsCount() {
      return edgePileups_.size();
    }
    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    public vg.Vg.EdgePileup getEdgePileups(int index) {
      return edgePileups_.get(index);
    }
    /**
     * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
     */
    public vg.Vg.EdgePileupOrBuilder getEdgePileupsOrBuilder(
        int index) {
      return edgePileups_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nodePileups_.size(); i++) {
        output.writeMessage(1, nodePileups_.get(i));
      }
      for (int i = 0; i < edgePileups_.size(); i++) {
        output.writeMessage(2, edgePileups_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodePileups_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodePileups_.get(i));
      }
      for (int i = 0; i < edgePileups_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, edgePileups_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Pileup)) {
        return super.equals(obj);
      }
      vg.Vg.Pileup other = (vg.Vg.Pileup) obj;

      boolean result = true;
      result = result && getNodePileupsList()
          .equals(other.getNodePileupsList());
      result = result && getEdgePileupsList()
          .equals(other.getEdgePileupsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodePileupsCount() > 0) {
        hash = (37 * hash) + NODE_PILEUPS_FIELD_NUMBER;
        hash = (53 * hash) + getNodePileupsList().hashCode();
      }
      if (getEdgePileupsCount() > 0) {
        hash = (37 * hash) + EDGE_PILEUPS_FIELD_NUMBER;
        hash = (53 * hash) + getEdgePileupsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Pileup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Pileup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Pileup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Pileup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Pileup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Pileup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Pileup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Pileup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Pileup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Pileup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Pileup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Pileup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Pileup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Bundle up Node and Edge pileups
     * </pre>
     *
     * Protobuf type {@code vg.Pileup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Pileup)
        vg.Vg.PileupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Pileup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Pileup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Pileup.class, vg.Vg.Pileup.Builder.class);
      }

      // Construct using vg.Vg.Pileup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodePileupsFieldBuilder();
          getEdgePileupsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodePileupsBuilder_ == null) {
          nodePileups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodePileupsBuilder_.clear();
        }
        if (edgePileupsBuilder_ == null) {
          edgePileups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          edgePileupsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Pileup_descriptor;
      }

      public vg.Vg.Pileup getDefaultInstanceForType() {
        return vg.Vg.Pileup.getDefaultInstance();
      }

      public vg.Vg.Pileup build() {
        vg.Vg.Pileup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Pileup buildPartial() {
        vg.Vg.Pileup result = new vg.Vg.Pileup(this);
        int from_bitField0_ = bitField0_;
        if (nodePileupsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodePileups_ = java.util.Collections.unmodifiableList(nodePileups_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodePileups_ = nodePileups_;
        } else {
          result.nodePileups_ = nodePileupsBuilder_.build();
        }
        if (edgePileupsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            edgePileups_ = java.util.Collections.unmodifiableList(edgePileups_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.edgePileups_ = edgePileups_;
        } else {
          result.edgePileups_ = edgePileupsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Pileup) {
          return mergeFrom((vg.Vg.Pileup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Pileup other) {
        if (other == vg.Vg.Pileup.getDefaultInstance()) return this;
        if (nodePileupsBuilder_ == null) {
          if (!other.nodePileups_.isEmpty()) {
            if (nodePileups_.isEmpty()) {
              nodePileups_ = other.nodePileups_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodePileupsIsMutable();
              nodePileups_.addAll(other.nodePileups_);
            }
            onChanged();
          }
        } else {
          if (!other.nodePileups_.isEmpty()) {
            if (nodePileupsBuilder_.isEmpty()) {
              nodePileupsBuilder_.dispose();
              nodePileupsBuilder_ = null;
              nodePileups_ = other.nodePileups_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodePileupsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodePileupsFieldBuilder() : null;
            } else {
              nodePileupsBuilder_.addAllMessages(other.nodePileups_);
            }
          }
        }
        if (edgePileupsBuilder_ == null) {
          if (!other.edgePileups_.isEmpty()) {
            if (edgePileups_.isEmpty()) {
              edgePileups_ = other.edgePileups_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEdgePileupsIsMutable();
              edgePileups_.addAll(other.edgePileups_);
            }
            onChanged();
          }
        } else {
          if (!other.edgePileups_.isEmpty()) {
            if (edgePileupsBuilder_.isEmpty()) {
              edgePileupsBuilder_.dispose();
              edgePileupsBuilder_ = null;
              edgePileups_ = other.edgePileups_;
              bitField0_ = (bitField0_ & ~0x00000002);
              edgePileupsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEdgePileupsFieldBuilder() : null;
            } else {
              edgePileupsBuilder_.addAllMessages(other.edgePileups_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Pileup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Pileup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<vg.Vg.NodePileup> nodePileups_ =
        java.util.Collections.emptyList();
      private void ensureNodePileupsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodePileups_ = new java.util.ArrayList<vg.Vg.NodePileup>(nodePileups_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.NodePileup, vg.Vg.NodePileup.Builder, vg.Vg.NodePileupOrBuilder> nodePileupsBuilder_;

      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public java.util.List<vg.Vg.NodePileup> getNodePileupsList() {
        if (nodePileupsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodePileups_);
        } else {
          return nodePileupsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public int getNodePileupsCount() {
        if (nodePileupsBuilder_ == null) {
          return nodePileups_.size();
        } else {
          return nodePileupsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public vg.Vg.NodePileup getNodePileups(int index) {
        if (nodePileupsBuilder_ == null) {
          return nodePileups_.get(index);
        } else {
          return nodePileupsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public Builder setNodePileups(
          int index, vg.Vg.NodePileup value) {
        if (nodePileupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodePileupsIsMutable();
          nodePileups_.set(index, value);
          onChanged();
        } else {
          nodePileupsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public Builder setNodePileups(
          int index, vg.Vg.NodePileup.Builder builderForValue) {
        if (nodePileupsBuilder_ == null) {
          ensureNodePileupsIsMutable();
          nodePileups_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodePileupsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public Builder addNodePileups(vg.Vg.NodePileup value) {
        if (nodePileupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodePileupsIsMutable();
          nodePileups_.add(value);
          onChanged();
        } else {
          nodePileupsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public Builder addNodePileups(
          int index, vg.Vg.NodePileup value) {
        if (nodePileupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodePileupsIsMutable();
          nodePileups_.add(index, value);
          onChanged();
        } else {
          nodePileupsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public Builder addNodePileups(
          vg.Vg.NodePileup.Builder builderForValue) {
        if (nodePileupsBuilder_ == null) {
          ensureNodePileupsIsMutable();
          nodePileups_.add(builderForValue.build());
          onChanged();
        } else {
          nodePileupsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public Builder addNodePileups(
          int index, vg.Vg.NodePileup.Builder builderForValue) {
        if (nodePileupsBuilder_ == null) {
          ensureNodePileupsIsMutable();
          nodePileups_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodePileupsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public Builder addAllNodePileups(
          java.lang.Iterable<? extends vg.Vg.NodePileup> values) {
        if (nodePileupsBuilder_ == null) {
          ensureNodePileupsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodePileups_);
          onChanged();
        } else {
          nodePileupsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public Builder clearNodePileups() {
        if (nodePileupsBuilder_ == null) {
          nodePileups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodePileupsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public Builder removeNodePileups(int index) {
        if (nodePileupsBuilder_ == null) {
          ensureNodePileupsIsMutable();
          nodePileups_.remove(index);
          onChanged();
        } else {
          nodePileupsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public vg.Vg.NodePileup.Builder getNodePileupsBuilder(
          int index) {
        return getNodePileupsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public vg.Vg.NodePileupOrBuilder getNodePileupsOrBuilder(
          int index) {
        if (nodePileupsBuilder_ == null) {
          return nodePileups_.get(index);  } else {
          return nodePileupsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public java.util.List<? extends vg.Vg.NodePileupOrBuilder> 
           getNodePileupsOrBuilderList() {
        if (nodePileupsBuilder_ != null) {
          return nodePileupsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodePileups_);
        }
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public vg.Vg.NodePileup.Builder addNodePileupsBuilder() {
        return getNodePileupsFieldBuilder().addBuilder(
            vg.Vg.NodePileup.getDefaultInstance());
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public vg.Vg.NodePileup.Builder addNodePileupsBuilder(
          int index) {
        return getNodePileupsFieldBuilder().addBuilder(
            index, vg.Vg.NodePileup.getDefaultInstance());
      }
      /**
       * <code>repeated .vg.NodePileup node_pileups = 1;</code>
       */
      public java.util.List<vg.Vg.NodePileup.Builder> 
           getNodePileupsBuilderList() {
        return getNodePileupsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.NodePileup, vg.Vg.NodePileup.Builder, vg.Vg.NodePileupOrBuilder> 
          getNodePileupsFieldBuilder() {
        if (nodePileupsBuilder_ == null) {
          nodePileupsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.NodePileup, vg.Vg.NodePileup.Builder, vg.Vg.NodePileupOrBuilder>(
                  nodePileups_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodePileups_ = null;
        }
        return nodePileupsBuilder_;
      }

      private java.util.List<vg.Vg.EdgePileup> edgePileups_ =
        java.util.Collections.emptyList();
      private void ensureEdgePileupsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          edgePileups_ = new java.util.ArrayList<vg.Vg.EdgePileup>(edgePileups_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.EdgePileup, vg.Vg.EdgePileup.Builder, vg.Vg.EdgePileupOrBuilder> edgePileupsBuilder_;

      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public java.util.List<vg.Vg.EdgePileup> getEdgePileupsList() {
        if (edgePileupsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(edgePileups_);
        } else {
          return edgePileupsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public int getEdgePileupsCount() {
        if (edgePileupsBuilder_ == null) {
          return edgePileups_.size();
        } else {
          return edgePileupsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public vg.Vg.EdgePileup getEdgePileups(int index) {
        if (edgePileupsBuilder_ == null) {
          return edgePileups_.get(index);
        } else {
          return edgePileupsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public Builder setEdgePileups(
          int index, vg.Vg.EdgePileup value) {
        if (edgePileupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgePileupsIsMutable();
          edgePileups_.set(index, value);
          onChanged();
        } else {
          edgePileupsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public Builder setEdgePileups(
          int index, vg.Vg.EdgePileup.Builder builderForValue) {
        if (edgePileupsBuilder_ == null) {
          ensureEdgePileupsIsMutable();
          edgePileups_.set(index, builderForValue.build());
          onChanged();
        } else {
          edgePileupsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public Builder addEdgePileups(vg.Vg.EdgePileup value) {
        if (edgePileupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgePileupsIsMutable();
          edgePileups_.add(value);
          onChanged();
        } else {
          edgePileupsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public Builder addEdgePileups(
          int index, vg.Vg.EdgePileup value) {
        if (edgePileupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgePileupsIsMutable();
          edgePileups_.add(index, value);
          onChanged();
        } else {
          edgePileupsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public Builder addEdgePileups(
          vg.Vg.EdgePileup.Builder builderForValue) {
        if (edgePileupsBuilder_ == null) {
          ensureEdgePileupsIsMutable();
          edgePileups_.add(builderForValue.build());
          onChanged();
        } else {
          edgePileupsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public Builder addEdgePileups(
          int index, vg.Vg.EdgePileup.Builder builderForValue) {
        if (edgePileupsBuilder_ == null) {
          ensureEdgePileupsIsMutable();
          edgePileups_.add(index, builderForValue.build());
          onChanged();
        } else {
          edgePileupsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public Builder addAllEdgePileups(
          java.lang.Iterable<? extends vg.Vg.EdgePileup> values) {
        if (edgePileupsBuilder_ == null) {
          ensureEdgePileupsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, edgePileups_);
          onChanged();
        } else {
          edgePileupsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public Builder clearEdgePileups() {
        if (edgePileupsBuilder_ == null) {
          edgePileups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          edgePileupsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public Builder removeEdgePileups(int index) {
        if (edgePileupsBuilder_ == null) {
          ensureEdgePileupsIsMutable();
          edgePileups_.remove(index);
          onChanged();
        } else {
          edgePileupsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public vg.Vg.EdgePileup.Builder getEdgePileupsBuilder(
          int index) {
        return getEdgePileupsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public vg.Vg.EdgePileupOrBuilder getEdgePileupsOrBuilder(
          int index) {
        if (edgePileupsBuilder_ == null) {
          return edgePileups_.get(index);  } else {
          return edgePileupsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public java.util.List<? extends vg.Vg.EdgePileupOrBuilder> 
           getEdgePileupsOrBuilderList() {
        if (edgePileupsBuilder_ != null) {
          return edgePileupsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(edgePileups_);
        }
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public vg.Vg.EdgePileup.Builder addEdgePileupsBuilder() {
        return getEdgePileupsFieldBuilder().addBuilder(
            vg.Vg.EdgePileup.getDefaultInstance());
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public vg.Vg.EdgePileup.Builder addEdgePileupsBuilder(
          int index) {
        return getEdgePileupsFieldBuilder().addBuilder(
            index, vg.Vg.EdgePileup.getDefaultInstance());
      }
      /**
       * <code>repeated .vg.EdgePileup edge_pileups = 2;</code>
       */
      public java.util.List<vg.Vg.EdgePileup.Builder> 
           getEdgePileupsBuilderList() {
        return getEdgePileupsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.EdgePileup, vg.Vg.EdgePileup.Builder, vg.Vg.EdgePileupOrBuilder> 
          getEdgePileupsFieldBuilder() {
        if (edgePileupsBuilder_ == null) {
          edgePileupsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.EdgePileup, vg.Vg.EdgePileup.Builder, vg.Vg.EdgePileupOrBuilder>(
                  edgePileups_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          edgePileups_ = null;
        }
        return edgePileupsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Pileup)
    }

    // @@protoc_insertion_point(class_scope:vg.Pileup)
    private static final vg.Vg.Pileup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Pileup();
    }

    public static vg.Vg.Pileup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Pileup>
        PARSER = new com.google.protobuf.AbstractParser<Pileup>() {
      public Pileup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Pileup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Pileup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pileup> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Pileup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SnarlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Snarl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * What type of snarl is this?
     * </pre>
     *
     * <code>.vg.SnarlType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * What type of snarl is this?
     * </pre>
     *
     * <code>.vg.SnarlType type = 1;</code>
     */
    vg.Vg.SnarlType getType();

    /**
     * <pre>
     * Visits that connect the Snarl to the rest of the graph
     * </pre>
     *
     * <code>.vg.Visit start = 2;</code>
     */
    boolean hasStart();
    /**
     * <pre>
     * Visits that connect the Snarl to the rest of the graph
     * </pre>
     *
     * <code>.vg.Visit start = 2;</code>
     */
    vg.Vg.Visit getStart();
    /**
     * <pre>
     * Visits that connect the Snarl to the rest of the graph
     * </pre>
     *
     * <code>.vg.Visit start = 2;</code>
     */
    vg.Vg.VisitOrBuilder getStartOrBuilder();

    /**
     * <pre>
     * points *OUT OF* the snarl
     * </pre>
     *
     * <code>.vg.Visit end = 3;</code>
     */
    boolean hasEnd();
    /**
     * <pre>
     * points *OUT OF* the snarl
     * </pre>
     *
     * <code>.vg.Visit end = 3;</code>
     */
    vg.Vg.Visit getEnd();
    /**
     * <pre>
     * points *OUT OF* the snarl
     * </pre>
     *
     * <code>.vg.Visit end = 3;</code>
     */
    vg.Vg.VisitOrBuilder getEndOrBuilder();

    /**
     * <pre>
     * If this Snarl is nested in another, this field should be filled in with a Snarl
     * that has the start and end visits filled in (other information is optional/extraneous)
     * </pre>
     *
     * <code>.vg.Snarl parent = 4;</code>
     */
    boolean hasParent();
    /**
     * <pre>
     * If this Snarl is nested in another, this field should be filled in with a Snarl
     * that has the start and end visits filled in (other information is optional/extraneous)
     * </pre>
     *
     * <code>.vg.Snarl parent = 4;</code>
     */
    vg.Vg.Snarl getParent();
    /**
     * <pre>
     * If this Snarl is nested in another, this field should be filled in with a Snarl
     * that has the start and end visits filled in (other information is optional/extraneous)
     * </pre>
     *
     * <code>.vg.Snarl parent = 4;</code>
     */
    vg.Vg.SnarlOrBuilder getParentOrBuilder();

    /**
     * <pre>
     * Allows snarls to be named, e.g. by the hash of the VCF variant they come from.
     * </pre>
     *
     * <code>string name = 5;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Allows snarls to be named, e.g. by the hash of the VCF variant they come from.
     * </pre>
     *
     * <code>string name = 5;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Indicate whether there is a reversing path contained in the Snarl from either the
     * start to itself or the end to itself
     * </pre>
     *
     * <code>bool start_self_reachable = 6;</code>
     */
    boolean getStartSelfReachable();

    /**
     * <code>bool end_self_reachable = 7;</code>
     */
    boolean getEndSelfReachable();

    /**
     * <pre>
     * Indicate whether the start of the Snarl is connected through to the end.
     * </pre>
     *
     * <code>bool start_end_reachable = 8;</code>
     */
    boolean getStartEndReachable();

    /**
     * <pre>
     * Indicate whether the snarl's net graph is free of directed cycles
     * </pre>
     *
     * <code>bool directed_acyclic_net_graph = 9;</code>
     */
    boolean getDirectedAcyclicNetGraph();
  }
  /**
   * <pre>
   * Describes a subgraph that is connected to the rest of the graph by two nodes.
   * </pre>
   *
   * Protobuf type {@code vg.Snarl}
   */
  public  static final class Snarl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Snarl)
      SnarlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Snarl.newBuilder() to construct.
    private Snarl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Snarl() {
      type_ = 0;
      name_ = "";
      startSelfReachable_ = false;
      endSelfReachable_ = false;
      startEndReachable_ = false;
      directedAcyclicNetGraph_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Snarl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              vg.Vg.Visit.Builder subBuilder = null;
              if (start_ != null) {
                subBuilder = start_.toBuilder();
              }
              start_ = input.readMessage(vg.Vg.Visit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(start_);
                start_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              vg.Vg.Visit.Builder subBuilder = null;
              if (end_ != null) {
                subBuilder = end_.toBuilder();
              }
              end_ = input.readMessage(vg.Vg.Visit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(end_);
                end_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              vg.Vg.Snarl.Builder subBuilder = null;
              if (parent_ != null) {
                subBuilder = parent_.toBuilder();
              }
              parent_ = input.readMessage(vg.Vg.Snarl.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parent_);
                parent_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 48: {

              startSelfReachable_ = input.readBool();
              break;
            }
            case 56: {

              endSelfReachable_ = input.readBool();
              break;
            }
            case 64: {

              startEndReachable_ = input.readBool();
              break;
            }
            case 72: {

              directedAcyclicNetGraph_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Snarl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Snarl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Snarl.class, vg.Vg.Snarl.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * What type of snarl is this?
     * </pre>
     *
     * <code>.vg.SnarlType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * What type of snarl is this?
     * </pre>
     *
     * <code>.vg.SnarlType type = 1;</code>
     */
    public vg.Vg.SnarlType getType() {
      vg.Vg.SnarlType result = vg.Vg.SnarlType.valueOf(type_);
      return result == null ? vg.Vg.SnarlType.UNRECOGNIZED : result;
    }

    public static final int START_FIELD_NUMBER = 2;
    private vg.Vg.Visit start_;
    /**
     * <pre>
     * Visits that connect the Snarl to the rest of the graph
     * </pre>
     *
     * <code>.vg.Visit start = 2;</code>
     */
    public boolean hasStart() {
      return start_ != null;
    }
    /**
     * <pre>
     * Visits that connect the Snarl to the rest of the graph
     * </pre>
     *
     * <code>.vg.Visit start = 2;</code>
     */
    public vg.Vg.Visit getStart() {
      return start_ == null ? vg.Vg.Visit.getDefaultInstance() : start_;
    }
    /**
     * <pre>
     * Visits that connect the Snarl to the rest of the graph
     * </pre>
     *
     * <code>.vg.Visit start = 2;</code>
     */
    public vg.Vg.VisitOrBuilder getStartOrBuilder() {
      return getStart();
    }

    public static final int END_FIELD_NUMBER = 3;
    private vg.Vg.Visit end_;
    /**
     * <pre>
     * points *OUT OF* the snarl
     * </pre>
     *
     * <code>.vg.Visit end = 3;</code>
     */
    public boolean hasEnd() {
      return end_ != null;
    }
    /**
     * <pre>
     * points *OUT OF* the snarl
     * </pre>
     *
     * <code>.vg.Visit end = 3;</code>
     */
    public vg.Vg.Visit getEnd() {
      return end_ == null ? vg.Vg.Visit.getDefaultInstance() : end_;
    }
    /**
     * <pre>
     * points *OUT OF* the snarl
     * </pre>
     *
     * <code>.vg.Visit end = 3;</code>
     */
    public vg.Vg.VisitOrBuilder getEndOrBuilder() {
      return getEnd();
    }

    public static final int PARENT_FIELD_NUMBER = 4;
    private vg.Vg.Snarl parent_;
    /**
     * <pre>
     * If this Snarl is nested in another, this field should be filled in with a Snarl
     * that has the start and end visits filled in (other information is optional/extraneous)
     * </pre>
     *
     * <code>.vg.Snarl parent = 4;</code>
     */
    public boolean hasParent() {
      return parent_ != null;
    }
    /**
     * <pre>
     * If this Snarl is nested in another, this field should be filled in with a Snarl
     * that has the start and end visits filled in (other information is optional/extraneous)
     * </pre>
     *
     * <code>.vg.Snarl parent = 4;</code>
     */
    public vg.Vg.Snarl getParent() {
      return parent_ == null ? vg.Vg.Snarl.getDefaultInstance() : parent_;
    }
    /**
     * <pre>
     * If this Snarl is nested in another, this field should be filled in with a Snarl
     * that has the start and end visits filled in (other information is optional/extraneous)
     * </pre>
     *
     * <code>.vg.Snarl parent = 4;</code>
     */
    public vg.Vg.SnarlOrBuilder getParentOrBuilder() {
      return getParent();
    }

    public static final int NAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Allows snarls to be named, e.g. by the hash of the VCF variant they come from.
     * </pre>
     *
     * <code>string name = 5;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Allows snarls to be named, e.g. by the hash of the VCF variant they come from.
     * </pre>
     *
     * <code>string name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_SELF_REACHABLE_FIELD_NUMBER = 6;
    private boolean startSelfReachable_;
    /**
     * <pre>
     * Indicate whether there is a reversing path contained in the Snarl from either the
     * start to itself or the end to itself
     * </pre>
     *
     * <code>bool start_self_reachable = 6;</code>
     */
    public boolean getStartSelfReachable() {
      return startSelfReachable_;
    }

    public static final int END_SELF_REACHABLE_FIELD_NUMBER = 7;
    private boolean endSelfReachable_;
    /**
     * <code>bool end_self_reachable = 7;</code>
     */
    public boolean getEndSelfReachable() {
      return endSelfReachable_;
    }

    public static final int START_END_REACHABLE_FIELD_NUMBER = 8;
    private boolean startEndReachable_;
    /**
     * <pre>
     * Indicate whether the start of the Snarl is connected through to the end.
     * </pre>
     *
     * <code>bool start_end_reachable = 8;</code>
     */
    public boolean getStartEndReachable() {
      return startEndReachable_;
    }

    public static final int DIRECTED_ACYCLIC_NET_GRAPH_FIELD_NUMBER = 9;
    private boolean directedAcyclicNetGraph_;
    /**
     * <pre>
     * Indicate whether the snarl's net graph is free of directed cycles
     * </pre>
     *
     * <code>bool directed_acyclic_net_graph = 9;</code>
     */
    public boolean getDirectedAcyclicNetGraph() {
      return directedAcyclicNetGraph_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != vg.Vg.SnarlType.UNCLASSIFIED.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (start_ != null) {
        output.writeMessage(2, getStart());
      }
      if (end_ != null) {
        output.writeMessage(3, getEnd());
      }
      if (parent_ != null) {
        output.writeMessage(4, getParent());
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, name_);
      }
      if (startSelfReachable_ != false) {
        output.writeBool(6, startSelfReachable_);
      }
      if (endSelfReachable_ != false) {
        output.writeBool(7, endSelfReachable_);
      }
      if (startEndReachable_ != false) {
        output.writeBool(8, startEndReachable_);
      }
      if (directedAcyclicNetGraph_ != false) {
        output.writeBool(9, directedAcyclicNetGraph_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != vg.Vg.SnarlType.UNCLASSIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (start_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStart());
      }
      if (end_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEnd());
      }
      if (parent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getParent());
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, name_);
      }
      if (startSelfReachable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, startSelfReachable_);
      }
      if (endSelfReachable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, endSelfReachable_);
      }
      if (startEndReachable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, startEndReachable_);
      }
      if (directedAcyclicNetGraph_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, directedAcyclicNetGraph_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Snarl)) {
        return super.equals(obj);
      }
      vg.Vg.Snarl other = (vg.Vg.Snarl) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasStart() == other.hasStart());
      if (hasStart()) {
        result = result && getStart()
            .equals(other.getStart());
      }
      result = result && (hasEnd() == other.hasEnd());
      if (hasEnd()) {
        result = result && getEnd()
            .equals(other.getEnd());
      }
      result = result && (hasParent() == other.hasParent());
      if (hasParent()) {
        result = result && getParent()
            .equals(other.getParent());
      }
      result = result && getName()
          .equals(other.getName());
      result = result && (getStartSelfReachable()
          == other.getStartSelfReachable());
      result = result && (getEndSelfReachable()
          == other.getEndSelfReachable());
      result = result && (getStartEndReachable()
          == other.getStartEndReachable());
      result = result && (getDirectedAcyclicNetGraph()
          == other.getDirectedAcyclicNetGraph());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasStart()) {
        hash = (37 * hash) + START_FIELD_NUMBER;
        hash = (53 * hash) + getStart().hashCode();
      }
      if (hasEnd()) {
        hash = (37 * hash) + END_FIELD_NUMBER;
        hash = (53 * hash) + getEnd().hashCode();
      }
      if (hasParent()) {
        hash = (37 * hash) + PARENT_FIELD_NUMBER;
        hash = (53 * hash) + getParent().hashCode();
      }
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + START_SELF_REACHABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getStartSelfReachable());
      hash = (37 * hash) + END_SELF_REACHABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEndSelfReachable());
      hash = (37 * hash) + START_END_REACHABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getStartEndReachable());
      hash = (37 * hash) + DIRECTED_ACYCLIC_NET_GRAPH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDirectedAcyclicNetGraph());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Snarl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Snarl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Snarl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Snarl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Snarl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Snarl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Snarl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Snarl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Snarl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Snarl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Snarl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Snarl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Snarl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a subgraph that is connected to the rest of the graph by two nodes.
     * </pre>
     *
     * Protobuf type {@code vg.Snarl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Snarl)
        vg.Vg.SnarlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Snarl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Snarl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Snarl.class, vg.Vg.Snarl.Builder.class);
      }

      // Construct using vg.Vg.Snarl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (startBuilder_ == null) {
          start_ = null;
        } else {
          start_ = null;
          startBuilder_ = null;
        }
        if (endBuilder_ == null) {
          end_ = null;
        } else {
          end_ = null;
          endBuilder_ = null;
        }
        if (parentBuilder_ == null) {
          parent_ = null;
        } else {
          parent_ = null;
          parentBuilder_ = null;
        }
        name_ = "";

        startSelfReachable_ = false;

        endSelfReachable_ = false;

        startEndReachable_ = false;

        directedAcyclicNetGraph_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Snarl_descriptor;
      }

      public vg.Vg.Snarl getDefaultInstanceForType() {
        return vg.Vg.Snarl.getDefaultInstance();
      }

      public vg.Vg.Snarl build() {
        vg.Vg.Snarl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Snarl buildPartial() {
        vg.Vg.Snarl result = new vg.Vg.Snarl(this);
        result.type_ = type_;
        if (startBuilder_ == null) {
          result.start_ = start_;
        } else {
          result.start_ = startBuilder_.build();
        }
        if (endBuilder_ == null) {
          result.end_ = end_;
        } else {
          result.end_ = endBuilder_.build();
        }
        if (parentBuilder_ == null) {
          result.parent_ = parent_;
        } else {
          result.parent_ = parentBuilder_.build();
        }
        result.name_ = name_;
        result.startSelfReachable_ = startSelfReachable_;
        result.endSelfReachable_ = endSelfReachable_;
        result.startEndReachable_ = startEndReachable_;
        result.directedAcyclicNetGraph_ = directedAcyclicNetGraph_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Snarl) {
          return mergeFrom((vg.Vg.Snarl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Snarl other) {
        if (other == vg.Vg.Snarl.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasStart()) {
          mergeStart(other.getStart());
        }
        if (other.hasEnd()) {
          mergeEnd(other.getEnd());
        }
        if (other.hasParent()) {
          mergeParent(other.getParent());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getStartSelfReachable() != false) {
          setStartSelfReachable(other.getStartSelfReachable());
        }
        if (other.getEndSelfReachable() != false) {
          setEndSelfReachable(other.getEndSelfReachable());
        }
        if (other.getStartEndReachable() != false) {
          setStartEndReachable(other.getStartEndReachable());
        }
        if (other.getDirectedAcyclicNetGraph() != false) {
          setDirectedAcyclicNetGraph(other.getDirectedAcyclicNetGraph());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Snarl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Snarl) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * What type of snarl is this?
       * </pre>
       *
       * <code>.vg.SnarlType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * What type of snarl is this?
       * </pre>
       *
       * <code>.vg.SnarlType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * What type of snarl is this?
       * </pre>
       *
       * <code>.vg.SnarlType type = 1;</code>
       */
      public vg.Vg.SnarlType getType() {
        vg.Vg.SnarlType result = vg.Vg.SnarlType.valueOf(type_);
        return result == null ? vg.Vg.SnarlType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * What type of snarl is this?
       * </pre>
       *
       * <code>.vg.SnarlType type = 1;</code>
       */
      public Builder setType(vg.Vg.SnarlType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * What type of snarl is this?
       * </pre>
       *
       * <code>.vg.SnarlType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private vg.Vg.Visit start_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Visit, vg.Vg.Visit.Builder, vg.Vg.VisitOrBuilder> startBuilder_;
      /**
       * <pre>
       * Visits that connect the Snarl to the rest of the graph
       * </pre>
       *
       * <code>.vg.Visit start = 2;</code>
       */
      public boolean hasStart() {
        return startBuilder_ != null || start_ != null;
      }
      /**
       * <pre>
       * Visits that connect the Snarl to the rest of the graph
       * </pre>
       *
       * <code>.vg.Visit start = 2;</code>
       */
      public vg.Vg.Visit getStart() {
        if (startBuilder_ == null) {
          return start_ == null ? vg.Vg.Visit.getDefaultInstance() : start_;
        } else {
          return startBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Visits that connect the Snarl to the rest of the graph
       * </pre>
       *
       * <code>.vg.Visit start = 2;</code>
       */
      public Builder setStart(vg.Vg.Visit value) {
        if (startBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          start_ = value;
          onChanged();
        } else {
          startBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Visits that connect the Snarl to the rest of the graph
       * </pre>
       *
       * <code>.vg.Visit start = 2;</code>
       */
      public Builder setStart(
          vg.Vg.Visit.Builder builderForValue) {
        if (startBuilder_ == null) {
          start_ = builderForValue.build();
          onChanged();
        } else {
          startBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Visits that connect the Snarl to the rest of the graph
       * </pre>
       *
       * <code>.vg.Visit start = 2;</code>
       */
      public Builder mergeStart(vg.Vg.Visit value) {
        if (startBuilder_ == null) {
          if (start_ != null) {
            start_ =
              vg.Vg.Visit.newBuilder(start_).mergeFrom(value).buildPartial();
          } else {
            start_ = value;
          }
          onChanged();
        } else {
          startBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Visits that connect the Snarl to the rest of the graph
       * </pre>
       *
       * <code>.vg.Visit start = 2;</code>
       */
      public Builder clearStart() {
        if (startBuilder_ == null) {
          start_ = null;
          onChanged();
        } else {
          start_ = null;
          startBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Visits that connect the Snarl to the rest of the graph
       * </pre>
       *
       * <code>.vg.Visit start = 2;</code>
       */
      public vg.Vg.Visit.Builder getStartBuilder() {
        
        onChanged();
        return getStartFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Visits that connect the Snarl to the rest of the graph
       * </pre>
       *
       * <code>.vg.Visit start = 2;</code>
       */
      public vg.Vg.VisitOrBuilder getStartOrBuilder() {
        if (startBuilder_ != null) {
          return startBuilder_.getMessageOrBuilder();
        } else {
          return start_ == null ?
              vg.Vg.Visit.getDefaultInstance() : start_;
        }
      }
      /**
       * <pre>
       * Visits that connect the Snarl to the rest of the graph
       * </pre>
       *
       * <code>.vg.Visit start = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Visit, vg.Vg.Visit.Builder, vg.Vg.VisitOrBuilder> 
          getStartFieldBuilder() {
        if (startBuilder_ == null) {
          startBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Visit, vg.Vg.Visit.Builder, vg.Vg.VisitOrBuilder>(
                  getStart(),
                  getParentForChildren(),
                  isClean());
          start_ = null;
        }
        return startBuilder_;
      }

      private vg.Vg.Visit end_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Visit, vg.Vg.Visit.Builder, vg.Vg.VisitOrBuilder> endBuilder_;
      /**
       * <pre>
       * points *OUT OF* the snarl
       * </pre>
       *
       * <code>.vg.Visit end = 3;</code>
       */
      public boolean hasEnd() {
        return endBuilder_ != null || end_ != null;
      }
      /**
       * <pre>
       * points *OUT OF* the snarl
       * </pre>
       *
       * <code>.vg.Visit end = 3;</code>
       */
      public vg.Vg.Visit getEnd() {
        if (endBuilder_ == null) {
          return end_ == null ? vg.Vg.Visit.getDefaultInstance() : end_;
        } else {
          return endBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * points *OUT OF* the snarl
       * </pre>
       *
       * <code>.vg.Visit end = 3;</code>
       */
      public Builder setEnd(vg.Vg.Visit value) {
        if (endBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          end_ = value;
          onChanged();
        } else {
          endBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * points *OUT OF* the snarl
       * </pre>
       *
       * <code>.vg.Visit end = 3;</code>
       */
      public Builder setEnd(
          vg.Vg.Visit.Builder builderForValue) {
        if (endBuilder_ == null) {
          end_ = builderForValue.build();
          onChanged();
        } else {
          endBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * points *OUT OF* the snarl
       * </pre>
       *
       * <code>.vg.Visit end = 3;</code>
       */
      public Builder mergeEnd(vg.Vg.Visit value) {
        if (endBuilder_ == null) {
          if (end_ != null) {
            end_ =
              vg.Vg.Visit.newBuilder(end_).mergeFrom(value).buildPartial();
          } else {
            end_ = value;
          }
          onChanged();
        } else {
          endBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * points *OUT OF* the snarl
       * </pre>
       *
       * <code>.vg.Visit end = 3;</code>
       */
      public Builder clearEnd() {
        if (endBuilder_ == null) {
          end_ = null;
          onChanged();
        } else {
          end_ = null;
          endBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * points *OUT OF* the snarl
       * </pre>
       *
       * <code>.vg.Visit end = 3;</code>
       */
      public vg.Vg.Visit.Builder getEndBuilder() {
        
        onChanged();
        return getEndFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * points *OUT OF* the snarl
       * </pre>
       *
       * <code>.vg.Visit end = 3;</code>
       */
      public vg.Vg.VisitOrBuilder getEndOrBuilder() {
        if (endBuilder_ != null) {
          return endBuilder_.getMessageOrBuilder();
        } else {
          return end_ == null ?
              vg.Vg.Visit.getDefaultInstance() : end_;
        }
      }
      /**
       * <pre>
       * points *OUT OF* the snarl
       * </pre>
       *
       * <code>.vg.Visit end = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Visit, vg.Vg.Visit.Builder, vg.Vg.VisitOrBuilder> 
          getEndFieldBuilder() {
        if (endBuilder_ == null) {
          endBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Visit, vg.Vg.Visit.Builder, vg.Vg.VisitOrBuilder>(
                  getEnd(),
                  getParentForChildren(),
                  isClean());
          end_ = null;
        }
        return endBuilder_;
      }

      private vg.Vg.Snarl parent_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Snarl, vg.Vg.Snarl.Builder, vg.Vg.SnarlOrBuilder> parentBuilder_;
      /**
       * <pre>
       * If this Snarl is nested in another, this field should be filled in with a Snarl
       * that has the start and end visits filled in (other information is optional/extraneous)
       * </pre>
       *
       * <code>.vg.Snarl parent = 4;</code>
       */
      public boolean hasParent() {
        return parentBuilder_ != null || parent_ != null;
      }
      /**
       * <pre>
       * If this Snarl is nested in another, this field should be filled in with a Snarl
       * that has the start and end visits filled in (other information is optional/extraneous)
       * </pre>
       *
       * <code>.vg.Snarl parent = 4;</code>
       */
      public vg.Vg.Snarl getParent() {
        if (parentBuilder_ == null) {
          return parent_ == null ? vg.Vg.Snarl.getDefaultInstance() : parent_;
        } else {
          return parentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If this Snarl is nested in another, this field should be filled in with a Snarl
       * that has the start and end visits filled in (other information is optional/extraneous)
       * </pre>
       *
       * <code>.vg.Snarl parent = 4;</code>
       */
      public Builder setParent(vg.Vg.Snarl value) {
        if (parentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parent_ = value;
          onChanged();
        } else {
          parentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * If this Snarl is nested in another, this field should be filled in with a Snarl
       * that has the start and end visits filled in (other information is optional/extraneous)
       * </pre>
       *
       * <code>.vg.Snarl parent = 4;</code>
       */
      public Builder setParent(
          vg.Vg.Snarl.Builder builderForValue) {
        if (parentBuilder_ == null) {
          parent_ = builderForValue.build();
          onChanged();
        } else {
          parentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * If this Snarl is nested in another, this field should be filled in with a Snarl
       * that has the start and end visits filled in (other information is optional/extraneous)
       * </pre>
       *
       * <code>.vg.Snarl parent = 4;</code>
       */
      public Builder mergeParent(vg.Vg.Snarl value) {
        if (parentBuilder_ == null) {
          if (parent_ != null) {
            parent_ =
              vg.Vg.Snarl.newBuilder(parent_).mergeFrom(value).buildPartial();
          } else {
            parent_ = value;
          }
          onChanged();
        } else {
          parentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * If this Snarl is nested in another, this field should be filled in with a Snarl
       * that has the start and end visits filled in (other information is optional/extraneous)
       * </pre>
       *
       * <code>.vg.Snarl parent = 4;</code>
       */
      public Builder clearParent() {
        if (parentBuilder_ == null) {
          parent_ = null;
          onChanged();
        } else {
          parent_ = null;
          parentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * If this Snarl is nested in another, this field should be filled in with a Snarl
       * that has the start and end visits filled in (other information is optional/extraneous)
       * </pre>
       *
       * <code>.vg.Snarl parent = 4;</code>
       */
      public vg.Vg.Snarl.Builder getParentBuilder() {
        
        onChanged();
        return getParentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If this Snarl is nested in another, this field should be filled in with a Snarl
       * that has the start and end visits filled in (other information is optional/extraneous)
       * </pre>
       *
       * <code>.vg.Snarl parent = 4;</code>
       */
      public vg.Vg.SnarlOrBuilder getParentOrBuilder() {
        if (parentBuilder_ != null) {
          return parentBuilder_.getMessageOrBuilder();
        } else {
          return parent_ == null ?
              vg.Vg.Snarl.getDefaultInstance() : parent_;
        }
      }
      /**
       * <pre>
       * If this Snarl is nested in another, this field should be filled in with a Snarl
       * that has the start and end visits filled in (other information is optional/extraneous)
       * </pre>
       *
       * <code>.vg.Snarl parent = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Snarl, vg.Vg.Snarl.Builder, vg.Vg.SnarlOrBuilder> 
          getParentFieldBuilder() {
        if (parentBuilder_ == null) {
          parentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Snarl, vg.Vg.Snarl.Builder, vg.Vg.SnarlOrBuilder>(
                  getParent(),
                  getParentForChildren(),
                  isClean());
          parent_ = null;
        }
        return parentBuilder_;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Allows snarls to be named, e.g. by the hash of the VCF variant they come from.
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Allows snarls to be named, e.g. by the hash of the VCF variant they come from.
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Allows snarls to be named, e.g. by the hash of the VCF variant they come from.
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allows snarls to be named, e.g. by the hash of the VCF variant they come from.
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allows snarls to be named, e.g. by the hash of the VCF variant they come from.
       * </pre>
       *
       * <code>string name = 5;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private boolean startSelfReachable_ ;
      /**
       * <pre>
       * Indicate whether there is a reversing path contained in the Snarl from either the
       * start to itself or the end to itself
       * </pre>
       *
       * <code>bool start_self_reachable = 6;</code>
       */
      public boolean getStartSelfReachable() {
        return startSelfReachable_;
      }
      /**
       * <pre>
       * Indicate whether there is a reversing path contained in the Snarl from either the
       * start to itself or the end to itself
       * </pre>
       *
       * <code>bool start_self_reachable = 6;</code>
       */
      public Builder setStartSelfReachable(boolean value) {
        
        startSelfReachable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicate whether there is a reversing path contained in the Snarl from either the
       * start to itself or the end to itself
       * </pre>
       *
       * <code>bool start_self_reachable = 6;</code>
       */
      public Builder clearStartSelfReachable() {
        
        startSelfReachable_ = false;
        onChanged();
        return this;
      }

      private boolean endSelfReachable_ ;
      /**
       * <code>bool end_self_reachable = 7;</code>
       */
      public boolean getEndSelfReachable() {
        return endSelfReachable_;
      }
      /**
       * <code>bool end_self_reachable = 7;</code>
       */
      public Builder setEndSelfReachable(boolean value) {
        
        endSelfReachable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool end_self_reachable = 7;</code>
       */
      public Builder clearEndSelfReachable() {
        
        endSelfReachable_ = false;
        onChanged();
        return this;
      }

      private boolean startEndReachable_ ;
      /**
       * <pre>
       * Indicate whether the start of the Snarl is connected through to the end.
       * </pre>
       *
       * <code>bool start_end_reachable = 8;</code>
       */
      public boolean getStartEndReachable() {
        return startEndReachable_;
      }
      /**
       * <pre>
       * Indicate whether the start of the Snarl is connected through to the end.
       * </pre>
       *
       * <code>bool start_end_reachable = 8;</code>
       */
      public Builder setStartEndReachable(boolean value) {
        
        startEndReachable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicate whether the start of the Snarl is connected through to the end.
       * </pre>
       *
       * <code>bool start_end_reachable = 8;</code>
       */
      public Builder clearStartEndReachable() {
        
        startEndReachable_ = false;
        onChanged();
        return this;
      }

      private boolean directedAcyclicNetGraph_ ;
      /**
       * <pre>
       * Indicate whether the snarl's net graph is free of directed cycles
       * </pre>
       *
       * <code>bool directed_acyclic_net_graph = 9;</code>
       */
      public boolean getDirectedAcyclicNetGraph() {
        return directedAcyclicNetGraph_;
      }
      /**
       * <pre>
       * Indicate whether the snarl's net graph is free of directed cycles
       * </pre>
       *
       * <code>bool directed_acyclic_net_graph = 9;</code>
       */
      public Builder setDirectedAcyclicNetGraph(boolean value) {
        
        directedAcyclicNetGraph_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicate whether the snarl's net graph is free of directed cycles
       * </pre>
       *
       * <code>bool directed_acyclic_net_graph = 9;</code>
       */
      public Builder clearDirectedAcyclicNetGraph() {
        
        directedAcyclicNetGraph_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Snarl)
    }

    // @@protoc_insertion_point(class_scope:vg.Snarl)
    private static final vg.Vg.Snarl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Snarl();
    }

    public static vg.Vg.Snarl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Snarl>
        PARSER = new com.google.protobuf.AbstractParser<Snarl>() {
      public Snarl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Snarl(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Snarl> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Snarl> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Snarl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VisitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Visit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The node ID or snarl of this step (only one should be given)
     * </pre>
     *
     * <code>int64 node_id = 1;</code>
     */
    long getNodeId();

    /**
     * <pre>
     * only needs to contain the start and end Visits
     * </pre>
     *
     * <code>.vg.Snarl snarl = 2;</code>
     */
    boolean hasSnarl();
    /**
     * <pre>
     * only needs to contain the start and end Visits
     * </pre>
     *
     * <code>.vg.Snarl snarl = 2;</code>
     */
    vg.Vg.Snarl getSnarl();
    /**
     * <pre>
     * only needs to contain the start and end Visits
     * </pre>
     *
     * <code>.vg.Snarl snarl = 2;</code>
     */
    vg.Vg.SnarlOrBuilder getSnarlOrBuilder();

    /**
     * <pre>
     * Indicates:
     *   if node_id is specified     reverse complement of node
     *   if snarl is specified       traversal of a child snarl entering backwards through
     *                               end and leaving backwards through start
     * </pre>
     *
     * <code>bool backward = 3;</code>
     */
    boolean getBackward();
  }
  /**
   * <pre>
   * Describes a step of a walk through a Snarl either on a node or through a child Snarl
   * </pre>
   *
   * Protobuf type {@code vg.Visit}
   */
  public  static final class Visit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Visit)
      VisitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Visit.newBuilder() to construct.
    private Visit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Visit() {
      nodeId_ = 0L;
      backward_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Visit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nodeId_ = input.readInt64();
              break;
            }
            case 18: {
              vg.Vg.Snarl.Builder subBuilder = null;
              if (snarl_ != null) {
                subBuilder = snarl_.toBuilder();
              }
              snarl_ = input.readMessage(vg.Vg.Snarl.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(snarl_);
                snarl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              backward_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Visit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Visit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Visit.class, vg.Vg.Visit.Builder.class);
    }

    public static final int NODE_ID_FIELD_NUMBER = 1;
    private long nodeId_;
    /**
     * <pre>
     * The node ID or snarl of this step (only one should be given)
     * </pre>
     *
     * <code>int64 node_id = 1;</code>
     */
    public long getNodeId() {
      return nodeId_;
    }

    public static final int SNARL_FIELD_NUMBER = 2;
    private vg.Vg.Snarl snarl_;
    /**
     * <pre>
     * only needs to contain the start and end Visits
     * </pre>
     *
     * <code>.vg.Snarl snarl = 2;</code>
     */
    public boolean hasSnarl() {
      return snarl_ != null;
    }
    /**
     * <pre>
     * only needs to contain the start and end Visits
     * </pre>
     *
     * <code>.vg.Snarl snarl = 2;</code>
     */
    public vg.Vg.Snarl getSnarl() {
      return snarl_ == null ? vg.Vg.Snarl.getDefaultInstance() : snarl_;
    }
    /**
     * <pre>
     * only needs to contain the start and end Visits
     * </pre>
     *
     * <code>.vg.Snarl snarl = 2;</code>
     */
    public vg.Vg.SnarlOrBuilder getSnarlOrBuilder() {
      return getSnarl();
    }

    public static final int BACKWARD_FIELD_NUMBER = 3;
    private boolean backward_;
    /**
     * <pre>
     * Indicates:
     *   if node_id is specified     reverse complement of node
     *   if snarl is specified       traversal of a child snarl entering backwards through
     *                               end and leaving backwards through start
     * </pre>
     *
     * <code>bool backward = 3;</code>
     */
    public boolean getBackward() {
      return backward_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeId_ != 0L) {
        output.writeInt64(1, nodeId_);
      }
      if (snarl_ != null) {
        output.writeMessage(2, getSnarl());
      }
      if (backward_ != false) {
        output.writeBool(3, backward_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, nodeId_);
      }
      if (snarl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSnarl());
      }
      if (backward_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, backward_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Visit)) {
        return super.equals(obj);
      }
      vg.Vg.Visit other = (vg.Vg.Visit) obj;

      boolean result = true;
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && (hasSnarl() == other.hasSnarl());
      if (hasSnarl()) {
        result = result && getSnarl()
            .equals(other.getSnarl());
      }
      result = result && (getBackward()
          == other.getBackward());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNodeId());
      if (hasSnarl()) {
        hash = (37 * hash) + SNARL_FIELD_NUMBER;
        hash = (53 * hash) + getSnarl().hashCode();
      }
      hash = (37 * hash) + BACKWARD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBackward());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Visit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Visit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Visit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Visit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Visit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Visit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Visit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Visit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Visit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Visit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Visit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Visit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Visit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a step of a walk through a Snarl either on a node or through a child Snarl
     * </pre>
     *
     * Protobuf type {@code vg.Visit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Visit)
        vg.Vg.VisitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Visit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Visit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Visit.class, vg.Vg.Visit.Builder.class);
      }

      // Construct using vg.Vg.Visit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = 0L;

        if (snarlBuilder_ == null) {
          snarl_ = null;
        } else {
          snarl_ = null;
          snarlBuilder_ = null;
        }
        backward_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Visit_descriptor;
      }

      public vg.Vg.Visit getDefaultInstanceForType() {
        return vg.Vg.Visit.getDefaultInstance();
      }

      public vg.Vg.Visit build() {
        vg.Vg.Visit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Visit buildPartial() {
        vg.Vg.Visit result = new vg.Vg.Visit(this);
        result.nodeId_ = nodeId_;
        if (snarlBuilder_ == null) {
          result.snarl_ = snarl_;
        } else {
          result.snarl_ = snarlBuilder_.build();
        }
        result.backward_ = backward_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Visit) {
          return mergeFrom((vg.Vg.Visit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Visit other) {
        if (other == vg.Vg.Visit.getDefaultInstance()) return this;
        if (other.getNodeId() != 0L) {
          setNodeId(other.getNodeId());
        }
        if (other.hasSnarl()) {
          mergeSnarl(other.getSnarl());
        }
        if (other.getBackward() != false) {
          setBackward(other.getBackward());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Visit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Visit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long nodeId_ ;
      /**
       * <pre>
       * The node ID or snarl of this step (only one should be given)
       * </pre>
       *
       * <code>int64 node_id = 1;</code>
       */
      public long getNodeId() {
        return nodeId_;
      }
      /**
       * <pre>
       * The node ID or snarl of this step (only one should be given)
       * </pre>
       *
       * <code>int64 node_id = 1;</code>
       */
      public Builder setNodeId(long value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The node ID or snarl of this step (only one should be given)
       * </pre>
       *
       * <code>int64 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0L;
        onChanged();
        return this;
      }

      private vg.Vg.Snarl snarl_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Snarl, vg.Vg.Snarl.Builder, vg.Vg.SnarlOrBuilder> snarlBuilder_;
      /**
       * <pre>
       * only needs to contain the start and end Visits
       * </pre>
       *
       * <code>.vg.Snarl snarl = 2;</code>
       */
      public boolean hasSnarl() {
        return snarlBuilder_ != null || snarl_ != null;
      }
      /**
       * <pre>
       * only needs to contain the start and end Visits
       * </pre>
       *
       * <code>.vg.Snarl snarl = 2;</code>
       */
      public vg.Vg.Snarl getSnarl() {
        if (snarlBuilder_ == null) {
          return snarl_ == null ? vg.Vg.Snarl.getDefaultInstance() : snarl_;
        } else {
          return snarlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * only needs to contain the start and end Visits
       * </pre>
       *
       * <code>.vg.Snarl snarl = 2;</code>
       */
      public Builder setSnarl(vg.Vg.Snarl value) {
        if (snarlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          snarl_ = value;
          onChanged();
        } else {
          snarlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * only needs to contain the start and end Visits
       * </pre>
       *
       * <code>.vg.Snarl snarl = 2;</code>
       */
      public Builder setSnarl(
          vg.Vg.Snarl.Builder builderForValue) {
        if (snarlBuilder_ == null) {
          snarl_ = builderForValue.build();
          onChanged();
        } else {
          snarlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * only needs to contain the start and end Visits
       * </pre>
       *
       * <code>.vg.Snarl snarl = 2;</code>
       */
      public Builder mergeSnarl(vg.Vg.Snarl value) {
        if (snarlBuilder_ == null) {
          if (snarl_ != null) {
            snarl_ =
              vg.Vg.Snarl.newBuilder(snarl_).mergeFrom(value).buildPartial();
          } else {
            snarl_ = value;
          }
          onChanged();
        } else {
          snarlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * only needs to contain the start and end Visits
       * </pre>
       *
       * <code>.vg.Snarl snarl = 2;</code>
       */
      public Builder clearSnarl() {
        if (snarlBuilder_ == null) {
          snarl_ = null;
          onChanged();
        } else {
          snarl_ = null;
          snarlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * only needs to contain the start and end Visits
       * </pre>
       *
       * <code>.vg.Snarl snarl = 2;</code>
       */
      public vg.Vg.Snarl.Builder getSnarlBuilder() {
        
        onChanged();
        return getSnarlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * only needs to contain the start and end Visits
       * </pre>
       *
       * <code>.vg.Snarl snarl = 2;</code>
       */
      public vg.Vg.SnarlOrBuilder getSnarlOrBuilder() {
        if (snarlBuilder_ != null) {
          return snarlBuilder_.getMessageOrBuilder();
        } else {
          return snarl_ == null ?
              vg.Vg.Snarl.getDefaultInstance() : snarl_;
        }
      }
      /**
       * <pre>
       * only needs to contain the start and end Visits
       * </pre>
       *
       * <code>.vg.Snarl snarl = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Snarl, vg.Vg.Snarl.Builder, vg.Vg.SnarlOrBuilder> 
          getSnarlFieldBuilder() {
        if (snarlBuilder_ == null) {
          snarlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Snarl, vg.Vg.Snarl.Builder, vg.Vg.SnarlOrBuilder>(
                  getSnarl(),
                  getParentForChildren(),
                  isClean());
          snarl_ = null;
        }
        return snarlBuilder_;
      }

      private boolean backward_ ;
      /**
       * <pre>
       * Indicates:
       *   if node_id is specified     reverse complement of node
       *   if snarl is specified       traversal of a child snarl entering backwards through
       *                               end and leaving backwards through start
       * </pre>
       *
       * <code>bool backward = 3;</code>
       */
      public boolean getBackward() {
        return backward_;
      }
      /**
       * <pre>
       * Indicates:
       *   if node_id is specified     reverse complement of node
       *   if snarl is specified       traversal of a child snarl entering backwards through
       *                               end and leaving backwards through start
       * </pre>
       *
       * <code>bool backward = 3;</code>
       */
      public Builder setBackward(boolean value) {
        
        backward_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates:
       *   if node_id is specified     reverse complement of node
       *   if snarl is specified       traversal of a child snarl entering backwards through
       *                               end and leaving backwards through start
       * </pre>
       *
       * <code>bool backward = 3;</code>
       */
      public Builder clearBackward() {
        
        backward_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Visit)
    }

    // @@protoc_insertion_point(class_scope:vg.Visit)
    private static final vg.Vg.Visit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Visit();
    }

    public static vg.Vg.Visit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Visit>
        PARSER = new com.google.protobuf.AbstractParser<Visit>() {
      public Visit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Visit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Visit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Visit> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Visit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SnarlTraversalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.SnarlTraversal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    java.util.List<vg.Vg.Visit> 
        getVisitList();
    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    vg.Vg.Visit getVisit(int index);
    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    int getVisitCount();
    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    java.util.List<? extends vg.Vg.VisitOrBuilder> 
        getVisitOrBuilderList();
    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    vg.Vg.VisitOrBuilder getVisitOrBuilder(
        int index);

    /**
     * <pre>
     * The name of the traversal can be used for a variant allele id (e.g. &lt;parentSnarlHash&gt;_0, &lt;parentSnarlHash&gt;_1...
     * or by some other arbitrary annotation , unique or non-unique, e.g. deleteterious, gain_of_function, etc., though these
     * will be lost in any indices).
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the traversal can be used for a variant allele id (e.g. &lt;parentSnarlHash&gt;_0, &lt;parentSnarlHash&gt;_1...
     * or by some other arbitrary annotation , unique or non-unique, e.g. deleteterious, gain_of_function, etc., though these
     * will be lost in any indices).
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * <pre>
   * Describes a walk through a Snarl where each step is given as either a node or
   * a child Snarl (leaving the walk through the child Snarl to another SnarlTraversal)
   * </pre>
   *
   * Protobuf type {@code vg.SnarlTraversal}
   */
  public  static final class SnarlTraversal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.SnarlTraversal)
      SnarlTraversalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SnarlTraversal.newBuilder() to construct.
    private SnarlTraversal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SnarlTraversal() {
      visit_ = java.util.Collections.emptyList();
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SnarlTraversal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                visit_ = new java.util.ArrayList<vg.Vg.Visit>();
                mutable_bitField0_ |= 0x00000001;
              }
              visit_.add(
                  input.readMessage(vg.Vg.Visit.parser(), extensionRegistry));
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          visit_ = java.util.Collections.unmodifiableList(visit_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_SnarlTraversal_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_SnarlTraversal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.SnarlTraversal.class, vg.Vg.SnarlTraversal.Builder.class);
    }

    private int bitField0_;
    public static final int VISIT_FIELD_NUMBER = 1;
    private java.util.List<vg.Vg.Visit> visit_;
    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    public java.util.List<vg.Vg.Visit> getVisitList() {
      return visit_;
    }
    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    public java.util.List<? extends vg.Vg.VisitOrBuilder> 
        getVisitOrBuilderList() {
      return visit_;
    }
    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    public int getVisitCount() {
      return visit_.size();
    }
    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    public vg.Vg.Visit getVisit(int index) {
      return visit_.get(index);
    }
    /**
     * <pre>
     * Steps of the walk through a Snarl, including the start and end nodes. If the 
     * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
     * and the node leaving the Snarl should be included in the traversal.
     * </pre>
     *
     * <code>repeated .vg.Visit visit = 1;</code>
     */
    public vg.Vg.VisitOrBuilder getVisitOrBuilder(
        int index) {
      return visit_.get(index);
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the traversal can be used for a variant allele id (e.g. &lt;parentSnarlHash&gt;_0, &lt;parentSnarlHash&gt;_1...
     * or by some other arbitrary annotation , unique or non-unique, e.g. deleteterious, gain_of_function, etc., though these
     * will be lost in any indices).
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the traversal can be used for a variant allele id (e.g. &lt;parentSnarlHash&gt;_0, &lt;parentSnarlHash&gt;_1...
     * or by some other arbitrary annotation , unique or non-unique, e.g. deleteterious, gain_of_function, etc., though these
     * will be lost in any indices).
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < visit_.size(); i++) {
        output.writeMessage(1, visit_.get(i));
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < visit_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, visit_.get(i));
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.SnarlTraversal)) {
        return super.equals(obj);
      }
      vg.Vg.SnarlTraversal other = (vg.Vg.SnarlTraversal) obj;

      boolean result = true;
      result = result && getVisitList()
          .equals(other.getVisitList());
      result = result && getName()
          .equals(other.getName());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVisitCount() > 0) {
        hash = (37 * hash) + VISIT_FIELD_NUMBER;
        hash = (53 * hash) + getVisitList().hashCode();
      }
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.SnarlTraversal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.SnarlTraversal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.SnarlTraversal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.SnarlTraversal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.SnarlTraversal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.SnarlTraversal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.SnarlTraversal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.SnarlTraversal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.SnarlTraversal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.SnarlTraversal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.SnarlTraversal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.SnarlTraversal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.SnarlTraversal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a walk through a Snarl where each step is given as either a node or
     * a child Snarl (leaving the walk through the child Snarl to another SnarlTraversal)
     * </pre>
     *
     * Protobuf type {@code vg.SnarlTraversal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.SnarlTraversal)
        vg.Vg.SnarlTraversalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_SnarlTraversal_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_SnarlTraversal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.SnarlTraversal.class, vg.Vg.SnarlTraversal.Builder.class);
      }

      // Construct using vg.Vg.SnarlTraversal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVisitFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (visitBuilder_ == null) {
          visit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          visitBuilder_.clear();
        }
        name_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_SnarlTraversal_descriptor;
      }

      public vg.Vg.SnarlTraversal getDefaultInstanceForType() {
        return vg.Vg.SnarlTraversal.getDefaultInstance();
      }

      public vg.Vg.SnarlTraversal build() {
        vg.Vg.SnarlTraversal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.SnarlTraversal buildPartial() {
        vg.Vg.SnarlTraversal result = new vg.Vg.SnarlTraversal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (visitBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            visit_ = java.util.Collections.unmodifiableList(visit_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.visit_ = visit_;
        } else {
          result.visit_ = visitBuilder_.build();
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.SnarlTraversal) {
          return mergeFrom((vg.Vg.SnarlTraversal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.SnarlTraversal other) {
        if (other == vg.Vg.SnarlTraversal.getDefaultInstance()) return this;
        if (visitBuilder_ == null) {
          if (!other.visit_.isEmpty()) {
            if (visit_.isEmpty()) {
              visit_ = other.visit_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVisitIsMutable();
              visit_.addAll(other.visit_);
            }
            onChanged();
          }
        } else {
          if (!other.visit_.isEmpty()) {
            if (visitBuilder_.isEmpty()) {
              visitBuilder_.dispose();
              visitBuilder_ = null;
              visit_ = other.visit_;
              bitField0_ = (bitField0_ & ~0x00000001);
              visitBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVisitFieldBuilder() : null;
            } else {
              visitBuilder_.addAllMessages(other.visit_);
            }
          }
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.SnarlTraversal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.SnarlTraversal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<vg.Vg.Visit> visit_ =
        java.util.Collections.emptyList();
      private void ensureVisitIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          visit_ = new java.util.ArrayList<vg.Vg.Visit>(visit_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Visit, vg.Vg.Visit.Builder, vg.Vg.VisitOrBuilder> visitBuilder_;

      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public java.util.List<vg.Vg.Visit> getVisitList() {
        if (visitBuilder_ == null) {
          return java.util.Collections.unmodifiableList(visit_);
        } else {
          return visitBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public int getVisitCount() {
        if (visitBuilder_ == null) {
          return visit_.size();
        } else {
          return visitBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public vg.Vg.Visit getVisit(int index) {
        if (visitBuilder_ == null) {
          return visit_.get(index);
        } else {
          return visitBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public Builder setVisit(
          int index, vg.Vg.Visit value) {
        if (visitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVisitIsMutable();
          visit_.set(index, value);
          onChanged();
        } else {
          visitBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public Builder setVisit(
          int index, vg.Vg.Visit.Builder builderForValue) {
        if (visitBuilder_ == null) {
          ensureVisitIsMutable();
          visit_.set(index, builderForValue.build());
          onChanged();
        } else {
          visitBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public Builder addVisit(vg.Vg.Visit value) {
        if (visitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVisitIsMutable();
          visit_.add(value);
          onChanged();
        } else {
          visitBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public Builder addVisit(
          int index, vg.Vg.Visit value) {
        if (visitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVisitIsMutable();
          visit_.add(index, value);
          onChanged();
        } else {
          visitBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public Builder addVisit(
          vg.Vg.Visit.Builder builderForValue) {
        if (visitBuilder_ == null) {
          ensureVisitIsMutable();
          visit_.add(builderForValue.build());
          onChanged();
        } else {
          visitBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public Builder addVisit(
          int index, vg.Vg.Visit.Builder builderForValue) {
        if (visitBuilder_ == null) {
          ensureVisitIsMutable();
          visit_.add(index, builderForValue.build());
          onChanged();
        } else {
          visitBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public Builder addAllVisit(
          java.lang.Iterable<? extends vg.Vg.Visit> values) {
        if (visitBuilder_ == null) {
          ensureVisitIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, visit_);
          onChanged();
        } else {
          visitBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public Builder clearVisit() {
        if (visitBuilder_ == null) {
          visit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          visitBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public Builder removeVisit(int index) {
        if (visitBuilder_ == null) {
          ensureVisitIsMutable();
          visit_.remove(index);
          onChanged();
        } else {
          visitBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public vg.Vg.Visit.Builder getVisitBuilder(
          int index) {
        return getVisitFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public vg.Vg.VisitOrBuilder getVisitOrBuilder(
          int index) {
        if (visitBuilder_ == null) {
          return visit_.get(index);  } else {
          return visitBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public java.util.List<? extends vg.Vg.VisitOrBuilder> 
           getVisitOrBuilderList() {
        if (visitBuilder_ != null) {
          return visitBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(visit_);
        }
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public vg.Vg.Visit.Builder addVisitBuilder() {
        return getVisitFieldBuilder().addBuilder(
            vg.Vg.Visit.getDefaultInstance());
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public vg.Vg.Visit.Builder addVisitBuilder(
          int index) {
        return getVisitFieldBuilder().addBuilder(
            index, vg.Vg.Visit.getDefaultInstance());
      }
      /**
       * <pre>
       * Steps of the walk through a Snarl, including the start and end nodes. If the 
       * traversal includes a Visit that represents a Snarl, both the node entering the Snarl
       * and the node leaving the Snarl should be included in the traversal.
       * </pre>
       *
       * <code>repeated .vg.Visit visit = 1;</code>
       */
      public java.util.List<vg.Vg.Visit.Builder> 
           getVisitBuilderList() {
        return getVisitFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Visit, vg.Vg.Visit.Builder, vg.Vg.VisitOrBuilder> 
          getVisitFieldBuilder() {
        if (visitBuilder_ == null) {
          visitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Visit, vg.Vg.Visit.Builder, vg.Vg.VisitOrBuilder>(
                  visit_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          visit_ = null;
        }
        return visitBuilder_;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the traversal can be used for a variant allele id (e.g. &lt;parentSnarlHash&gt;_0, &lt;parentSnarlHash&gt;_1...
       * or by some other arbitrary annotation , unique or non-unique, e.g. deleteterious, gain_of_function, etc., though these
       * will be lost in any indices).
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the traversal can be used for a variant allele id (e.g. &lt;parentSnarlHash&gt;_0, &lt;parentSnarlHash&gt;_1...
       * or by some other arbitrary annotation , unique or non-unique, e.g. deleteterious, gain_of_function, etc., though these
       * will be lost in any indices).
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the traversal can be used for a variant allele id (e.g. &lt;parentSnarlHash&gt;_0, &lt;parentSnarlHash&gt;_1...
       * or by some other arbitrary annotation , unique or non-unique, e.g. deleteterious, gain_of_function, etc., though these
       * will be lost in any indices).
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the traversal can be used for a variant allele id (e.g. &lt;parentSnarlHash&gt;_0, &lt;parentSnarlHash&gt;_1...
       * or by some other arbitrary annotation , unique or non-unique, e.g. deleteterious, gain_of_function, etc., though these
       * will be lost in any indices).
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the traversal can be used for a variant allele id (e.g. &lt;parentSnarlHash&gt;_0, &lt;parentSnarlHash&gt;_1...
       * or by some other arbitrary annotation , unique or non-unique, e.g. deleteterious, gain_of_function, etc., though these
       * will be lost in any indices).
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.SnarlTraversal)
    }

    // @@protoc_insertion_point(class_scope:vg.SnarlTraversal)
    private static final vg.Vg.SnarlTraversal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.SnarlTraversal();
    }

    public static vg.Vg.SnarlTraversal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SnarlTraversal>
        PARSER = new com.google.protobuf.AbstractParser<SnarlTraversal>() {
      public SnarlTraversal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SnarlTraversal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SnarlTraversal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SnarlTraversal> getParserForType() {
      return PARSER;
    }

    public vg.Vg.SnarlTraversal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LocusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Locus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A locus may have an identifying name.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * A locus may have an identifying name.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    java.util.List<vg.Vg.Path> 
        getAlleleList();
    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    vg.Vg.Path getAllele(int index);
    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    int getAlleleCount();
    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    java.util.List<? extends vg.Vg.PathOrBuilder> 
        getAlleleOrBuilderList();
    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    vg.Vg.PathOrBuilder getAlleleOrBuilder(
        int index);

    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    java.util.List<vg.Vg.Support> 
        getSupportList();
    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    vg.Vg.Support getSupport(int index);
    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    int getSupportCount();
    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    java.util.List<? extends vg.Vg.SupportOrBuilder> 
        getSupportOrBuilderList();
    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    vg.Vg.SupportOrBuilder getSupportOrBuilder(
        int index);

    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    java.util.List<vg.Vg.Genotype> 
        getGenotypeList();
    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    vg.Vg.Genotype getGenotype(int index);
    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    int getGenotypeCount();
    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    java.util.List<? extends vg.Vg.GenotypeOrBuilder> 
        getGenotypeOrBuilderList();
    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    vg.Vg.GenotypeOrBuilder getGenotypeOrBuilder(
        int index);

    /**
     * <pre>
     * We also have a Support for the locus overall, because reads may have
     * supported multiple alleles and we want to know how many total there were.
     * </pre>
     *
     * <code>.vg.Support overall_support = 5;</code>
     */
    boolean hasOverallSupport();
    /**
     * <pre>
     * We also have a Support for the locus overall, because reads may have
     * supported multiple alleles and we want to know how many total there were.
     * </pre>
     *
     * <code>.vg.Support overall_support = 5;</code>
     */
    vg.Vg.Support getOverallSupport();
    /**
     * <pre>
     * We also have a Support for the locus overall, because reads may have
     * supported multiple alleles and we want to know how many total there were.
     * </pre>
     *
     * <code>.vg.Support overall_support = 5;</code>
     */
    vg.Vg.SupportOrBuilder getOverallSupportOrBuilder();

    /**
     * <pre>
     * We track the likelihood of each allele individually, in addition to
     * genotype likelihoods. Stores the likelihood natural logged.
     * </pre>
     *
     * <code>repeated double allele_log_likelihood = 6;</code>
     */
    java.util.List<java.lang.Double> getAlleleLogLikelihoodList();
    /**
     * <pre>
     * We track the likelihood of each allele individually, in addition to
     * genotype likelihoods. Stores the likelihood natural logged.
     * </pre>
     *
     * <code>repeated double allele_log_likelihood = 6;</code>
     */
    int getAlleleLogLikelihoodCount();
    /**
     * <pre>
     * We track the likelihood of each allele individually, in addition to
     * genotype likelihoods. Stores the likelihood natural logged.
     * </pre>
     *
     * <code>repeated double allele_log_likelihood = 6;</code>
     */
    double getAlleleLogLikelihood(int index);
  }
  /**
   * <pre>
   * Describes a genetic locus with multiple possible alleles, a genotype, and observational support.
   * </pre>
   *
   * Protobuf type {@code vg.Locus}
   */
  public  static final class Locus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Locus)
      LocusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Locus.newBuilder() to construct.
    private Locus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Locus() {
      name_ = "";
      allele_ = java.util.Collections.emptyList();
      support_ = java.util.Collections.emptyList();
      genotype_ = java.util.Collections.emptyList();
      alleleLogLikelihood_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Locus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                allele_ = new java.util.ArrayList<vg.Vg.Path>();
                mutable_bitField0_ |= 0x00000002;
              }
              allele_.add(
                  input.readMessage(vg.Vg.Path.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                support_ = new java.util.ArrayList<vg.Vg.Support>();
                mutable_bitField0_ |= 0x00000004;
              }
              support_.add(
                  input.readMessage(vg.Vg.Support.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                genotype_ = new java.util.ArrayList<vg.Vg.Genotype>();
                mutable_bitField0_ |= 0x00000008;
              }
              genotype_.add(
                  input.readMessage(vg.Vg.Genotype.parser(), extensionRegistry));
              break;
            }
            case 42: {
              vg.Vg.Support.Builder subBuilder = null;
              if (overallSupport_ != null) {
                subBuilder = overallSupport_.toBuilder();
              }
              overallSupport_ = input.readMessage(vg.Vg.Support.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(overallSupport_);
                overallSupport_ = subBuilder.buildPartial();
              }

              break;
            }
            case 49: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                alleleLogLikelihood_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000020;
              }
              alleleLogLikelihood_.add(input.readDouble());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                alleleLogLikelihood_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                alleleLogLikelihood_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          allele_ = java.util.Collections.unmodifiableList(allele_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          support_ = java.util.Collections.unmodifiableList(support_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          genotype_ = java.util.Collections.unmodifiableList(genotype_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          alleleLogLikelihood_ = java.util.Collections.unmodifiableList(alleleLogLikelihood_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Locus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Locus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Locus.class, vg.Vg.Locus.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * A locus may have an identifying name.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A locus may have an identifying name.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALLELE_FIELD_NUMBER = 2;
    private java.util.List<vg.Vg.Path> allele_;
    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    public java.util.List<vg.Vg.Path> getAlleleList() {
      return allele_;
    }
    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    public java.util.List<? extends vg.Vg.PathOrBuilder> 
        getAlleleOrBuilderList() {
      return allele_;
    }
    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    public int getAlleleCount() {
      return allele_.size();
    }
    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    public vg.Vg.Path getAllele(int index) {
      return allele_.get(index);
    }
    /**
     * <pre>
     * These are all the alleles at the locus, not just the called ones.
     * Note that a primary reference allele may or may not appear.
     * </pre>
     *
     * <code>repeated .vg.Path allele = 2;</code>
     */
    public vg.Vg.PathOrBuilder getAlleleOrBuilder(
        int index) {
      return allele_.get(index);
    }

    public static final int SUPPORT_FIELD_NUMBER = 3;
    private java.util.List<vg.Vg.Support> support_;
    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    public java.util.List<vg.Vg.Support> getSupportList() {
      return support_;
    }
    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    public java.util.List<? extends vg.Vg.SupportOrBuilder> 
        getSupportOrBuilderList() {
      return support_;
    }
    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    public int getSupportCount() {
      return support_.size();
    }
    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    public vg.Vg.Support getSupport(int index) {
      return support_.get(index);
    }
    /**
     * <pre>
     * These supports are per-allele, matching the alleles above
     * </pre>
     *
     * <code>repeated .vg.Support support = 3;</code>
     */
    public vg.Vg.SupportOrBuilder getSupportOrBuilder(
        int index) {
      return support_.get(index);
    }

    public static final int GENOTYPE_FIELD_NUMBER = 4;
    private java.util.List<vg.Vg.Genotype> genotype_;
    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    public java.util.List<vg.Vg.Genotype> getGenotypeList() {
      return genotype_;
    }
    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    public java.util.List<? extends vg.Vg.GenotypeOrBuilder> 
        getGenotypeOrBuilderList() {
      return genotype_;
    }
    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    public int getGenotypeCount() {
      return genotype_.size();
    }
    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    public vg.Vg.Genotype getGenotype(int index) {
      return genotype_.get(index);
    }
    /**
     * <pre>
     * sorted by likelihood or posterior
     *  the first one is the "call"
     * </pre>
     *
     * <code>repeated .vg.Genotype genotype = 4;</code>
     */
    public vg.Vg.GenotypeOrBuilder getGenotypeOrBuilder(
        int index) {
      return genotype_.get(index);
    }

    public static final int OVERALL_SUPPORT_FIELD_NUMBER = 5;
    private vg.Vg.Support overallSupport_;
    /**
     * <pre>
     * We also have a Support for the locus overall, because reads may have
     * supported multiple alleles and we want to know how many total there were.
     * </pre>
     *
     * <code>.vg.Support overall_support = 5;</code>
     */
    public boolean hasOverallSupport() {
      return overallSupport_ != null;
    }
    /**
     * <pre>
     * We also have a Support for the locus overall, because reads may have
     * supported multiple alleles and we want to know how many total there were.
     * </pre>
     *
     * <code>.vg.Support overall_support = 5;</code>
     */
    public vg.Vg.Support getOverallSupport() {
      return overallSupport_ == null ? vg.Vg.Support.getDefaultInstance() : overallSupport_;
    }
    /**
     * <pre>
     * We also have a Support for the locus overall, because reads may have
     * supported multiple alleles and we want to know how many total there were.
     * </pre>
     *
     * <code>.vg.Support overall_support = 5;</code>
     */
    public vg.Vg.SupportOrBuilder getOverallSupportOrBuilder() {
      return getOverallSupport();
    }

    public static final int ALLELE_LOG_LIKELIHOOD_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Double> alleleLogLikelihood_;
    /**
     * <pre>
     * We track the likelihood of each allele individually, in addition to
     * genotype likelihoods. Stores the likelihood natural logged.
     * </pre>
     *
     * <code>repeated double allele_log_likelihood = 6;</code>
     */
    public java.util.List<java.lang.Double>
        getAlleleLogLikelihoodList() {
      return alleleLogLikelihood_;
    }
    /**
     * <pre>
     * We track the likelihood of each allele individually, in addition to
     * genotype likelihoods. Stores the likelihood natural logged.
     * </pre>
     *
     * <code>repeated double allele_log_likelihood = 6;</code>
     */
    public int getAlleleLogLikelihoodCount() {
      return alleleLogLikelihood_.size();
    }
    /**
     * <pre>
     * We track the likelihood of each allele individually, in addition to
     * genotype likelihoods. Stores the likelihood natural logged.
     * </pre>
     *
     * <code>repeated double allele_log_likelihood = 6;</code>
     */
    public double getAlleleLogLikelihood(int index) {
      return alleleLogLikelihood_.get(index);
    }
    private int alleleLogLikelihoodMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < allele_.size(); i++) {
        output.writeMessage(2, allele_.get(i));
      }
      for (int i = 0; i < support_.size(); i++) {
        output.writeMessage(3, support_.get(i));
      }
      for (int i = 0; i < genotype_.size(); i++) {
        output.writeMessage(4, genotype_.get(i));
      }
      if (overallSupport_ != null) {
        output.writeMessage(5, getOverallSupport());
      }
      if (getAlleleLogLikelihoodList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(alleleLogLikelihoodMemoizedSerializedSize);
      }
      for (int i = 0; i < alleleLogLikelihood_.size(); i++) {
        output.writeDoubleNoTag(alleleLogLikelihood_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (int i = 0; i < allele_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, allele_.get(i));
      }
      for (int i = 0; i < support_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, support_.get(i));
      }
      for (int i = 0; i < genotype_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, genotype_.get(i));
      }
      if (overallSupport_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getOverallSupport());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAlleleLogLikelihoodList().size();
        size += dataSize;
        if (!getAlleleLogLikelihoodList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        alleleLogLikelihoodMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Locus)) {
        return super.equals(obj);
      }
      vg.Vg.Locus other = (vg.Vg.Locus) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getAlleleList()
          .equals(other.getAlleleList());
      result = result && getSupportList()
          .equals(other.getSupportList());
      result = result && getGenotypeList()
          .equals(other.getGenotypeList());
      result = result && (hasOverallSupport() == other.hasOverallSupport());
      if (hasOverallSupport()) {
        result = result && getOverallSupport()
            .equals(other.getOverallSupport());
      }
      result = result && getAlleleLogLikelihoodList()
          .equals(other.getAlleleLogLikelihoodList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getAlleleCount() > 0) {
        hash = (37 * hash) + ALLELE_FIELD_NUMBER;
        hash = (53 * hash) + getAlleleList().hashCode();
      }
      if (getSupportCount() > 0) {
        hash = (37 * hash) + SUPPORT_FIELD_NUMBER;
        hash = (53 * hash) + getSupportList().hashCode();
      }
      if (getGenotypeCount() > 0) {
        hash = (37 * hash) + GENOTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getGenotypeList().hashCode();
      }
      if (hasOverallSupport()) {
        hash = (37 * hash) + OVERALL_SUPPORT_FIELD_NUMBER;
        hash = (53 * hash) + getOverallSupport().hashCode();
      }
      if (getAlleleLogLikelihoodCount() > 0) {
        hash = (37 * hash) + ALLELE_LOG_LIKELIHOOD_FIELD_NUMBER;
        hash = (53 * hash) + getAlleleLogLikelihoodList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Locus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Locus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Locus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Locus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Locus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Locus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Locus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Locus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Locus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Locus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Locus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Locus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Locus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a genetic locus with multiple possible alleles, a genotype, and observational support.
     * </pre>
     *
     * Protobuf type {@code vg.Locus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Locus)
        vg.Vg.LocusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Locus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Locus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Locus.class, vg.Vg.Locus.Builder.class);
      }

      // Construct using vg.Vg.Locus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAlleleFieldBuilder();
          getSupportFieldBuilder();
          getGenotypeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        if (alleleBuilder_ == null) {
          allele_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          alleleBuilder_.clear();
        }
        if (supportBuilder_ == null) {
          support_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          supportBuilder_.clear();
        }
        if (genotypeBuilder_ == null) {
          genotype_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          genotypeBuilder_.clear();
        }
        if (overallSupportBuilder_ == null) {
          overallSupport_ = null;
        } else {
          overallSupport_ = null;
          overallSupportBuilder_ = null;
        }
        alleleLogLikelihood_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Locus_descriptor;
      }

      public vg.Vg.Locus getDefaultInstanceForType() {
        return vg.Vg.Locus.getDefaultInstance();
      }

      public vg.Vg.Locus build() {
        vg.Vg.Locus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Locus buildPartial() {
        vg.Vg.Locus result = new vg.Vg.Locus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (alleleBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            allele_ = java.util.Collections.unmodifiableList(allele_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.allele_ = allele_;
        } else {
          result.allele_ = alleleBuilder_.build();
        }
        if (supportBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            support_ = java.util.Collections.unmodifiableList(support_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.support_ = support_;
        } else {
          result.support_ = supportBuilder_.build();
        }
        if (genotypeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            genotype_ = java.util.Collections.unmodifiableList(genotype_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.genotype_ = genotype_;
        } else {
          result.genotype_ = genotypeBuilder_.build();
        }
        if (overallSupportBuilder_ == null) {
          result.overallSupport_ = overallSupport_;
        } else {
          result.overallSupport_ = overallSupportBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          alleleLogLikelihood_ = java.util.Collections.unmodifiableList(alleleLogLikelihood_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.alleleLogLikelihood_ = alleleLogLikelihood_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Locus) {
          return mergeFrom((vg.Vg.Locus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Locus other) {
        if (other == vg.Vg.Locus.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (alleleBuilder_ == null) {
          if (!other.allele_.isEmpty()) {
            if (allele_.isEmpty()) {
              allele_ = other.allele_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAlleleIsMutable();
              allele_.addAll(other.allele_);
            }
            onChanged();
          }
        } else {
          if (!other.allele_.isEmpty()) {
            if (alleleBuilder_.isEmpty()) {
              alleleBuilder_.dispose();
              alleleBuilder_ = null;
              allele_ = other.allele_;
              bitField0_ = (bitField0_ & ~0x00000002);
              alleleBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAlleleFieldBuilder() : null;
            } else {
              alleleBuilder_.addAllMessages(other.allele_);
            }
          }
        }
        if (supportBuilder_ == null) {
          if (!other.support_.isEmpty()) {
            if (support_.isEmpty()) {
              support_ = other.support_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSupportIsMutable();
              support_.addAll(other.support_);
            }
            onChanged();
          }
        } else {
          if (!other.support_.isEmpty()) {
            if (supportBuilder_.isEmpty()) {
              supportBuilder_.dispose();
              supportBuilder_ = null;
              support_ = other.support_;
              bitField0_ = (bitField0_ & ~0x00000004);
              supportBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSupportFieldBuilder() : null;
            } else {
              supportBuilder_.addAllMessages(other.support_);
            }
          }
        }
        if (genotypeBuilder_ == null) {
          if (!other.genotype_.isEmpty()) {
            if (genotype_.isEmpty()) {
              genotype_ = other.genotype_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGenotypeIsMutable();
              genotype_.addAll(other.genotype_);
            }
            onChanged();
          }
        } else {
          if (!other.genotype_.isEmpty()) {
            if (genotypeBuilder_.isEmpty()) {
              genotypeBuilder_.dispose();
              genotypeBuilder_ = null;
              genotype_ = other.genotype_;
              bitField0_ = (bitField0_ & ~0x00000008);
              genotypeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGenotypeFieldBuilder() : null;
            } else {
              genotypeBuilder_.addAllMessages(other.genotype_);
            }
          }
        }
        if (other.hasOverallSupport()) {
          mergeOverallSupport(other.getOverallSupport());
        }
        if (!other.alleleLogLikelihood_.isEmpty()) {
          if (alleleLogLikelihood_.isEmpty()) {
            alleleLogLikelihood_ = other.alleleLogLikelihood_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureAlleleLogLikelihoodIsMutable();
            alleleLogLikelihood_.addAll(other.alleleLogLikelihood_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Locus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Locus) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A locus may have an identifying name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A locus may have an identifying name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A locus may have an identifying name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A locus may have an identifying name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A locus may have an identifying name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<vg.Vg.Path> allele_ =
        java.util.Collections.emptyList();
      private void ensureAlleleIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          allele_ = new java.util.ArrayList<vg.Vg.Path>(allele_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> alleleBuilder_;

      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public java.util.List<vg.Vg.Path> getAlleleList() {
        if (alleleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allele_);
        } else {
          return alleleBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public int getAlleleCount() {
        if (alleleBuilder_ == null) {
          return allele_.size();
        } else {
          return alleleBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public vg.Vg.Path getAllele(int index) {
        if (alleleBuilder_ == null) {
          return allele_.get(index);
        } else {
          return alleleBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public Builder setAllele(
          int index, vg.Vg.Path value) {
        if (alleleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAlleleIsMutable();
          allele_.set(index, value);
          onChanged();
        } else {
          alleleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public Builder setAllele(
          int index, vg.Vg.Path.Builder builderForValue) {
        if (alleleBuilder_ == null) {
          ensureAlleleIsMutable();
          allele_.set(index, builderForValue.build());
          onChanged();
        } else {
          alleleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public Builder addAllele(vg.Vg.Path value) {
        if (alleleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAlleleIsMutable();
          allele_.add(value);
          onChanged();
        } else {
          alleleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public Builder addAllele(
          int index, vg.Vg.Path value) {
        if (alleleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAlleleIsMutable();
          allele_.add(index, value);
          onChanged();
        } else {
          alleleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public Builder addAllele(
          vg.Vg.Path.Builder builderForValue) {
        if (alleleBuilder_ == null) {
          ensureAlleleIsMutable();
          allele_.add(builderForValue.build());
          onChanged();
        } else {
          alleleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public Builder addAllele(
          int index, vg.Vg.Path.Builder builderForValue) {
        if (alleleBuilder_ == null) {
          ensureAlleleIsMutable();
          allele_.add(index, builderForValue.build());
          onChanged();
        } else {
          alleleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public Builder addAllAllele(
          java.lang.Iterable<? extends vg.Vg.Path> values) {
        if (alleleBuilder_ == null) {
          ensureAlleleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, allele_);
          onChanged();
        } else {
          alleleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public Builder clearAllele() {
        if (alleleBuilder_ == null) {
          allele_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          alleleBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public Builder removeAllele(int index) {
        if (alleleBuilder_ == null) {
          ensureAlleleIsMutable();
          allele_.remove(index);
          onChanged();
        } else {
          alleleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public vg.Vg.Path.Builder getAlleleBuilder(
          int index) {
        return getAlleleFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public vg.Vg.PathOrBuilder getAlleleOrBuilder(
          int index) {
        if (alleleBuilder_ == null) {
          return allele_.get(index);  } else {
          return alleleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public java.util.List<? extends vg.Vg.PathOrBuilder> 
           getAlleleOrBuilderList() {
        if (alleleBuilder_ != null) {
          return alleleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allele_);
        }
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public vg.Vg.Path.Builder addAlleleBuilder() {
        return getAlleleFieldBuilder().addBuilder(
            vg.Vg.Path.getDefaultInstance());
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public vg.Vg.Path.Builder addAlleleBuilder(
          int index) {
        return getAlleleFieldBuilder().addBuilder(
            index, vg.Vg.Path.getDefaultInstance());
      }
      /**
       * <pre>
       * These are all the alleles at the locus, not just the called ones.
       * Note that a primary reference allele may or may not appear.
       * </pre>
       *
       * <code>repeated .vg.Path allele = 2;</code>
       */
      public java.util.List<vg.Vg.Path.Builder> 
           getAlleleBuilderList() {
        return getAlleleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> 
          getAlleleFieldBuilder() {
        if (alleleBuilder_ == null) {
          alleleBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder>(
                  allele_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          allele_ = null;
        }
        return alleleBuilder_;
      }

      private java.util.List<vg.Vg.Support> support_ =
        java.util.Collections.emptyList();
      private void ensureSupportIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          support_ = new java.util.ArrayList<vg.Vg.Support>(support_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Support, vg.Vg.Support.Builder, vg.Vg.SupportOrBuilder> supportBuilder_;

      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public java.util.List<vg.Vg.Support> getSupportList() {
        if (supportBuilder_ == null) {
          return java.util.Collections.unmodifiableList(support_);
        } else {
          return supportBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public int getSupportCount() {
        if (supportBuilder_ == null) {
          return support_.size();
        } else {
          return supportBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public vg.Vg.Support getSupport(int index) {
        if (supportBuilder_ == null) {
          return support_.get(index);
        } else {
          return supportBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public Builder setSupport(
          int index, vg.Vg.Support value) {
        if (supportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSupportIsMutable();
          support_.set(index, value);
          onChanged();
        } else {
          supportBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public Builder setSupport(
          int index, vg.Vg.Support.Builder builderForValue) {
        if (supportBuilder_ == null) {
          ensureSupportIsMutable();
          support_.set(index, builderForValue.build());
          onChanged();
        } else {
          supportBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public Builder addSupport(vg.Vg.Support value) {
        if (supportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSupportIsMutable();
          support_.add(value);
          onChanged();
        } else {
          supportBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public Builder addSupport(
          int index, vg.Vg.Support value) {
        if (supportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSupportIsMutable();
          support_.add(index, value);
          onChanged();
        } else {
          supportBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public Builder addSupport(
          vg.Vg.Support.Builder builderForValue) {
        if (supportBuilder_ == null) {
          ensureSupportIsMutable();
          support_.add(builderForValue.build());
          onChanged();
        } else {
          supportBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public Builder addSupport(
          int index, vg.Vg.Support.Builder builderForValue) {
        if (supportBuilder_ == null) {
          ensureSupportIsMutable();
          support_.add(index, builderForValue.build());
          onChanged();
        } else {
          supportBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public Builder addAllSupport(
          java.lang.Iterable<? extends vg.Vg.Support> values) {
        if (supportBuilder_ == null) {
          ensureSupportIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, support_);
          onChanged();
        } else {
          supportBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public Builder clearSupport() {
        if (supportBuilder_ == null) {
          support_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          supportBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public Builder removeSupport(int index) {
        if (supportBuilder_ == null) {
          ensureSupportIsMutable();
          support_.remove(index);
          onChanged();
        } else {
          supportBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public vg.Vg.Support.Builder getSupportBuilder(
          int index) {
        return getSupportFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public vg.Vg.SupportOrBuilder getSupportOrBuilder(
          int index) {
        if (supportBuilder_ == null) {
          return support_.get(index);  } else {
          return supportBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public java.util.List<? extends vg.Vg.SupportOrBuilder> 
           getSupportOrBuilderList() {
        if (supportBuilder_ != null) {
          return supportBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(support_);
        }
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public vg.Vg.Support.Builder addSupportBuilder() {
        return getSupportFieldBuilder().addBuilder(
            vg.Vg.Support.getDefaultInstance());
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public vg.Vg.Support.Builder addSupportBuilder(
          int index) {
        return getSupportFieldBuilder().addBuilder(
            index, vg.Vg.Support.getDefaultInstance());
      }
      /**
       * <pre>
       * These supports are per-allele, matching the alleles above
       * </pre>
       *
       * <code>repeated .vg.Support support = 3;</code>
       */
      public java.util.List<vg.Vg.Support.Builder> 
           getSupportBuilderList() {
        return getSupportFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Support, vg.Vg.Support.Builder, vg.Vg.SupportOrBuilder> 
          getSupportFieldBuilder() {
        if (supportBuilder_ == null) {
          supportBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Support, vg.Vg.Support.Builder, vg.Vg.SupportOrBuilder>(
                  support_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          support_ = null;
        }
        return supportBuilder_;
      }

      private java.util.List<vg.Vg.Genotype> genotype_ =
        java.util.Collections.emptyList();
      private void ensureGenotypeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          genotype_ = new java.util.ArrayList<vg.Vg.Genotype>(genotype_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Genotype, vg.Vg.Genotype.Builder, vg.Vg.GenotypeOrBuilder> genotypeBuilder_;

      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public java.util.List<vg.Vg.Genotype> getGenotypeList() {
        if (genotypeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(genotype_);
        } else {
          return genotypeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public int getGenotypeCount() {
        if (genotypeBuilder_ == null) {
          return genotype_.size();
        } else {
          return genotypeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public vg.Vg.Genotype getGenotype(int index) {
        if (genotypeBuilder_ == null) {
          return genotype_.get(index);
        } else {
          return genotypeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public Builder setGenotype(
          int index, vg.Vg.Genotype value) {
        if (genotypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenotypeIsMutable();
          genotype_.set(index, value);
          onChanged();
        } else {
          genotypeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public Builder setGenotype(
          int index, vg.Vg.Genotype.Builder builderForValue) {
        if (genotypeBuilder_ == null) {
          ensureGenotypeIsMutable();
          genotype_.set(index, builderForValue.build());
          onChanged();
        } else {
          genotypeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public Builder addGenotype(vg.Vg.Genotype value) {
        if (genotypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenotypeIsMutable();
          genotype_.add(value);
          onChanged();
        } else {
          genotypeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public Builder addGenotype(
          int index, vg.Vg.Genotype value) {
        if (genotypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenotypeIsMutable();
          genotype_.add(index, value);
          onChanged();
        } else {
          genotypeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public Builder addGenotype(
          vg.Vg.Genotype.Builder builderForValue) {
        if (genotypeBuilder_ == null) {
          ensureGenotypeIsMutable();
          genotype_.add(builderForValue.build());
          onChanged();
        } else {
          genotypeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public Builder addGenotype(
          int index, vg.Vg.Genotype.Builder builderForValue) {
        if (genotypeBuilder_ == null) {
          ensureGenotypeIsMutable();
          genotype_.add(index, builderForValue.build());
          onChanged();
        } else {
          genotypeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public Builder addAllGenotype(
          java.lang.Iterable<? extends vg.Vg.Genotype> values) {
        if (genotypeBuilder_ == null) {
          ensureGenotypeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, genotype_);
          onChanged();
        } else {
          genotypeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public Builder clearGenotype() {
        if (genotypeBuilder_ == null) {
          genotype_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          genotypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public Builder removeGenotype(int index) {
        if (genotypeBuilder_ == null) {
          ensureGenotypeIsMutable();
          genotype_.remove(index);
          onChanged();
        } else {
          genotypeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public vg.Vg.Genotype.Builder getGenotypeBuilder(
          int index) {
        return getGenotypeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public vg.Vg.GenotypeOrBuilder getGenotypeOrBuilder(
          int index) {
        if (genotypeBuilder_ == null) {
          return genotype_.get(index);  } else {
          return genotypeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public java.util.List<? extends vg.Vg.GenotypeOrBuilder> 
           getGenotypeOrBuilderList() {
        if (genotypeBuilder_ != null) {
          return genotypeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(genotype_);
        }
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public vg.Vg.Genotype.Builder addGenotypeBuilder() {
        return getGenotypeFieldBuilder().addBuilder(
            vg.Vg.Genotype.getDefaultInstance());
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public vg.Vg.Genotype.Builder addGenotypeBuilder(
          int index) {
        return getGenotypeFieldBuilder().addBuilder(
            index, vg.Vg.Genotype.getDefaultInstance());
      }
      /**
       * <pre>
       * sorted by likelihood or posterior
       *  the first one is the "call"
       * </pre>
       *
       * <code>repeated .vg.Genotype genotype = 4;</code>
       */
      public java.util.List<vg.Vg.Genotype.Builder> 
           getGenotypeBuilderList() {
        return getGenotypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vg.Vg.Genotype, vg.Vg.Genotype.Builder, vg.Vg.GenotypeOrBuilder> 
          getGenotypeFieldBuilder() {
        if (genotypeBuilder_ == null) {
          genotypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vg.Vg.Genotype, vg.Vg.Genotype.Builder, vg.Vg.GenotypeOrBuilder>(
                  genotype_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          genotype_ = null;
        }
        return genotypeBuilder_;
      }

      private vg.Vg.Support overallSupport_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Support, vg.Vg.Support.Builder, vg.Vg.SupportOrBuilder> overallSupportBuilder_;
      /**
       * <pre>
       * We also have a Support for the locus overall, because reads may have
       * supported multiple alleles and we want to know how many total there were.
       * </pre>
       *
       * <code>.vg.Support overall_support = 5;</code>
       */
      public boolean hasOverallSupport() {
        return overallSupportBuilder_ != null || overallSupport_ != null;
      }
      /**
       * <pre>
       * We also have a Support for the locus overall, because reads may have
       * supported multiple alleles and we want to know how many total there were.
       * </pre>
       *
       * <code>.vg.Support overall_support = 5;</code>
       */
      public vg.Vg.Support getOverallSupport() {
        if (overallSupportBuilder_ == null) {
          return overallSupport_ == null ? vg.Vg.Support.getDefaultInstance() : overallSupport_;
        } else {
          return overallSupportBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * We also have a Support for the locus overall, because reads may have
       * supported multiple alleles and we want to know how many total there were.
       * </pre>
       *
       * <code>.vg.Support overall_support = 5;</code>
       */
      public Builder setOverallSupport(vg.Vg.Support value) {
        if (overallSupportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          overallSupport_ = value;
          onChanged();
        } else {
          overallSupportBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * We also have a Support for the locus overall, because reads may have
       * supported multiple alleles and we want to know how many total there were.
       * </pre>
       *
       * <code>.vg.Support overall_support = 5;</code>
       */
      public Builder setOverallSupport(
          vg.Vg.Support.Builder builderForValue) {
        if (overallSupportBuilder_ == null) {
          overallSupport_ = builderForValue.build();
          onChanged();
        } else {
          overallSupportBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * We also have a Support for the locus overall, because reads may have
       * supported multiple alleles and we want to know how many total there were.
       * </pre>
       *
       * <code>.vg.Support overall_support = 5;</code>
       */
      public Builder mergeOverallSupport(vg.Vg.Support value) {
        if (overallSupportBuilder_ == null) {
          if (overallSupport_ != null) {
            overallSupport_ =
              vg.Vg.Support.newBuilder(overallSupport_).mergeFrom(value).buildPartial();
          } else {
            overallSupport_ = value;
          }
          onChanged();
        } else {
          overallSupportBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * We also have a Support for the locus overall, because reads may have
       * supported multiple alleles and we want to know how many total there were.
       * </pre>
       *
       * <code>.vg.Support overall_support = 5;</code>
       */
      public Builder clearOverallSupport() {
        if (overallSupportBuilder_ == null) {
          overallSupport_ = null;
          onChanged();
        } else {
          overallSupport_ = null;
          overallSupportBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * We also have a Support for the locus overall, because reads may have
       * supported multiple alleles and we want to know how many total there were.
       * </pre>
       *
       * <code>.vg.Support overall_support = 5;</code>
       */
      public vg.Vg.Support.Builder getOverallSupportBuilder() {
        
        onChanged();
        return getOverallSupportFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * We also have a Support for the locus overall, because reads may have
       * supported multiple alleles and we want to know how many total there were.
       * </pre>
       *
       * <code>.vg.Support overall_support = 5;</code>
       */
      public vg.Vg.SupportOrBuilder getOverallSupportOrBuilder() {
        if (overallSupportBuilder_ != null) {
          return overallSupportBuilder_.getMessageOrBuilder();
        } else {
          return overallSupport_ == null ?
              vg.Vg.Support.getDefaultInstance() : overallSupport_;
        }
      }
      /**
       * <pre>
       * We also have a Support for the locus overall, because reads may have
       * supported multiple alleles and we want to know how many total there were.
       * </pre>
       *
       * <code>.vg.Support overall_support = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Support, vg.Vg.Support.Builder, vg.Vg.SupportOrBuilder> 
          getOverallSupportFieldBuilder() {
        if (overallSupportBuilder_ == null) {
          overallSupportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Support, vg.Vg.Support.Builder, vg.Vg.SupportOrBuilder>(
                  getOverallSupport(),
                  getParentForChildren(),
                  isClean());
          overallSupport_ = null;
        }
        return overallSupportBuilder_;
      }

      private java.util.List<java.lang.Double> alleleLogLikelihood_ = java.util.Collections.emptyList();
      private void ensureAlleleLogLikelihoodIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          alleleLogLikelihood_ = new java.util.ArrayList<java.lang.Double>(alleleLogLikelihood_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       * We track the likelihood of each allele individually, in addition to
       * genotype likelihoods. Stores the likelihood natural logged.
       * </pre>
       *
       * <code>repeated double allele_log_likelihood = 6;</code>
       */
      public java.util.List<java.lang.Double>
          getAlleleLogLikelihoodList() {
        return java.util.Collections.unmodifiableList(alleleLogLikelihood_);
      }
      /**
       * <pre>
       * We track the likelihood of each allele individually, in addition to
       * genotype likelihoods. Stores the likelihood natural logged.
       * </pre>
       *
       * <code>repeated double allele_log_likelihood = 6;</code>
       */
      public int getAlleleLogLikelihoodCount() {
        return alleleLogLikelihood_.size();
      }
      /**
       * <pre>
       * We track the likelihood of each allele individually, in addition to
       * genotype likelihoods. Stores the likelihood natural logged.
       * </pre>
       *
       * <code>repeated double allele_log_likelihood = 6;</code>
       */
      public double getAlleleLogLikelihood(int index) {
        return alleleLogLikelihood_.get(index);
      }
      /**
       * <pre>
       * We track the likelihood of each allele individually, in addition to
       * genotype likelihoods. Stores the likelihood natural logged.
       * </pre>
       *
       * <code>repeated double allele_log_likelihood = 6;</code>
       */
      public Builder setAlleleLogLikelihood(
          int index, double value) {
        ensureAlleleLogLikelihoodIsMutable();
        alleleLogLikelihood_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * We track the likelihood of each allele individually, in addition to
       * genotype likelihoods. Stores the likelihood natural logged.
       * </pre>
       *
       * <code>repeated double allele_log_likelihood = 6;</code>
       */
      public Builder addAlleleLogLikelihood(double value) {
        ensureAlleleLogLikelihoodIsMutable();
        alleleLogLikelihood_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * We track the likelihood of each allele individually, in addition to
       * genotype likelihoods. Stores the likelihood natural logged.
       * </pre>
       *
       * <code>repeated double allele_log_likelihood = 6;</code>
       */
      public Builder addAllAlleleLogLikelihood(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAlleleLogLikelihoodIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, alleleLogLikelihood_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * We track the likelihood of each allele individually, in addition to
       * genotype likelihoods. Stores the likelihood natural logged.
       * </pre>
       *
       * <code>repeated double allele_log_likelihood = 6;</code>
       */
      public Builder clearAlleleLogLikelihood() {
        alleleLogLikelihood_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Locus)
    }

    // @@protoc_insertion_point(class_scope:vg.Locus)
    private static final vg.Vg.Locus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Locus();
    }

    public static vg.Vg.Locus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Locus>
        PARSER = new com.google.protobuf.AbstractParser<Locus>() {
      public Locus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Locus(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Locus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Locus> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Locus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GenotypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Genotype)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * These refer to the offsets of the alleles in the Locus object.
     * </pre>
     *
     * <code>repeated int32 allele = 1;</code>
     */
    java.util.List<java.lang.Integer> getAlleleList();
    /**
     * <pre>
     * These refer to the offsets of the alleles in the Locus object.
     * </pre>
     *
     * <code>repeated int32 allele = 1;</code>
     */
    int getAlleleCount();
    /**
     * <pre>
     * These refer to the offsets of the alleles in the Locus object.
     * </pre>
     *
     * <code>repeated int32 allele = 1;</code>
     */
    int getAllele(int index);

    /**
     * <code>bool is_phased = 2;</code>
     */
    boolean getIsPhased();

    /**
     * <code>double likelihood = 3;</code>
     */
    double getLikelihood();

    /**
     * <pre>
     * Likelihood natural logged.
     * </pre>
     *
     * <code>double log_likelihood = 4;</code>
     */
    double getLogLikelihood();

    /**
     * <pre>
     * Prior natural logged.
     * </pre>
     *
     * <code>double log_prior = 5;</code>
     */
    double getLogPrior();

    /**
     * <pre>
     * Posterior natural logged (unnormalized).
     * </pre>
     *
     * <code>double log_posterior = 6;</code>
     */
    double getLogPosterior();
  }
  /**
   * <pre>
   * Describes a genotype at a particular locus.
   * </pre>
   *
   * Protobuf type {@code vg.Genotype}
   */
  public  static final class Genotype extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Genotype)
      GenotypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Genotype.newBuilder() to construct.
    private Genotype(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Genotype() {
      allele_ = java.util.Collections.emptyList();
      isPhased_ = false;
      likelihood_ = 0D;
      logLikelihood_ = 0D;
      logPrior_ = 0D;
      logPosterior_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Genotype(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                allele_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              allele_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                allele_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                allele_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {

              isPhased_ = input.readBool();
              break;
            }
            case 25: {

              likelihood_ = input.readDouble();
              break;
            }
            case 33: {

              logLikelihood_ = input.readDouble();
              break;
            }
            case 41: {

              logPrior_ = input.readDouble();
              break;
            }
            case 49: {

              logPosterior_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          allele_ = java.util.Collections.unmodifiableList(allele_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Genotype_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Genotype_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Genotype.class, vg.Vg.Genotype.Builder.class);
    }

    private int bitField0_;
    public static final int ALLELE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> allele_;
    /**
     * <pre>
     * These refer to the offsets of the alleles in the Locus object.
     * </pre>
     *
     * <code>repeated int32 allele = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getAlleleList() {
      return allele_;
    }
    /**
     * <pre>
     * These refer to the offsets of the alleles in the Locus object.
     * </pre>
     *
     * <code>repeated int32 allele = 1;</code>
     */
    public int getAlleleCount() {
      return allele_.size();
    }
    /**
     * <pre>
     * These refer to the offsets of the alleles in the Locus object.
     * </pre>
     *
     * <code>repeated int32 allele = 1;</code>
     */
    public int getAllele(int index) {
      return allele_.get(index);
    }
    private int alleleMemoizedSerializedSize = -1;

    public static final int IS_PHASED_FIELD_NUMBER = 2;
    private boolean isPhased_;
    /**
     * <code>bool is_phased = 2;</code>
     */
    public boolean getIsPhased() {
      return isPhased_;
    }

    public static final int LIKELIHOOD_FIELD_NUMBER = 3;
    private double likelihood_;
    /**
     * <code>double likelihood = 3;</code>
     */
    public double getLikelihood() {
      return likelihood_;
    }

    public static final int LOG_LIKELIHOOD_FIELD_NUMBER = 4;
    private double logLikelihood_;
    /**
     * <pre>
     * Likelihood natural logged.
     * </pre>
     *
     * <code>double log_likelihood = 4;</code>
     */
    public double getLogLikelihood() {
      return logLikelihood_;
    }

    public static final int LOG_PRIOR_FIELD_NUMBER = 5;
    private double logPrior_;
    /**
     * <pre>
     * Prior natural logged.
     * </pre>
     *
     * <code>double log_prior = 5;</code>
     */
    public double getLogPrior() {
      return logPrior_;
    }

    public static final int LOG_POSTERIOR_FIELD_NUMBER = 6;
    private double logPosterior_;
    /**
     * <pre>
     * Posterior natural logged (unnormalized).
     * </pre>
     *
     * <code>double log_posterior = 6;</code>
     */
    public double getLogPosterior() {
      return logPosterior_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getAlleleList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(alleleMemoizedSerializedSize);
      }
      for (int i = 0; i < allele_.size(); i++) {
        output.writeInt32NoTag(allele_.get(i));
      }
      if (isPhased_ != false) {
        output.writeBool(2, isPhased_);
      }
      if (likelihood_ != 0D) {
        output.writeDouble(3, likelihood_);
      }
      if (logLikelihood_ != 0D) {
        output.writeDouble(4, logLikelihood_);
      }
      if (logPrior_ != 0D) {
        output.writeDouble(5, logPrior_);
      }
      if (logPosterior_ != 0D) {
        output.writeDouble(6, logPosterior_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < allele_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allele_.get(i));
        }
        size += dataSize;
        if (!getAlleleList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        alleleMemoizedSerializedSize = dataSize;
      }
      if (isPhased_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isPhased_);
      }
      if (likelihood_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, likelihood_);
      }
      if (logLikelihood_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, logLikelihood_);
      }
      if (logPrior_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, logPrior_);
      }
      if (logPosterior_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, logPosterior_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Genotype)) {
        return super.equals(obj);
      }
      vg.Vg.Genotype other = (vg.Vg.Genotype) obj;

      boolean result = true;
      result = result && getAlleleList()
          .equals(other.getAlleleList());
      result = result && (getIsPhased()
          == other.getIsPhased());
      result = result && (
          java.lang.Double.doubleToLongBits(getLikelihood())
          == java.lang.Double.doubleToLongBits(
              other.getLikelihood()));
      result = result && (
          java.lang.Double.doubleToLongBits(getLogLikelihood())
          == java.lang.Double.doubleToLongBits(
              other.getLogLikelihood()));
      result = result && (
          java.lang.Double.doubleToLongBits(getLogPrior())
          == java.lang.Double.doubleToLongBits(
              other.getLogPrior()));
      result = result && (
          java.lang.Double.doubleToLongBits(getLogPosterior())
          == java.lang.Double.doubleToLongBits(
              other.getLogPosterior()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAlleleCount() > 0) {
        hash = (37 * hash) + ALLELE_FIELD_NUMBER;
        hash = (53 * hash) + getAlleleList().hashCode();
      }
      hash = (37 * hash) + IS_PHASED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsPhased());
      hash = (37 * hash) + LIKELIHOOD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLikelihood()));
      hash = (37 * hash) + LOG_LIKELIHOOD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLogLikelihood()));
      hash = (37 * hash) + LOG_PRIOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLogPrior()));
      hash = (37 * hash) + LOG_POSTERIOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLogPosterior()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Genotype parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Genotype parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Genotype parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Genotype parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Genotype parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Genotype parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Genotype parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Genotype parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Genotype parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Genotype parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Genotype parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Genotype parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Genotype prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a genotype at a particular locus.
     * </pre>
     *
     * Protobuf type {@code vg.Genotype}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Genotype)
        vg.Vg.GenotypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Genotype_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Genotype_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Genotype.class, vg.Vg.Genotype.Builder.class);
      }

      // Construct using vg.Vg.Genotype.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        allele_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        isPhased_ = false;

        likelihood_ = 0D;

        logLikelihood_ = 0D;

        logPrior_ = 0D;

        logPosterior_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Genotype_descriptor;
      }

      public vg.Vg.Genotype getDefaultInstanceForType() {
        return vg.Vg.Genotype.getDefaultInstance();
      }

      public vg.Vg.Genotype build() {
        vg.Vg.Genotype result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Genotype buildPartial() {
        vg.Vg.Genotype result = new vg.Vg.Genotype(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          allele_ = java.util.Collections.unmodifiableList(allele_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.allele_ = allele_;
        result.isPhased_ = isPhased_;
        result.likelihood_ = likelihood_;
        result.logLikelihood_ = logLikelihood_;
        result.logPrior_ = logPrior_;
        result.logPosterior_ = logPosterior_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Genotype) {
          return mergeFrom((vg.Vg.Genotype)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Genotype other) {
        if (other == vg.Vg.Genotype.getDefaultInstance()) return this;
        if (!other.allele_.isEmpty()) {
          if (allele_.isEmpty()) {
            allele_ = other.allele_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAlleleIsMutable();
            allele_.addAll(other.allele_);
          }
          onChanged();
        }
        if (other.getIsPhased() != false) {
          setIsPhased(other.getIsPhased());
        }
        if (other.getLikelihood() != 0D) {
          setLikelihood(other.getLikelihood());
        }
        if (other.getLogLikelihood() != 0D) {
          setLogLikelihood(other.getLogLikelihood());
        }
        if (other.getLogPrior() != 0D) {
          setLogPrior(other.getLogPrior());
        }
        if (other.getLogPosterior() != 0D) {
          setLogPosterior(other.getLogPosterior());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Genotype parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Genotype) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> allele_ = java.util.Collections.emptyList();
      private void ensureAlleleIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          allele_ = new java.util.ArrayList<java.lang.Integer>(allele_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * These refer to the offsets of the alleles in the Locus object.
       * </pre>
       *
       * <code>repeated int32 allele = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getAlleleList() {
        return java.util.Collections.unmodifiableList(allele_);
      }
      /**
       * <pre>
       * These refer to the offsets of the alleles in the Locus object.
       * </pre>
       *
       * <code>repeated int32 allele = 1;</code>
       */
      public int getAlleleCount() {
        return allele_.size();
      }
      /**
       * <pre>
       * These refer to the offsets of the alleles in the Locus object.
       * </pre>
       *
       * <code>repeated int32 allele = 1;</code>
       */
      public int getAllele(int index) {
        return allele_.get(index);
      }
      /**
       * <pre>
       * These refer to the offsets of the alleles in the Locus object.
       * </pre>
       *
       * <code>repeated int32 allele = 1;</code>
       */
      public Builder setAllele(
          int index, int value) {
        ensureAlleleIsMutable();
        allele_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * These refer to the offsets of the alleles in the Locus object.
       * </pre>
       *
       * <code>repeated int32 allele = 1;</code>
       */
      public Builder addAllele(int value) {
        ensureAlleleIsMutable();
        allele_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * These refer to the offsets of the alleles in the Locus object.
       * </pre>
       *
       * <code>repeated int32 allele = 1;</code>
       */
      public Builder addAllAllele(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAlleleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allele_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * These refer to the offsets of the alleles in the Locus object.
       * </pre>
       *
       * <code>repeated int32 allele = 1;</code>
       */
      public Builder clearAllele() {
        allele_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private boolean isPhased_ ;
      /**
       * <code>bool is_phased = 2;</code>
       */
      public boolean getIsPhased() {
        return isPhased_;
      }
      /**
       * <code>bool is_phased = 2;</code>
       */
      public Builder setIsPhased(boolean value) {
        
        isPhased_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_phased = 2;</code>
       */
      public Builder clearIsPhased() {
        
        isPhased_ = false;
        onChanged();
        return this;
      }

      private double likelihood_ ;
      /**
       * <code>double likelihood = 3;</code>
       */
      public double getLikelihood() {
        return likelihood_;
      }
      /**
       * <code>double likelihood = 3;</code>
       */
      public Builder setLikelihood(double value) {
        
        likelihood_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double likelihood = 3;</code>
       */
      public Builder clearLikelihood() {
        
        likelihood_ = 0D;
        onChanged();
        return this;
      }

      private double logLikelihood_ ;
      /**
       * <pre>
       * Likelihood natural logged.
       * </pre>
       *
       * <code>double log_likelihood = 4;</code>
       */
      public double getLogLikelihood() {
        return logLikelihood_;
      }
      /**
       * <pre>
       * Likelihood natural logged.
       * </pre>
       *
       * <code>double log_likelihood = 4;</code>
       */
      public Builder setLogLikelihood(double value) {
        
        logLikelihood_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Likelihood natural logged.
       * </pre>
       *
       * <code>double log_likelihood = 4;</code>
       */
      public Builder clearLogLikelihood() {
        
        logLikelihood_ = 0D;
        onChanged();
        return this;
      }

      private double logPrior_ ;
      /**
       * <pre>
       * Prior natural logged.
       * </pre>
       *
       * <code>double log_prior = 5;</code>
       */
      public double getLogPrior() {
        return logPrior_;
      }
      /**
       * <pre>
       * Prior natural logged.
       * </pre>
       *
       * <code>double log_prior = 5;</code>
       */
      public Builder setLogPrior(double value) {
        
        logPrior_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Prior natural logged.
       * </pre>
       *
       * <code>double log_prior = 5;</code>
       */
      public Builder clearLogPrior() {
        
        logPrior_ = 0D;
        onChanged();
        return this;
      }

      private double logPosterior_ ;
      /**
       * <pre>
       * Posterior natural logged (unnormalized).
       * </pre>
       *
       * <code>double log_posterior = 6;</code>
       */
      public double getLogPosterior() {
        return logPosterior_;
      }
      /**
       * <pre>
       * Posterior natural logged (unnormalized).
       * </pre>
       *
       * <code>double log_posterior = 6;</code>
       */
      public Builder setLogPosterior(double value) {
        
        logPosterior_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Posterior natural logged (unnormalized).
       * </pre>
       *
       * <code>double log_posterior = 6;</code>
       */
      public Builder clearLogPosterior() {
        
        logPosterior_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Genotype)
    }

    // @@protoc_insertion_point(class_scope:vg.Genotype)
    private static final vg.Vg.Genotype DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Genotype();
    }

    public static vg.Vg.Genotype getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Genotype>
        PARSER = new com.google.protobuf.AbstractParser<Genotype>() {
      public Genotype parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Genotype(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Genotype> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Genotype> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Genotype getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SupportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Support)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The overall quality of all the support, as -10 * log10(P(all support is wrong))
     * </pre>
     *
     * <code>double quality = 1;</code>
     */
    double getQuality();

    /**
     * <pre>
     * The number of supporting reads on the forward strand (which may be fractional)
     * </pre>
     *
     * <code>double forward = 2;</code>
     */
    double getForward();

    /**
     * <pre>
     * The number of supporting reads on the reverse strand (which may be fractional)
     * </pre>
     *
     * <code>double reverse = 3;</code>
     */
    double getReverse();

    /**
     * <pre>
     * TODO: what is this?
     * </pre>
     *
     * <code>double left = 4;</code>
     */
    double getLeft();

    /**
     * <pre>
     * TODO: What is this?
     * </pre>
     *
     * <code>double right = 5;</code>
     */
    double getRight();
  }
  /**
   * <pre>
   * Aggregates information about the reads supporting an allele.
   * </pre>
   *
   * Protobuf type {@code vg.Support}
   */
  public  static final class Support extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Support)
      SupportOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Support.newBuilder() to construct.
    private Support(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Support() {
      quality_ = 0D;
      forward_ = 0D;
      reverse_ = 0D;
      left_ = 0D;
      right_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Support(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {

              quality_ = input.readDouble();
              break;
            }
            case 17: {

              forward_ = input.readDouble();
              break;
            }
            case 25: {

              reverse_ = input.readDouble();
              break;
            }
            case 33: {

              left_ = input.readDouble();
              break;
            }
            case 41: {

              right_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Support_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Support_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Support.class, vg.Vg.Support.Builder.class);
    }

    public static final int QUALITY_FIELD_NUMBER = 1;
    private double quality_;
    /**
     * <pre>
     * The overall quality of all the support, as -10 * log10(P(all support is wrong))
     * </pre>
     *
     * <code>double quality = 1;</code>
     */
    public double getQuality() {
      return quality_;
    }

    public static final int FORWARD_FIELD_NUMBER = 2;
    private double forward_;
    /**
     * <pre>
     * The number of supporting reads on the forward strand (which may be fractional)
     * </pre>
     *
     * <code>double forward = 2;</code>
     */
    public double getForward() {
      return forward_;
    }

    public static final int REVERSE_FIELD_NUMBER = 3;
    private double reverse_;
    /**
     * <pre>
     * The number of supporting reads on the reverse strand (which may be fractional)
     * </pre>
     *
     * <code>double reverse = 3;</code>
     */
    public double getReverse() {
      return reverse_;
    }

    public static final int LEFT_FIELD_NUMBER = 4;
    private double left_;
    /**
     * <pre>
     * TODO: what is this?
     * </pre>
     *
     * <code>double left = 4;</code>
     */
    public double getLeft() {
      return left_;
    }

    public static final int RIGHT_FIELD_NUMBER = 5;
    private double right_;
    /**
     * <pre>
     * TODO: What is this?
     * </pre>
     *
     * <code>double right = 5;</code>
     */
    public double getRight() {
      return right_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (quality_ != 0D) {
        output.writeDouble(1, quality_);
      }
      if (forward_ != 0D) {
        output.writeDouble(2, forward_);
      }
      if (reverse_ != 0D) {
        output.writeDouble(3, reverse_);
      }
      if (left_ != 0D) {
        output.writeDouble(4, left_);
      }
      if (right_ != 0D) {
        output.writeDouble(5, right_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (quality_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, quality_);
      }
      if (forward_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, forward_);
      }
      if (reverse_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, reverse_);
      }
      if (left_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, left_);
      }
      if (right_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, right_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Support)) {
        return super.equals(obj);
      }
      vg.Vg.Support other = (vg.Vg.Support) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getQuality())
          == java.lang.Double.doubleToLongBits(
              other.getQuality()));
      result = result && (
          java.lang.Double.doubleToLongBits(getForward())
          == java.lang.Double.doubleToLongBits(
              other.getForward()));
      result = result && (
          java.lang.Double.doubleToLongBits(getReverse())
          == java.lang.Double.doubleToLongBits(
              other.getReverse()));
      result = result && (
          java.lang.Double.doubleToLongBits(getLeft())
          == java.lang.Double.doubleToLongBits(
              other.getLeft()));
      result = result && (
          java.lang.Double.doubleToLongBits(getRight())
          == java.lang.Double.doubleToLongBits(
              other.getRight()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getQuality()));
      hash = (37 * hash) + FORWARD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getForward()));
      hash = (37 * hash) + REVERSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getReverse()));
      hash = (37 * hash) + LEFT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLeft()));
      hash = (37 * hash) + RIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRight()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Support parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Support parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Support parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Support parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Support parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Support parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Support parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Support parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Support parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Support parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Support parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Support parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Support prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Aggregates information about the reads supporting an allele.
     * </pre>
     *
     * Protobuf type {@code vg.Support}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Support)
        vg.Vg.SupportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Support_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Support_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Support.class, vg.Vg.Support.Builder.class);
      }

      // Construct using vg.Vg.Support.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        quality_ = 0D;

        forward_ = 0D;

        reverse_ = 0D;

        left_ = 0D;

        right_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Support_descriptor;
      }

      public vg.Vg.Support getDefaultInstanceForType() {
        return vg.Vg.Support.getDefaultInstance();
      }

      public vg.Vg.Support build() {
        vg.Vg.Support result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Support buildPartial() {
        vg.Vg.Support result = new vg.Vg.Support(this);
        result.quality_ = quality_;
        result.forward_ = forward_;
        result.reverse_ = reverse_;
        result.left_ = left_;
        result.right_ = right_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Support) {
          return mergeFrom((vg.Vg.Support)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Support other) {
        if (other == vg.Vg.Support.getDefaultInstance()) return this;
        if (other.getQuality() != 0D) {
          setQuality(other.getQuality());
        }
        if (other.getForward() != 0D) {
          setForward(other.getForward());
        }
        if (other.getReverse() != 0D) {
          setReverse(other.getReverse());
        }
        if (other.getLeft() != 0D) {
          setLeft(other.getLeft());
        }
        if (other.getRight() != 0D) {
          setRight(other.getRight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Support parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Support) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double quality_ ;
      /**
       * <pre>
       * The overall quality of all the support, as -10 * log10(P(all support is wrong))
       * </pre>
       *
       * <code>double quality = 1;</code>
       */
      public double getQuality() {
        return quality_;
      }
      /**
       * <pre>
       * The overall quality of all the support, as -10 * log10(P(all support is wrong))
       * </pre>
       *
       * <code>double quality = 1;</code>
       */
      public Builder setQuality(double value) {
        
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The overall quality of all the support, as -10 * log10(P(all support is wrong))
       * </pre>
       *
       * <code>double quality = 1;</code>
       */
      public Builder clearQuality() {
        
        quality_ = 0D;
        onChanged();
        return this;
      }

      private double forward_ ;
      /**
       * <pre>
       * The number of supporting reads on the forward strand (which may be fractional)
       * </pre>
       *
       * <code>double forward = 2;</code>
       */
      public double getForward() {
        return forward_;
      }
      /**
       * <pre>
       * The number of supporting reads on the forward strand (which may be fractional)
       * </pre>
       *
       * <code>double forward = 2;</code>
       */
      public Builder setForward(double value) {
        
        forward_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of supporting reads on the forward strand (which may be fractional)
       * </pre>
       *
       * <code>double forward = 2;</code>
       */
      public Builder clearForward() {
        
        forward_ = 0D;
        onChanged();
        return this;
      }

      private double reverse_ ;
      /**
       * <pre>
       * The number of supporting reads on the reverse strand (which may be fractional)
       * </pre>
       *
       * <code>double reverse = 3;</code>
       */
      public double getReverse() {
        return reverse_;
      }
      /**
       * <pre>
       * The number of supporting reads on the reverse strand (which may be fractional)
       * </pre>
       *
       * <code>double reverse = 3;</code>
       */
      public Builder setReverse(double value) {
        
        reverse_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of supporting reads on the reverse strand (which may be fractional)
       * </pre>
       *
       * <code>double reverse = 3;</code>
       */
      public Builder clearReverse() {
        
        reverse_ = 0D;
        onChanged();
        return this;
      }

      private double left_ ;
      /**
       * <pre>
       * TODO: what is this?
       * </pre>
       *
       * <code>double left = 4;</code>
       */
      public double getLeft() {
        return left_;
      }
      /**
       * <pre>
       * TODO: what is this?
       * </pre>
       *
       * <code>double left = 4;</code>
       */
      public Builder setLeft(double value) {
        
        left_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: what is this?
       * </pre>
       *
       * <code>double left = 4;</code>
       */
      public Builder clearLeft() {
        
        left_ = 0D;
        onChanged();
        return this;
      }

      private double right_ ;
      /**
       * <pre>
       * TODO: What is this?
       * </pre>
       *
       * <code>double right = 5;</code>
       */
      public double getRight() {
        return right_;
      }
      /**
       * <pre>
       * TODO: What is this?
       * </pre>
       *
       * <code>double right = 5;</code>
       */
      public Builder setRight(double value) {
        
        right_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: What is this?
       * </pre>
       *
       * <code>double right = 5;</code>
       */
      public Builder clearRight() {
        
        right_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Support)
    }

    // @@protoc_insertion_point(class_scope:vg.Support)
    private static final vg.Vg.Support DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Support();
    }

    public static vg.Vg.Support getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Support>
        PARSER = new com.google.protobuf.AbstractParser<Support>() {
      public Support parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Support(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Support> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Support> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Support getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LocationSupportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.LocationSupport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The support
     * </pre>
     *
     * <code>.vg.Support support = 1;</code>
     */
    boolean hasSupport();
    /**
     * <pre>
     * The support
     * </pre>
     *
     * <code>.vg.Support support = 1;</code>
     */
    vg.Vg.Support getSupport();
    /**
     * <pre>
     * The support
     * </pre>
     *
     * <code>.vg.Support support = 1;</code>
     */
    vg.Vg.SupportOrBuilder getSupportOrBuilder();

    /**
     * <code>.vg.Edge edge = 2;</code>
     */
    boolean hasEdge();
    /**
     * <code>.vg.Edge edge = 2;</code>
     */
    vg.Vg.Edge getEdge();
    /**
     * <code>.vg.Edge edge = 2;</code>
     */
    vg.Vg.EdgeOrBuilder getEdgeOrBuilder();

    /**
     * <code>int64 node_id = 3;</code>
     */
    long getNodeId();

    public vg.Vg.LocationSupport.OneofLocationCase getOneofLocationCase();
  }
  /**
   * <pre>
   * Support pinned to a location, which can be either a node or an edge
   * </pre>
   *
   * Protobuf type {@code vg.LocationSupport}
   */
  public  static final class LocationSupport extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.LocationSupport)
      LocationSupportOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LocationSupport.newBuilder() to construct.
    private LocationSupport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LocationSupport() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LocationSupport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              vg.Vg.Support.Builder subBuilder = null;
              if (support_ != null) {
                subBuilder = support_.toBuilder();
              }
              support_ = input.readMessage(vg.Vg.Support.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(support_);
                support_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              vg.Vg.Edge.Builder subBuilder = null;
              if (oneofLocationCase_ == 2) {
                subBuilder = ((vg.Vg.Edge) oneofLocation_).toBuilder();
              }
              oneofLocation_ =
                  input.readMessage(vg.Vg.Edge.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((vg.Vg.Edge) oneofLocation_);
                oneofLocation_ = subBuilder.buildPartial();
              }
              oneofLocationCase_ = 2;
              break;
            }
            case 24: {
              oneofLocationCase_ = 3;
              oneofLocation_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_LocationSupport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_LocationSupport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.LocationSupport.class, vg.Vg.LocationSupport.Builder.class);
    }

    private int oneofLocationCase_ = 0;
    private java.lang.Object oneofLocation_;
    public enum OneofLocationCase
        implements com.google.protobuf.Internal.EnumLite {
      EDGE(2),
      NODE_ID(3),
      ONEOFLOCATION_NOT_SET(0);
      private final int value;
      private OneofLocationCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OneofLocationCase valueOf(int value) {
        return forNumber(value);
      }

      public static OneofLocationCase forNumber(int value) {
        switch (value) {
          case 2: return EDGE;
          case 3: return NODE_ID;
          case 0: return ONEOFLOCATION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OneofLocationCase
    getOneofLocationCase() {
      return OneofLocationCase.forNumber(
          oneofLocationCase_);
    }

    public static final int SUPPORT_FIELD_NUMBER = 1;
    private vg.Vg.Support support_;
    /**
     * <pre>
     * The support
     * </pre>
     *
     * <code>.vg.Support support = 1;</code>
     */
    public boolean hasSupport() {
      return support_ != null;
    }
    /**
     * <pre>
     * The support
     * </pre>
     *
     * <code>.vg.Support support = 1;</code>
     */
    public vg.Vg.Support getSupport() {
      return support_ == null ? vg.Vg.Support.getDefaultInstance() : support_;
    }
    /**
     * <pre>
     * The support
     * </pre>
     *
     * <code>.vg.Support support = 1;</code>
     */
    public vg.Vg.SupportOrBuilder getSupportOrBuilder() {
      return getSupport();
    }

    public static final int EDGE_FIELD_NUMBER = 2;
    /**
     * <code>.vg.Edge edge = 2;</code>
     */
    public boolean hasEdge() {
      return oneofLocationCase_ == 2;
    }
    /**
     * <code>.vg.Edge edge = 2;</code>
     */
    public vg.Vg.Edge getEdge() {
      if (oneofLocationCase_ == 2) {
         return (vg.Vg.Edge) oneofLocation_;
      }
      return vg.Vg.Edge.getDefaultInstance();
    }
    /**
     * <code>.vg.Edge edge = 2;</code>
     */
    public vg.Vg.EdgeOrBuilder getEdgeOrBuilder() {
      if (oneofLocationCase_ == 2) {
         return (vg.Vg.Edge) oneofLocation_;
      }
      return vg.Vg.Edge.getDefaultInstance();
    }

    public static final int NODE_ID_FIELD_NUMBER = 3;
    /**
     * <code>int64 node_id = 3;</code>
     */
    public long getNodeId() {
      if (oneofLocationCase_ == 3) {
        return (java.lang.Long) oneofLocation_;
      }
      return 0L;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (support_ != null) {
        output.writeMessage(1, getSupport());
      }
      if (oneofLocationCase_ == 2) {
        output.writeMessage(2, (vg.Vg.Edge) oneofLocation_);
      }
      if (oneofLocationCase_ == 3) {
        output.writeInt64(
            3, (long)((java.lang.Long) oneofLocation_));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (support_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSupport());
      }
      if (oneofLocationCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (vg.Vg.Edge) oneofLocation_);
      }
      if (oneofLocationCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              3, (long)((java.lang.Long) oneofLocation_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.LocationSupport)) {
        return super.equals(obj);
      }
      vg.Vg.LocationSupport other = (vg.Vg.LocationSupport) obj;

      boolean result = true;
      result = result && (hasSupport() == other.hasSupport());
      if (hasSupport()) {
        result = result && getSupport()
            .equals(other.getSupport());
      }
      result = result && getOneofLocationCase().equals(
          other.getOneofLocationCase());
      if (!result) return false;
      switch (oneofLocationCase_) {
        case 2:
          result = result && getEdge()
              .equals(other.getEdge());
          break;
        case 3:
          result = result && (getNodeId()
              == other.getNodeId());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSupport()) {
        hash = (37 * hash) + SUPPORT_FIELD_NUMBER;
        hash = (53 * hash) + getSupport().hashCode();
      }
      switch (oneofLocationCase_) {
        case 2:
          hash = (37 * hash) + EDGE_FIELD_NUMBER;
          hash = (53 * hash) + getEdge().hashCode();
          break;
        case 3:
          hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getNodeId());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.LocationSupport parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.LocationSupport parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.LocationSupport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.LocationSupport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.LocationSupport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.LocationSupport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.LocationSupport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.LocationSupport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.LocationSupport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.LocationSupport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.LocationSupport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.LocationSupport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.LocationSupport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Support pinned to a location, which can be either a node or an edge
     * </pre>
     *
     * Protobuf type {@code vg.LocationSupport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.LocationSupport)
        vg.Vg.LocationSupportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_LocationSupport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_LocationSupport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.LocationSupport.class, vg.Vg.LocationSupport.Builder.class);
      }

      // Construct using vg.Vg.LocationSupport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (supportBuilder_ == null) {
          support_ = null;
        } else {
          support_ = null;
          supportBuilder_ = null;
        }
        oneofLocationCase_ = 0;
        oneofLocation_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_LocationSupport_descriptor;
      }

      public vg.Vg.LocationSupport getDefaultInstanceForType() {
        return vg.Vg.LocationSupport.getDefaultInstance();
      }

      public vg.Vg.LocationSupport build() {
        vg.Vg.LocationSupport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.LocationSupport buildPartial() {
        vg.Vg.LocationSupport result = new vg.Vg.LocationSupport(this);
        if (supportBuilder_ == null) {
          result.support_ = support_;
        } else {
          result.support_ = supportBuilder_.build();
        }
        if (oneofLocationCase_ == 2) {
          if (edgeBuilder_ == null) {
            result.oneofLocation_ = oneofLocation_;
          } else {
            result.oneofLocation_ = edgeBuilder_.build();
          }
        }
        if (oneofLocationCase_ == 3) {
          result.oneofLocation_ = oneofLocation_;
        }
        result.oneofLocationCase_ = oneofLocationCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.LocationSupport) {
          return mergeFrom((vg.Vg.LocationSupport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.LocationSupport other) {
        if (other == vg.Vg.LocationSupport.getDefaultInstance()) return this;
        if (other.hasSupport()) {
          mergeSupport(other.getSupport());
        }
        switch (other.getOneofLocationCase()) {
          case EDGE: {
            mergeEdge(other.getEdge());
            break;
          }
          case NODE_ID: {
            setNodeId(other.getNodeId());
            break;
          }
          case ONEOFLOCATION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.LocationSupport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.LocationSupport) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int oneofLocationCase_ = 0;
      private java.lang.Object oneofLocation_;
      public OneofLocationCase
          getOneofLocationCase() {
        return OneofLocationCase.forNumber(
            oneofLocationCase_);
      }

      public Builder clearOneofLocation() {
        oneofLocationCase_ = 0;
        oneofLocation_ = null;
        onChanged();
        return this;
      }


      private vg.Vg.Support support_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Support, vg.Vg.Support.Builder, vg.Vg.SupportOrBuilder> supportBuilder_;
      /**
       * <pre>
       * The support
       * </pre>
       *
       * <code>.vg.Support support = 1;</code>
       */
      public boolean hasSupport() {
        return supportBuilder_ != null || support_ != null;
      }
      /**
       * <pre>
       * The support
       * </pre>
       *
       * <code>.vg.Support support = 1;</code>
       */
      public vg.Vg.Support getSupport() {
        if (supportBuilder_ == null) {
          return support_ == null ? vg.Vg.Support.getDefaultInstance() : support_;
        } else {
          return supportBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The support
       * </pre>
       *
       * <code>.vg.Support support = 1;</code>
       */
      public Builder setSupport(vg.Vg.Support value) {
        if (supportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          support_ = value;
          onChanged();
        } else {
          supportBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The support
       * </pre>
       *
       * <code>.vg.Support support = 1;</code>
       */
      public Builder setSupport(
          vg.Vg.Support.Builder builderForValue) {
        if (supportBuilder_ == null) {
          support_ = builderForValue.build();
          onChanged();
        } else {
          supportBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The support
       * </pre>
       *
       * <code>.vg.Support support = 1;</code>
       */
      public Builder mergeSupport(vg.Vg.Support value) {
        if (supportBuilder_ == null) {
          if (support_ != null) {
            support_ =
              vg.Vg.Support.newBuilder(support_).mergeFrom(value).buildPartial();
          } else {
            support_ = value;
          }
          onChanged();
        } else {
          supportBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The support
       * </pre>
       *
       * <code>.vg.Support support = 1;</code>
       */
      public Builder clearSupport() {
        if (supportBuilder_ == null) {
          support_ = null;
          onChanged();
        } else {
          support_ = null;
          supportBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The support
       * </pre>
       *
       * <code>.vg.Support support = 1;</code>
       */
      public vg.Vg.Support.Builder getSupportBuilder() {
        
        onChanged();
        return getSupportFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The support
       * </pre>
       *
       * <code>.vg.Support support = 1;</code>
       */
      public vg.Vg.SupportOrBuilder getSupportOrBuilder() {
        if (supportBuilder_ != null) {
          return supportBuilder_.getMessageOrBuilder();
        } else {
          return support_ == null ?
              vg.Vg.Support.getDefaultInstance() : support_;
        }
      }
      /**
       * <pre>
       * The support
       * </pre>
       *
       * <code>.vg.Support support = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Support, vg.Vg.Support.Builder, vg.Vg.SupportOrBuilder> 
          getSupportFieldBuilder() {
        if (supportBuilder_ == null) {
          supportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Support, vg.Vg.Support.Builder, vg.Vg.SupportOrBuilder>(
                  getSupport(),
                  getParentForChildren(),
                  isClean());
          support_ = null;
        }
        return supportBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Edge, vg.Vg.Edge.Builder, vg.Vg.EdgeOrBuilder> edgeBuilder_;
      /**
       * <code>.vg.Edge edge = 2;</code>
       */
      public boolean hasEdge() {
        return oneofLocationCase_ == 2;
      }
      /**
       * <code>.vg.Edge edge = 2;</code>
       */
      public vg.Vg.Edge getEdge() {
        if (edgeBuilder_ == null) {
          if (oneofLocationCase_ == 2) {
            return (vg.Vg.Edge) oneofLocation_;
          }
          return vg.Vg.Edge.getDefaultInstance();
        } else {
          if (oneofLocationCase_ == 2) {
            return edgeBuilder_.getMessage();
          }
          return vg.Vg.Edge.getDefaultInstance();
        }
      }
      /**
       * <code>.vg.Edge edge = 2;</code>
       */
      public Builder setEdge(vg.Vg.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oneofLocation_ = value;
          onChanged();
        } else {
          edgeBuilder_.setMessage(value);
        }
        oneofLocationCase_ = 2;
        return this;
      }
      /**
       * <code>.vg.Edge edge = 2;</code>
       */
      public Builder setEdge(
          vg.Vg.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          oneofLocation_ = builderForValue.build();
          onChanged();
        } else {
          edgeBuilder_.setMessage(builderForValue.build());
        }
        oneofLocationCase_ = 2;
        return this;
      }
      /**
       * <code>.vg.Edge edge = 2;</code>
       */
      public Builder mergeEdge(vg.Vg.Edge value) {
        if (edgeBuilder_ == null) {
          if (oneofLocationCase_ == 2 &&
              oneofLocation_ != vg.Vg.Edge.getDefaultInstance()) {
            oneofLocation_ = vg.Vg.Edge.newBuilder((vg.Vg.Edge) oneofLocation_)
                .mergeFrom(value).buildPartial();
          } else {
            oneofLocation_ = value;
          }
          onChanged();
        } else {
          if (oneofLocationCase_ == 2) {
            edgeBuilder_.mergeFrom(value);
          }
          edgeBuilder_.setMessage(value);
        }
        oneofLocationCase_ = 2;
        return this;
      }
      /**
       * <code>.vg.Edge edge = 2;</code>
       */
      public Builder clearEdge() {
        if (edgeBuilder_ == null) {
          if (oneofLocationCase_ == 2) {
            oneofLocationCase_ = 0;
            oneofLocation_ = null;
            onChanged();
          }
        } else {
          if (oneofLocationCase_ == 2) {
            oneofLocationCase_ = 0;
            oneofLocation_ = null;
          }
          edgeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.vg.Edge edge = 2;</code>
       */
      public vg.Vg.Edge.Builder getEdgeBuilder() {
        return getEdgeFieldBuilder().getBuilder();
      }
      /**
       * <code>.vg.Edge edge = 2;</code>
       */
      public vg.Vg.EdgeOrBuilder getEdgeOrBuilder() {
        if ((oneofLocationCase_ == 2) && (edgeBuilder_ != null)) {
          return edgeBuilder_.getMessageOrBuilder();
        } else {
          if (oneofLocationCase_ == 2) {
            return (vg.Vg.Edge) oneofLocation_;
          }
          return vg.Vg.Edge.getDefaultInstance();
        }
      }
      /**
       * <code>.vg.Edge edge = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Edge, vg.Vg.Edge.Builder, vg.Vg.EdgeOrBuilder> 
          getEdgeFieldBuilder() {
        if (edgeBuilder_ == null) {
          if (!(oneofLocationCase_ == 2)) {
            oneofLocation_ = vg.Vg.Edge.getDefaultInstance();
          }
          edgeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Edge, vg.Vg.Edge.Builder, vg.Vg.EdgeOrBuilder>(
                  (vg.Vg.Edge) oneofLocation_,
                  getParentForChildren(),
                  isClean());
          oneofLocation_ = null;
        }
        oneofLocationCase_ = 2;
        onChanged();;
        return edgeBuilder_;
      }

      /**
       * <code>int64 node_id = 3;</code>
       */
      public long getNodeId() {
        if (oneofLocationCase_ == 3) {
          return (java.lang.Long) oneofLocation_;
        }
        return 0L;
      }
      /**
       * <code>int64 node_id = 3;</code>
       */
      public Builder setNodeId(long value) {
        oneofLocationCase_ = 3;
        oneofLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 node_id = 3;</code>
       */
      public Builder clearNodeId() {
        if (oneofLocationCase_ == 3) {
          oneofLocationCase_ = 0;
          oneofLocation_ = null;
          onChanged();
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.LocationSupport)
    }

    // @@protoc_insertion_point(class_scope:vg.LocationSupport)
    private static final vg.Vg.LocationSupport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.LocationSupport();
    }

    public static vg.Vg.LocationSupport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LocationSupport>
        PARSER = new com.google.protobuf.AbstractParser<LocationSupport>() {
      public LocationSupport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LocationSupport(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LocationSupport> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LocationSupport> getParserForType() {
      return PARSER;
    }

    public vg.Vg.LocationSupport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TranslationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vg.Translation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.vg.Path from = 1;</code>
     */
    boolean hasFrom();
    /**
     * <code>.vg.Path from = 1;</code>
     */
    vg.Vg.Path getFrom();
    /**
     * <code>.vg.Path from = 1;</code>
     */
    vg.Vg.PathOrBuilder getFromOrBuilder();

    /**
     * <code>.vg.Path to = 2;</code>
     */
    boolean hasTo();
    /**
     * <code>.vg.Path to = 2;</code>
     */
    vg.Vg.Path getTo();
    /**
     * <code>.vg.Path to = 2;</code>
     */
    vg.Vg.PathOrBuilder getToOrBuilder();
  }
  /**
   * <pre>
   * Translations map from one graph to another.
   * A collection of these provides a covering mapping between a from and to graph.
   * If each "from" path through the base graph corresponds to a "to" path in an updated graph,
   * then we can use these translations to project positions, mappings, and paths in the new
   * graph into the old one using the Translator interface.
   * </pre>
   *
   * Protobuf type {@code vg.Translation}
   */
  public  static final class Translation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:vg.Translation)
      TranslationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Translation.newBuilder() to construct.
    private Translation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Translation() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Translation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              vg.Vg.Path.Builder subBuilder = null;
              if (from_ != null) {
                subBuilder = from_.toBuilder();
              }
              from_ = input.readMessage(vg.Vg.Path.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(from_);
                from_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              vg.Vg.Path.Builder subBuilder = null;
              if (to_ != null) {
                subBuilder = to_.toBuilder();
              }
              to_ = input.readMessage(vg.Vg.Path.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(to_);
                to_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vg.Vg.internal_static_vg_Translation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vg.Vg.internal_static_vg_Translation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vg.Vg.Translation.class, vg.Vg.Translation.Builder.class);
    }

    public static final int FROM_FIELD_NUMBER = 1;
    private vg.Vg.Path from_;
    /**
     * <code>.vg.Path from = 1;</code>
     */
    public boolean hasFrom() {
      return from_ != null;
    }
    /**
     * <code>.vg.Path from = 1;</code>
     */
    public vg.Vg.Path getFrom() {
      return from_ == null ? vg.Vg.Path.getDefaultInstance() : from_;
    }
    /**
     * <code>.vg.Path from = 1;</code>
     */
    public vg.Vg.PathOrBuilder getFromOrBuilder() {
      return getFrom();
    }

    public static final int TO_FIELD_NUMBER = 2;
    private vg.Vg.Path to_;
    /**
     * <code>.vg.Path to = 2;</code>
     */
    public boolean hasTo() {
      return to_ != null;
    }
    /**
     * <code>.vg.Path to = 2;</code>
     */
    public vg.Vg.Path getTo() {
      return to_ == null ? vg.Vg.Path.getDefaultInstance() : to_;
    }
    /**
     * <code>.vg.Path to = 2;</code>
     */
    public vg.Vg.PathOrBuilder getToOrBuilder() {
      return getTo();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (from_ != null) {
        output.writeMessage(1, getFrom());
      }
      if (to_ != null) {
        output.writeMessage(2, getTo());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (from_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFrom());
      }
      if (to_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vg.Vg.Translation)) {
        return super.equals(obj);
      }
      vg.Vg.Translation other = (vg.Vg.Translation) obj;

      boolean result = true;
      result = result && (hasFrom() == other.hasFrom());
      if (hasFrom()) {
        result = result && getFrom()
            .equals(other.getFrom());
      }
      result = result && (hasTo() == other.hasTo());
      if (hasTo()) {
        result = result && getTo()
            .equals(other.getTo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrom()) {
        hash = (37 * hash) + FROM_FIELD_NUMBER;
        hash = (53 * hash) + getFrom().hashCode();
      }
      if (hasTo()) {
        hash = (37 * hash) + TO_FIELD_NUMBER;
        hash = (53 * hash) + getTo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vg.Vg.Translation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Translation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Translation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Translation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Translation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vg.Vg.Translation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vg.Vg.Translation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Translation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Translation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vg.Vg.Translation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vg.Vg.Translation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vg.Vg.Translation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vg.Vg.Translation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Translations map from one graph to another.
     * A collection of these provides a covering mapping between a from and to graph.
     * If each "from" path through the base graph corresponds to a "to" path in an updated graph,
     * then we can use these translations to project positions, mappings, and paths in the new
     * graph into the old one using the Translator interface.
     * </pre>
     *
     * Protobuf type {@code vg.Translation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:vg.Translation)
        vg.Vg.TranslationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vg.Vg.internal_static_vg_Translation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vg.Vg.internal_static_vg_Translation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vg.Vg.Translation.class, vg.Vg.Translation.Builder.class);
      }

      // Construct using vg.Vg.Translation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (fromBuilder_ == null) {
          from_ = null;
        } else {
          from_ = null;
          fromBuilder_ = null;
        }
        if (toBuilder_ == null) {
          to_ = null;
        } else {
          to_ = null;
          toBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vg.Vg.internal_static_vg_Translation_descriptor;
      }

      public vg.Vg.Translation getDefaultInstanceForType() {
        return vg.Vg.Translation.getDefaultInstance();
      }

      public vg.Vg.Translation build() {
        vg.Vg.Translation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public vg.Vg.Translation buildPartial() {
        vg.Vg.Translation result = new vg.Vg.Translation(this);
        if (fromBuilder_ == null) {
          result.from_ = from_;
        } else {
          result.from_ = fromBuilder_.build();
        }
        if (toBuilder_ == null) {
          result.to_ = to_;
        } else {
          result.to_ = toBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vg.Vg.Translation) {
          return mergeFrom((vg.Vg.Translation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vg.Vg.Translation other) {
        if (other == vg.Vg.Translation.getDefaultInstance()) return this;
        if (other.hasFrom()) {
          mergeFrom(other.getFrom());
        }
        if (other.hasTo()) {
          mergeTo(other.getTo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vg.Vg.Translation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vg.Vg.Translation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private vg.Vg.Path from_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> fromBuilder_;
      /**
       * <code>.vg.Path from = 1;</code>
       */
      public boolean hasFrom() {
        return fromBuilder_ != null || from_ != null;
      }
      /**
       * <code>.vg.Path from = 1;</code>
       */
      public vg.Vg.Path getFrom() {
        if (fromBuilder_ == null) {
          return from_ == null ? vg.Vg.Path.getDefaultInstance() : from_;
        } else {
          return fromBuilder_.getMessage();
        }
      }
      /**
       * <code>.vg.Path from = 1;</code>
       */
      public Builder setFrom(vg.Vg.Path value) {
        if (fromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          from_ = value;
          onChanged();
        } else {
          fromBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.vg.Path from = 1;</code>
       */
      public Builder setFrom(
          vg.Vg.Path.Builder builderForValue) {
        if (fromBuilder_ == null) {
          from_ = builderForValue.build();
          onChanged();
        } else {
          fromBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.vg.Path from = 1;</code>
       */
      public Builder mergeFrom(vg.Vg.Path value) {
        if (fromBuilder_ == null) {
          if (from_ != null) {
            from_ =
              vg.Vg.Path.newBuilder(from_).mergeFrom(value).buildPartial();
          } else {
            from_ = value;
          }
          onChanged();
        } else {
          fromBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.vg.Path from = 1;</code>
       */
      public Builder clearFrom() {
        if (fromBuilder_ == null) {
          from_ = null;
          onChanged();
        } else {
          from_ = null;
          fromBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.vg.Path from = 1;</code>
       */
      public vg.Vg.Path.Builder getFromBuilder() {
        
        onChanged();
        return getFromFieldBuilder().getBuilder();
      }
      /**
       * <code>.vg.Path from = 1;</code>
       */
      public vg.Vg.PathOrBuilder getFromOrBuilder() {
        if (fromBuilder_ != null) {
          return fromBuilder_.getMessageOrBuilder();
        } else {
          return from_ == null ?
              vg.Vg.Path.getDefaultInstance() : from_;
        }
      }
      /**
       * <code>.vg.Path from = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> 
          getFromFieldBuilder() {
        if (fromBuilder_ == null) {
          fromBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder>(
                  getFrom(),
                  getParentForChildren(),
                  isClean());
          from_ = null;
        }
        return fromBuilder_;
      }

      private vg.Vg.Path to_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> toBuilder_;
      /**
       * <code>.vg.Path to = 2;</code>
       */
      public boolean hasTo() {
        return toBuilder_ != null || to_ != null;
      }
      /**
       * <code>.vg.Path to = 2;</code>
       */
      public vg.Vg.Path getTo() {
        if (toBuilder_ == null) {
          return to_ == null ? vg.Vg.Path.getDefaultInstance() : to_;
        } else {
          return toBuilder_.getMessage();
        }
      }
      /**
       * <code>.vg.Path to = 2;</code>
       */
      public Builder setTo(vg.Vg.Path value) {
        if (toBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          to_ = value;
          onChanged();
        } else {
          toBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.vg.Path to = 2;</code>
       */
      public Builder setTo(
          vg.Vg.Path.Builder builderForValue) {
        if (toBuilder_ == null) {
          to_ = builderForValue.build();
          onChanged();
        } else {
          toBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.vg.Path to = 2;</code>
       */
      public Builder mergeTo(vg.Vg.Path value) {
        if (toBuilder_ == null) {
          if (to_ != null) {
            to_ =
              vg.Vg.Path.newBuilder(to_).mergeFrom(value).buildPartial();
          } else {
            to_ = value;
          }
          onChanged();
        } else {
          toBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.vg.Path to = 2;</code>
       */
      public Builder clearTo() {
        if (toBuilder_ == null) {
          to_ = null;
          onChanged();
        } else {
          to_ = null;
          toBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.vg.Path to = 2;</code>
       */
      public vg.Vg.Path.Builder getToBuilder() {
        
        onChanged();
        return getToFieldBuilder().getBuilder();
      }
      /**
       * <code>.vg.Path to = 2;</code>
       */
      public vg.Vg.PathOrBuilder getToOrBuilder() {
        if (toBuilder_ != null) {
          return toBuilder_.getMessageOrBuilder();
        } else {
          return to_ == null ?
              vg.Vg.Path.getDefaultInstance() : to_;
        }
      }
      /**
       * <code>.vg.Path to = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder> 
          getToFieldBuilder() {
        if (toBuilder_ == null) {
          toBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              vg.Vg.Path, vg.Vg.Path.Builder, vg.Vg.PathOrBuilder>(
                  getTo(),
                  getParentForChildren(),
                  isClean());
          to_ = null;
        }
        return toBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vg.Translation)
    }

    // @@protoc_insertion_point(class_scope:vg.Translation)
    private static final vg.Vg.Translation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vg.Vg.Translation();
    }

    public static vg.Vg.Translation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Translation>
        PARSER = new com.google.protobuf.AbstractParser<Translation>() {
      public Translation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Translation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Translation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Translation> getParserForType() {
      return PARSER;
    }

    public vg.Vg.Translation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Graph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Graph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Node_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Node_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Edge_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Edge_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Edit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Edit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Mapping_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Mapping_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Position_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Position_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Path_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Path_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Alignment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Alignment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_MultipathAlignment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_MultipathAlignment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Subpath_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Subpath_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_KmerMatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_KmerMatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_BasePileup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_BasePileup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_NodePileup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_NodePileup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_EdgePileup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_EdgePileup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Pileup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Pileup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Snarl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Snarl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Visit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Visit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_SnarlTraversal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_SnarlTraversal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Locus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Locus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Genotype_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Genotype_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Support_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Support_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_LocationSupport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_LocationSupport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vg_Translation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vg_Translation_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017vg/src/vg.proto\022\002vg\032\034google/protobuf/s" +
      "truct.proto\"O\n\005Graph\022\026\n\004node\030\001 \003(\0132\010.vg." +
      "Node\022\026\n\004edge\030\002 \003(\0132\010.vg.Edge\022\026\n\004path\030\003 \003" +
      "(\0132\010.vg.Path\"2\n\004Node\022\020\n\010sequence\030\001 \001(\t\022\014" +
      "\n\004name\030\002 \001(\t\022\n\n\002id\030\003 \001(\003\"U\n\004Edge\022\014\n\004from" +
      "\030\001 \001(\003\022\n\n\002to\030\002 \001(\003\022\022\n\nfrom_start\030\003 \001(\010\022\016" +
      "\n\006to_end\030\004 \001(\010\022\017\n\007overlap\030\005 \001(\005\"@\n\004Edit\022" +
      "\023\n\013from_length\030\001 \001(\005\022\021\n\tto_length\030\002 \001(\005\022" +
      "\020\n\010sequence\030\003 \001(\t\"O\n\007Mapping\022\036\n\010position" +
      "\030\001 \001(\0132\014.vg.Position\022\026\n\004edit\030\002 \003(\0132\010.vg.",
      "Edit\022\014\n\004rank\030\005 \001(\003\"M\n\010Position\022\017\n\007node_i" +
      "d\030\001 \001(\003\022\016\n\006offset\030\002 \001(\003\022\022\n\nis_reverse\030\004 " +
      "\001(\010\022\014\n\004name\030\005 \001(\t\"W\n\004Path\022\014\n\004name\030\001 \001(\t\022" +
      "\034\n\007mapping\030\002 \003(\0132\013.vg.Mapping\022\023\n\013is_circ" +
      "ular\030\003 \001(\010\022\016\n\006length\030\004 \001(\003\"\352\006\n\tAlignment" +
      "\022\020\n\010sequence\030\001 \001(\t\022\026\n\004path\030\002 \001(\0132\010.vg.Pa" +
      "th\022\014\n\004name\030\003 \001(\t\022\017\n\007quality\030\004 \001(\014\022\027\n\017map" +
      "ping_quality\030\005 \001(\005\022\r\n\005score\030\006 \001(\005\022\026\n\016que" +
      "ry_position\030\007 \001(\005\022\023\n\013sample_name\030\t \001(\t\022\022" +
      "\n\nread_group\030\n \001(\t\022$\n\rfragment_prev\030\013 \001(",
      "\0132\r.vg.Alignment\022$\n\rfragment_next\030\014 \001(\0132" +
      "\r.vg.Alignment\022\024\n\014is_secondary\030\017 \001(\010\022\020\n\010" +
      "identity\030\020 \001(\001\022\032\n\010fragment\030\021 \003(\0132\010.vg.Pa" +
      "th\022\030\n\005locus\030\022 \003(\0132\t.vg.Locus\022\034\n\006refpos\030\023" +
      " \003(\0132\014.vg.Position\022\023\n\013read_paired\030\024 \001(\010\022" +
      "\023\n\013read_mapped\030\025 \001(\010\022\025\n\rmate_unmapped\030\026 " +
      "\001(\010\022\036\n\026read_on_reverse_strand\030\027 \001(\010\022\036\n\026m" +
      "ate_on_reverse_strand\030\030 \001(\010\022\024\n\014soft_clip" +
      "ped\030\031 \001(\010\022\036\n\026discordant_insert_size\030\032 \001(" +
      "\010\022\022\n\nuniqueness\030\033 \001(\001\022\017\n\007correct\030\034 \001(\001\022\027",
      "\n\017secondary_score\030\035 \003(\005\022\026\n\016fragment_scor" +
      "e\030\036 \001(\001\022(\n mate_mapped_to_disjoint_subgr" +
      "aph\030\037 \001(\010\022$\n\034fragment_length_distributio" +
      "n\030  \001(\t\022\021\n\ttime_used\030# \001(\001\022 \n\nto_correct" +
      "\030$ \001(\0132\014.vg.Position\022\030\n\020correctly_mapped" +
      "\030% \001(\010\022+\n\nannotation\030d \001(\0132\027.google.prot" +
      "obuf.StructJ\004\010\010\020\tJ\004\010!\020#\"\373\001\n\022MultipathAli" +
      "gnment\022\020\n\010sequence\030\001 \001(\t\022\017\n\007quality\030\002 \001(" +
      "\014\022\014\n\004name\030\003 \001(\t\022\023\n\013sample_name\030\004 \001(\t\022\022\n\n" +
      "read_group\030\005 \001(\t\022\034\n\007subpath\030\006 \003(\0132\013.vg.S",
      "ubpath\022\027\n\017mapping_quality\030\007 \001(\005\022\r\n\005start" +
      "\030\010 \003(\r\022\030\n\020paired_read_name\030\t \001(\t\022+\n\nanno" +
      "tation\030d \001(\0132\027.google.protobuf.Struct\">\n" +
      "\007Subpath\022\026\n\004path\030\001 \001(\0132\010.vg.Path\022\014\n\004next" +
      "\030\002 \003(\r\022\r\n\005score\030\003 \001(\005\"R\n\tKmerMatch\022\020\n\010se" +
      "quence\030\001 \001(\t\022\017\n\007node_id\030\002 \001(\003\022\020\n\010positio" +
      "n\030\003 \001(\021\022\020\n\010backward\030\004 \001(\010\"S\n\nBasePileup\022" +
      "\020\n\010ref_base\030\001 \001(\005\022\021\n\tnum_bases\030\002 \001(\005\022\r\n\005" +
      "bases\030\003 \001(\t\022\021\n\tqualities\030\004 \001(\014\"B\n\nNodePi" +
      "leup\022\017\n\007node_id\030\001 \001(\003\022#\n\013base_pileup\030\002 \003",
      "(\0132\016.vg.BasePileup\"e\n\nEdgePileup\022\026\n\004edge" +
      "\030\001 \001(\0132\010.vg.Edge\022\021\n\tnum_reads\030\002 \001(\005\022\031\n\021n" +
      "um_forward_reads\030\003 \001(\005\022\021\n\tqualities\030\004 \001(" +
      "\014\"T\n\006Pileup\022$\n\014node_pileups\030\001 \003(\0132\016.vg.N" +
      "odePileup\022$\n\014edge_pileups\030\002 \003(\0132\016.vg.Edg" +
      "ePileup\"\372\001\n\005Snarl\022\033\n\004type\030\001 \001(\0162\r.vg.Sna" +
      "rlType\022\030\n\005start\030\002 \001(\0132\t.vg.Visit\022\026\n\003end\030" +
      "\003 \001(\0132\t.vg.Visit\022\031\n\006parent\030\004 \001(\0132\t.vg.Sn" +
      "arl\022\014\n\004name\030\005 \001(\t\022\034\n\024start_self_reachabl" +
      "e\030\006 \001(\010\022\032\n\022end_self_reachable\030\007 \001(\010\022\033\n\023s",
      "tart_end_reachable\030\010 \001(\010\022\"\n\032directed_acy" +
      "clic_net_graph\030\t \001(\010\"D\n\005Visit\022\017\n\007node_id" +
      "\030\001 \001(\003\022\030\n\005snarl\030\002 \001(\0132\t.vg.Snarl\022\020\n\010back" +
      "ward\030\003 \001(\010\"8\n\016SnarlTraversal\022\030\n\005visit\030\001 " +
      "\003(\0132\t.vg.Visit\022\014\n\004name\030\002 \001(\t\"\262\001\n\005Locus\022\014" +
      "\n\004name\030\001 \001(\t\022\030\n\006allele\030\002 \003(\0132\010.vg.Path\022\034" +
      "\n\007support\030\003 \003(\0132\013.vg.Support\022\036\n\010genotype" +
      "\030\004 \003(\0132\014.vg.Genotype\022$\n\017overall_support\030" +
      "\005 \001(\0132\013.vg.Support\022\035\n\025allele_log_likelih" +
      "ood\030\006 \003(\001\"\203\001\n\010Genotype\022\016\n\006allele\030\001 \003(\005\022\021",
      "\n\tis_phased\030\002 \001(\010\022\022\n\nlikelihood\030\003 \001(\001\022\026\n" +
      "\016log_likelihood\030\004 \001(\001\022\021\n\tlog_prior\030\005 \001(\001" +
      "\022\025\n\rlog_posterior\030\006 \001(\001\"Y\n\007Support\022\017\n\007qu" +
      "ality\030\001 \001(\001\022\017\n\007forward\030\002 \001(\001\022\017\n\007reverse\030" +
      "\003 \001(\001\022\014\n\004left\030\004 \001(\001\022\r\n\005right\030\005 \001(\001\"n\n\017Lo" +
      "cationSupport\022\034\n\007support\030\001 \001(\0132\013.vg.Supp" +
      "ort\022\030\n\004edge\030\002 \001(\0132\010.vg.EdgeH\000\022\021\n\007node_id" +
      "\030\003 \001(\003H\000B\020\n\016oneof_location\";\n\013Translatio" +
      "n\022\026\n\004from\030\001 \001(\0132\010.vg.Path\022\024\n\002to\030\002 \001(\0132\010." +
      "vg.Path*9\n\tSnarlType\022\020\n\014UNCLASSIFIED\020\000\022\017",
      "\n\013ULTRABUBBLE\020\001\022\t\n\005UNARY\020\002b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.StructProto.getDescriptor(),
        }, assigner);
    internal_static_vg_Graph_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_vg_Graph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Graph_descriptor,
        new java.lang.String[] { "Node", "Edge", "Path", });
    internal_static_vg_Node_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_vg_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Node_descriptor,
        new java.lang.String[] { "Sequence", "Name", "Id", });
    internal_static_vg_Edge_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_vg_Edge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Edge_descriptor,
        new java.lang.String[] { "From", "To", "FromStart", "ToEnd", "Overlap", });
    internal_static_vg_Edit_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_vg_Edit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Edit_descriptor,
        new java.lang.String[] { "FromLength", "ToLength", "Sequence", });
    internal_static_vg_Mapping_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_vg_Mapping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Mapping_descriptor,
        new java.lang.String[] { "Position", "Edit", "Rank", });
    internal_static_vg_Position_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_vg_Position_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Position_descriptor,
        new java.lang.String[] { "NodeId", "Offset", "IsReverse", "Name", });
    internal_static_vg_Path_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_vg_Path_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Path_descriptor,
        new java.lang.String[] { "Name", "Mapping", "IsCircular", "Length", });
    internal_static_vg_Alignment_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_vg_Alignment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Alignment_descriptor,
        new java.lang.String[] { "Sequence", "Path", "Name", "Quality", "MappingQuality", "Score", "QueryPosition", "SampleName", "ReadGroup", "FragmentPrev", "FragmentNext", "IsSecondary", "Identity", "Fragment", "Locus", "Refpos", "ReadPaired", "ReadMapped", "MateUnmapped", "ReadOnReverseStrand", "MateOnReverseStrand", "SoftClipped", "DiscordantInsertSize", "Uniqueness", "Correct", "SecondaryScore", "FragmentScore", "MateMappedToDisjointSubgraph", "FragmentLengthDistribution", "TimeUsed", "ToCorrect", "CorrectlyMapped", "Annotation", });
    internal_static_vg_MultipathAlignment_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_vg_MultipathAlignment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_MultipathAlignment_descriptor,
        new java.lang.String[] { "Sequence", "Quality", "Name", "SampleName", "ReadGroup", "Subpath", "MappingQuality", "Start", "PairedReadName", "Annotation", });
    internal_static_vg_Subpath_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_vg_Subpath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Subpath_descriptor,
        new java.lang.String[] { "Path", "Next", "Score", });
    internal_static_vg_KmerMatch_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_vg_KmerMatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_KmerMatch_descriptor,
        new java.lang.String[] { "Sequence", "NodeId", "Position", "Backward", });
    internal_static_vg_BasePileup_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_vg_BasePileup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_BasePileup_descriptor,
        new java.lang.String[] { "RefBase", "NumBases", "Bases", "Qualities", });
    internal_static_vg_NodePileup_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_vg_NodePileup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_NodePileup_descriptor,
        new java.lang.String[] { "NodeId", "BasePileup", });
    internal_static_vg_EdgePileup_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_vg_EdgePileup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_EdgePileup_descriptor,
        new java.lang.String[] { "Edge", "NumReads", "NumForwardReads", "Qualities", });
    internal_static_vg_Pileup_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_vg_Pileup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Pileup_descriptor,
        new java.lang.String[] { "NodePileups", "EdgePileups", });
    internal_static_vg_Snarl_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_vg_Snarl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Snarl_descriptor,
        new java.lang.String[] { "Type", "Start", "End", "Parent", "Name", "StartSelfReachable", "EndSelfReachable", "StartEndReachable", "DirectedAcyclicNetGraph", });
    internal_static_vg_Visit_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_vg_Visit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Visit_descriptor,
        new java.lang.String[] { "NodeId", "Snarl", "Backward", });
    internal_static_vg_SnarlTraversal_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_vg_SnarlTraversal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_SnarlTraversal_descriptor,
        new java.lang.String[] { "Visit", "Name", });
    internal_static_vg_Locus_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_vg_Locus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Locus_descriptor,
        new java.lang.String[] { "Name", "Allele", "Support", "Genotype", "OverallSupport", "AlleleLogLikelihood", });
    internal_static_vg_Genotype_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_vg_Genotype_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Genotype_descriptor,
        new java.lang.String[] { "Allele", "IsPhased", "Likelihood", "LogLikelihood", "LogPrior", "LogPosterior", });
    internal_static_vg_Support_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_vg_Support_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Support_descriptor,
        new java.lang.String[] { "Quality", "Forward", "Reverse", "Left", "Right", });
    internal_static_vg_LocationSupport_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_vg_LocationSupport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_LocationSupport_descriptor,
        new java.lang.String[] { "Support", "Edge", "NodeId", "OneofLocation", });
    internal_static_vg_Translation_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_vg_Translation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vg_Translation_descriptor,
        new java.lang.String[] { "From", "To", });
    com.google.protobuf.StructProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
