/**
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.7/userguide/java_library_plugin.html
 */

plugins {
    
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'

    // Apply the application plugin for bundling the results
    id 'application'

}

run {
    mainClassName = "FRFinder"
}

dependencies {

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.6.1'

    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java-util
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.6.1'

    // https://mvnrepository.com/artifact/org.graphstream/gs-core
    compile group: 'org.graphstream', name: 'gs-core', version: '1.3'

    // https://mvnrepository.com/artifact/guru.nidi/graphviz-java
    compile group: 'guru.nidi', name: 'graphviz-java', version: '0.8.0'

    // https://mvnrepository.com/artifact/org.biojava/biojava-core
    compile group: 'org.biojava', name: 'biojava-core', version: '5.2.0'

    // http://dev.davidsoergel.com/nexus/content/repositories/releases
    compile group: 'edu.berkeley.compbio', name: 'jlibsvm', version: '0.911'

}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven {
          url 'http://davidsoergel.com/nexus/content/repositories/releases'
    }
    maven {
          url 'http://davidsoergel.com/nexus/content/repositories/thirdparty'
    }
}

compileJava {
    options.compilerArgs += ["-Xlint:unchecked"]
}
