/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'war'
    id 'application'
    id "com.bmuschko.cargo" version "2.9.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.20.0'
    // https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-servlet-api
    implementation group: 'org.apache.tomcat', name: 'tomcat-servlet-api', version: '9.0.71'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    // https://mvnrepository.com/artifact/org.apache.xmlbeans/xmlbeans
    implementation group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '5.1.1'

    // https://mvnrepository.com/artifact/commons-lang/commons-lang
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.5.0'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.7'
    
    // these are ALL required
    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.35'
    implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.35'
    implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.35'

    // these are for JSON-B serialization
    implementation group: 'javax.json.bind', name: 'javax.json.bind-api', version: '1.0'

    // https://mvnrepository.com/artifact/org.eclipse/yasson
    implementation group: 'org.eclipse', name: 'yasson', version: '1.0.11'

    // https://mvnrepository.com/artifact/io.pinecone/pinecone-client
    implementation group: 'io.pinecone', name: 'pinecone-client', version: '0.2.2'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.26'

    // https://mvnrepository.com/artifact/com.theokanning.openai-gpt3-java/service
    implementation group: 'com.theokanning.openai-gpt3-java', name: 'service', version: '0.11.1'
    // https://mvnrepository.com/artifact/com.theokanning.openai-gpt3-java/client
    implementation group: 'com.theokanning.openai-gpt3-java', name: 'client', version: '0.11.1'
    // https://mvnrepository.com/artifact/com.theokanning.openai-gpt3-java/api
    implementation group: 'com.theokanning.openai-gpt3-java', name: 'api', version: '0.11.1'

    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-core
    implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.1'
    // https://mvnrepository.com/artifact/org.javassist/javassist
    implementation group: 'org.javassist', name: 'javassist', version: '3.25.0-GA'

    // local jars
    implementation fileTree(dir: 'libs', include: '*.jar')
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

compileJava {
    options.warnings = true
    options.deprecation = true
    // options.compilerArgs += ["-Xdoclint:none", "-Xlint:none", "-nowarn"]
}


cargo {
    containerId = 'tomcat9x'
    port = 8080
    deployable {
        context = 'legumebot'
    }
    remote {
	protocol = 'http'
        hostname = 'localhost'
        username = 'tomcat'
        password = 'tomcat#manager'
    }
}

