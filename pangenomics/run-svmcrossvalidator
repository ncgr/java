#!/bin/sh
# usage: SvmCrossValidator [options]
#  -C,--cost <arg>                       cost parameter C in C-SVC,
#                                        epsilon-SVR and nu-SVR [1]
#  -coef0,--kernel-coef0 <arg>           coef0 parameter in kernel function
#                                        [0]
#  -d,--kernel-degree <arg>              degree parameter in kernel function
#                                        [3]
#  -e,--epsilon <arg>                    set tolerance of termination
#                                        criterion [0.001]
#  -ep,--epsilon-loss <arg>              epsilon value in loss function of
#                                        epsilon-SVR [0.1]
#  -gamma,--kernel-gamma <arg>           gamma parameter in kernel function
#                                        [1/#features]
#  -i,--inputfile <arg>                  input file containing feature
#                                        vectors in SVM format
#  -k,--nrfold <arg>                     k value for k-fold cross-validation
#                                        [10]
#  -m,--cachesize <arg>                  set cache memory size in MB [100]
#  -nu,--nu <arg>                        nu parameter of nu-SVC, one-class
#                                        SVM, and nu-SVR [0.5]
#  -prob,--probability-estimates <arg>   toggle whether to train a SVC or
#                                        SVR model for probability estimates
#                                        (0/1) [0]
#  -s,--svm-type <arg>                   type of SVM: 0=C-SVC 1=nu-SVC
#                                        2=one-class SVM 3=epsilon-SVR
#                                        4=nu-SVR [0]
#  -sh,--shrinking <arg>                 toggle whether to use the shrinking
#                                        heuristics (0/1) [1]
#  -t,--kernel-type <arg>                type of kernel function: 0=linear
#                                        1=polynomial 2=radial basis
#                                        function 3=sigmoid 4=precomputed
#                                        kernel [2]
#  -v,--verbose                          verbose output
#  -w,--weight <arg>                     multiply parameter C of class i by
#                                        weight, for C-SVC [1]

INPUTPREFIX=$1
C=$2
gamma=$3

# cross validate on full dataset
SCALE=$INPUTPREFIX.scale.txt
ARGS="-k 10 -C $C -gamma $gamma"

echo "SvmCrossValidator $ARGS"
java -cp "build/install/fr/lib/*" org.ncgr.svm.SvmCrossValidator $ARGS -i $SCALE > "$INPUTPREFIX.crossvalidation.txt"
